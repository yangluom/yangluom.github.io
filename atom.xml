<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时间仍在，我们飞逝</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-19T17:09:57.713Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Yang Lu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello-World之后</title>
    <link href="http://yoursite.com//blog/2019/08/09/Hello-World%E4%B9%8B%E5%90%8E/"/>
    <id>http://yoursite.com//blog/2019/08/09/Hello-World之后/</id>
    <published>2019-08-09T14:06:44.000Z</published>
    <updated>2019-08-19T17:09:57.713Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h1><p>  知道Github能做博客已经有相当长一段时间了，但是，由于能力、精力等多种因素的限制，博客一直处于下图的状态：</p><p><img src="https://i.loli.net/2019/08/09/rQ81lwcifpyDeTs.jpg" alt="01.jpg"></p><p>  说来，十分惭愧，这篇blog也已经从最初的8.09写到了08.12。<br>  作为“Hello， World！”之后的第一篇博客，主要是给自己使用GitPage搭建Blog做个记录，当然，如果能够帮助到后来的小伙伴们，那就更好啦！<br>  工欲善其事必先利其器，然额，贯于GitPage搭建bolg的步骤，目前网上的各种教程较为分散，主要是以成功的在GitPage上成功实现Fork及访问为主，所以，也给很多小伙伴带来了神奇的困惑，自然而然冒出来的问题便是，然后嘞？然后我再咋搞呢？所以，本着如何较系统地从入门到实践的角度，记录下本次从搭建到第一篇博客发布的过程，也算是从本人的角度对使用Github Page搭建博客过程的一个Trouble Shotting的记录。</p> <a id="more"></a><h2 id="本文主要参考以下文章实现"><a href="#本文主要参考以下文章实现" class="headerlink" title="本文主要参考以下文章实现"></a>本文主要参考以下文章实现</h2><blockquote><ol><li><a href="https://div.io/topic/1691" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li><li><a href="http://www.54tianzhisheng.cn/2017/12/18/hexo-yilia/" target="_blank" rel="noopener">Hexo + yilia 搭建博客可能会遇到的所有疑问</a></li><li><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">Markdown基本语法</a></li><li><a href="https://blog.csdn.net/assassinsshadow/article/details/79820299" target="_blank" rel="noopener">windows 下 git bash 打开特定的文件目录</a></li><li><a href="http://www.w3cschool.cc/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网: 快速、简洁且高效的博客框架</a></li><li><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">用Hexo写出第一篇博客</a></li></ol></blockquote><h1 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h1><h2 id="1-1-申请Github账号，并创建自己博客的Repositories"><a href="#1-1-申请Github账号，并创建自己博客的Repositories" class="headerlink" title="1.1 申请Github账号，并创建自己博客的Repositories"></a>1.1 申请Github账号，并创建自己博客的<strong>Repositories</strong></h2><p>  想来，这个环节应该是最简单的，网上有无数的教程阔以帮助实现，具体过程不再赘述。<br>  当然，链接提供是必备的啦，详看参考文章1。<br>  需要特别指出的是，每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，对，这个username就是你自己的用户名，这是特殊的命名约定。<br>  比如我的用户名是yangluom，我的blog仓库就是yangluom/yangluom.github.io这个啦。<br>  <img src="https://i.loli.net/2019/08/12/w6Gsdv2VhaPFjMB.jpg" alt="02.jpg"><br>  比方说你得用户名是abc123，那你就可以创建abc123.github.io这个Repositories（资源仓库）,并通过<a href="http://abc123.github.io" target="_blank" rel="noopener">http://abc123.github.io</a> 来访问你的个人主页。<br>  这里特别提醒一下，需要注意的个人主页的网站内容是在master分支下的。</p><h2 id="1-2-在本地下载、安装Hexo"><a href="#1-2-在本地下载、安装Hexo" class="headerlink" title="1.2 在本地下载、安装Hexo"></a>1.2 在本地下载、安装Hexo</h2><p>  嗯，这可能是让人小纠结的问题，我既然要在github上搭博客，直接在github上操作不就完了么？其实并不是，这个过程是，你必须先在本地搞定你自己静态网页的内容后，然后部署到github上。<br>  所以，要先实现本地系统的环境配置。要使用Hexo，需要在你的系统中支持Nodejs以及Git。（本部分主要参考<a href="https://div.io/topic/1691" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a>，如有雷同，纯属必然，并无偶然。。。）</p><h3 id="1-2-1-安装Node-js"><a href="#1-2-1-安装Node-js" class="headerlink" title="1.2.1 安装Node.js"></a>1.2.1 安装Node.js</h3><p>  <a href="https://nodejs.org/download/" target="_blank" rel="noopener">下载Node.js</a><br>  由于我使用的操作系统是64位WIN10系统，所以，仅就该系统下如何安装予以展示，其他操作系统的安装，可以参考下文进行：<br>  参考地址：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a><br>  这次安装，我采用了Node.js v10.16.3 LTS(长期支持版本)版本，如果目前版本已过时，大家可以根据自己使用的操作系统，去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js的官网</a>下载最新的LTS版本软件：<br>  <img src="https://i.loli.net/2019/08/18/hGOUydvKgVPkIF5.jpg" alt="00.jpg"></p><p>  具体安装如下，其他版本安装应该类似：<br>  双击已经下载的安装包，将出现如下界面，点击“Next”继续就可以了；<br>  <img src="https://i.loli.net/2019/08/18/hGOUydvKgVPkIF5.jpg" alt="00.jpg"></p><p>   勾选接受协议选项，点击 next（下一步） 按钮 :<br>   <img src="https://i.loli.net/2019/08/18/NKG9zf6y2qTHRcF.jpg" alt="002.jpg"></p><p>   Node.js默认安装目录为 “C:\Program Files\nodejs&quot; , 你可以修改目录，并点击 next（下一步）：<br>   <img src="https://i.loli.net/2019/08/18/vHh78EGpuztckre.jpg" alt="003.jpg"></p><p>   点击树形图标来选择你需要的安装模式 （如无特殊需求，选项默认就可以啦）, 然后点击下一步 next（下一步），继续进行安装：<br>   <img src="https://i.loli.net/2019/08/18/7iPCVpOgwGy15Nu.jpg" alt="004.jpg"></p><p>   点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）；然后，点击 Finish（完成）按钮退出安装向导，至此，Node.js就已经安装在我们的电脑上啦 。</p><p>   最后，检测一下PATH环境变量是否配置了Node.js：<br>   点击开始→ 运行→ 输入”cmd” → 输入命令”path”，输出如下结果：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">luyou</span>&gt;<span class="title">path</span></span></span><br><span class="line"><span class="function"><span class="title">PATH</span>=<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">system32</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">Wbem</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">WindowsPowerShell</span>\<span class="title">v1</span>.0\;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">OpenSSH</span>\;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MacType</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">nodejs</span>\;<span class="title">D</span>:\<span class="title">python</span>\<span class="title">pywin</span>\<span class="title">Scripts</span>\;<span class="title">D</span>:\<span class="title">python</span>\<span class="title">pywin</span>\;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">Microsoft</span>\<span class="title">WindowsApps</span>;<span class="title">D</span>:\<span class="title">moe2014</span>\<span class="title">bin</span>;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">GitHubDesktop</span>\<span class="title">bin</span>;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Roaming</span>\<span class="title">npm</span></span></span><br></pre></td></tr></table></figure><p>   我们可以看到环境变量中已经包含了C:\Program Files\nodejs\</p><h3 id="1-2-2-安装Git"><a href="#1-2-2-安装Git" class="headerlink" title="1.2.2 安装Git"></a>1.2.2 安装Git</h3><p>  下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">http://git-scm.com/download/</a></p><blockquote><p>此处可能有的小坑，即git安装后，可能需要在指定目录打开，此时，可以如下操作：</p></blockquote><blockquote><p>找到gitbash快捷图标，右键，点击属性<br>将目标： –cd -to-home 删掉<br>起始位置填写即将打开的路径，如下图。点击【应用】【确定】。</p></blockquote><p><img src="https://i.loli.net/2019/08/13/Y2EMAmZ4jvkxDes.jpg" alt="03.jpg"></p><h3 id="1-2-3-安装Hexo"><a href="#1-2-3-安装Hexo" class="headerlink" title="1.2.3 安装Hexo"></a>1.2.3 安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> cd g:/hexo</span><br><span class="line"><span class="meta">$</span> npm install hexo-cli -g</span><br><span class="line"><span class="meta">$</span> hexo init blog</span><br><span class="line"><span class="meta">$</span> cd blog</span><br><span class="line"><span class="meta">$</span> npm install</span><br><span class="line"><span class="meta">$</span> hexo g # 或者hexo generate</span><br><span class="line"><span class="meta">$</span> hexo s # 或者hexo server，此时，如果系统没报错的话，即可在http://localhost:4000/ 查看</span><br></pre></td></tr></table></figure><p>现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。 </p><p>目前我安装所用的本地环境如下：(可以通过hexo -v查看)<br><img src="https://i.loli.net/2019/08/15/AabERYQyLnqUIto.jpg" alt="04.jpg"></p><p>在这里说下Hexo常用的几个命令：</p><blockquote><ol><li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li><li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li><li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> hexo new "postName"#新建文章</span><br><span class="line"><span class="meta">  $</span> hexo new page "pageName"#新建页面</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></li></ol></blockquote><p>常用简写</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> hexo n == hexo new#新建文章</span><br><span class="line"><span class="meta">  $</span> hexo g == hexo generate#生成静态文件</span><br><span class="line"><span class="meta">  $</span> hexo s == hexo server#启动本地web服务</span><br><span class="line"><span class="meta">  $</span> hexo d == hexo deploy#部署播客到远端</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>常用组合</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> hexo d -g #生成部署</span><br><span class="line"><span class="meta">  $</span> hexo s -g #生成预览</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="1-2-4-Hexo主题设置"><a href="#1-2-4-Hexo主题设置" class="headerlink" title="1.2.4 Hexo主题设置"></a>1.2.4 Hexo主题设置</h3><p>这里以主题yilia为例进行说明（也就是本博客的主题啦）。</p><h4 id="1-2-4-1-安装主题"><a href="#1-2-4-1-安装主题" class="headerlink" title="1.2.4.1 安装主题"></a>1.2.4.1 安装主题</h4><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> hexo clean</span><br><span class="line"><span class="meta">  $</span> git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h4 id="1-2-4-2-更新主题"><a href="#1-2-4-2-更新主题" class="headerlink" title="1.2.4.2 更新主题"></a>1.2.4.2 更新主题</h4><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> cd themes/yilia</span><br><span class="line"><span class="meta">  $</span> git pull</span><br><span class="line"><span class="meta">  $</span> hexo g # 生成</span><br><span class="line"><span class="meta">  $</span> hexo s # 启动本地web服务器</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>现在打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，会看到我们已经应用了一个新的主题。</p><h2 id="1-3-本地Hexo部署到Github"><a href="#1-3-本地Hexo部署到Github" class="headerlink" title="1.3. 本地Hexo部署到Github"></a>1.3. 本地Hexo部署到Github</h2><p> 这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过<a href="http://abc123.github.io访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。" target="_blank" rel="noopener">http://abc123.github.io访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。</a></p><blockquote><p>首先需要明白所谓部署到github的原理。</p></blockquote><blockquote><ol><li>之前步骤中在Github上创建的那个特别的repo（abc123.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://abc123.github.io来直接访问。" target="_blank" rel="noopener">http://abc123.github.io来直接访问。</a></li><li>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</li><li>需要将hexo生成的静态网站，提交(git commit)到github上。<br>明白了原理，怎么做自然就清晰了。</li></ol></blockquote><h3 id="1-3-1-使用hexo-deploy部署"><a href="#1-3-1-使用hexo-deploy部署" class="headerlink" title="1.3.1. 使用hexo deploy部署"></a>1.3.1. 使用hexo deploy部署</h3><p>hexo deploy可以部署到很多平台，具体可以参考<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Hexo官网的这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:abc123/abc123.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>然后在命令行中执行</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>即可完成部署。</p><p>注意需要提前安装一个扩展：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>在实际操作过程中，我在”hexo d”这一步碰到了神奇的问题，希望能够帮到碰到类似问题的小伙伴，具体如下：<br>当我输入”hexo d”命令后，系统提示：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p><img src="https://i.loli.net/2019/08/18/ChR8GM6vJioxg7y.jpg" alt="05.jpg"></p><p>于是,根据linghucong 大的教程，进行安装:</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">&gt;</span> npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</span><br><span class="line"><span class="meta">&gt;</span> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line"><span class="meta">&gt;</span> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> + hexo-deployer-git@1.0.0</span><br><span class="line"><span class="meta">&gt;</span> added 24 packages from 10 contributors and audited 9166 packages in 37.295s</span><br><span class="line"><span class="meta">&gt;</span> found 1 low severity vulnerability</span><br><span class="line"><span class="meta">&gt;</span> run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>其实，这里已经明确报过错误信息啦：“npm WARN <a href="mailto:babel-eslint@10.0.2" target="_blank" rel="noopener">babel-eslint@10.0.2</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.”<br>但我当时并木有看懂，就继续根据提示操作了下：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span> npm audit fix</span><br><span class="line">  npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</span><br><span class="line">  npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line">  npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> up to date in 5.492s</span><br><span class="line"><span class="meta">&gt;</span> fixed 0 of 1 vulnerability in 9166 scanned packages</span><br><span class="line"><span class="meta">&gt;</span>    1 vulnerability required manual review and could not be updated</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>但，并木有解决问题，于是又转回了报错的提示：“npm WARN <a href="mailto:babel-eslint@10.0.2" target="_blank" rel="noopener">babel-eslint@10.0.2</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.”，google后的解决方案是：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ npm install eslint@4.x babel-eslint@8 --save-dev</span><br><span class="line"><span class="meta">&gt;</span> npm WARN deprecated circular-json@0.3.3: CircularJSON is in maintenance only, flatted is its successor.</span><br><span class="line"><span class="meta">&gt;</span> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line"><span class="meta">&gt;</span> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> + babel-eslint@8.2.6</span><br><span class="line"><span class="meta">&gt;</span> + eslint@4.19.1</span><br><span class="line"><span class="meta">&gt;</span> added 108 packages from 125 contributors, updated 12 packages and audited 9456 packages in 63.142s</span><br><span class="line"><span class="meta">&gt;</span> found 1 low severity vulnerability</span><br><span class="line"><span class="meta">&gt;</span>   run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>继续跟着提示操作：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ npm audit fix</span><br><span class="line"><span class="meta">&gt;</span> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line"><span class="meta">&gt;</span> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> up to date in 7.582s</span><br><span class="line"><span class="meta">&gt;</span> fixed 0 of 1 vulnerability in 9456 scanned packages</span><br><span class="line"><span class="meta">&gt;</span>   1 vulnerability required manual review and could not be updated</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>于是，这下就可以成功使用“$ npm install hexo-deployer-git –save”命令，安装扩展了：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ npm install hexo-deployer-git --save</span><br><span class="line"><span class="meta">&gt;</span> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line"><span class="meta">&gt;</span> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> + hexo-deployer-git@1.0.0</span><br><span class="line"><span class="meta">&gt;</span> updated 1 package and audited 9456 packages in 23.449s</span><br><span class="line"><span class="meta">&gt;</span> found 1 low severity vulnerability</span><br><span class="line"><span class="meta">&gt;</span>   run `npm audit fix` to fix them, or `npm audit` for details</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>安装完“hexo-deployer-git”扩展后，本以为就阔以使用“$ hexo d”命令实现部署了，然而：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ hexo d</span><br><span class="line"><span class="meta">&gt;</span> INFO  Deploying: git</span><br><span class="line"><span class="meta">&gt;</span> INFO  Setting up Git deployment...</span><br><span class="line"><span class="meta">&gt;</span> Initialized empty Git repository in H:/blog/hexo/blog/.deploy_git/.git/</span><br><span class="line"><span class="meta">&gt;</span> [master (root-commit) 5cd33de] First commit</span><br><span class="line"><span class="meta">&gt;</span>  1 file changed, 0 insertions(+), 0 deletions(-)</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 placeholder</span><br><span class="line"><span class="meta">&gt;</span> INFO  Clearing .deploy_git folder...</span><br><span class="line"><span class="meta">&gt;</span> INFO  Copying files from public folder...</span><br><span class="line"><span class="meta">&gt;</span> INFO  Copying files from extend dirs...</span><br><span class="line"><span class="meta">&gt;</span> [master 06d32bd] Site updated: 2019-08-07 00:10:46</span><br><span class="line"><span class="meta">&gt;</span>  19 files changed, 2616 insertions(+)</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 2019/07/25/hello-world/index.html</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 archives/2019/07/index.html</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 archives/2019/index.html</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 archives/index.html</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/default-skin.b257fa.svg</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/iconfont.16acc2.ttf</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/iconfont.45d7ee.svg</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/iconfont.8c627f.woff</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/iconfont.b322fa.eot</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 fonts/tooltip.4004ff.svg</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 img/default-skin.png</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 img/preloader.gif</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 img/scrollbar_arrow.png</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 index.html</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 main.0cf68a.css</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 main.0cf68a.js</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 mobile.992cbe.js</span><br><span class="line"><span class="meta">&gt;</span>  delete mode 100644 placeholder</span><br><span class="line"><span class="meta">&gt;</span>  create mode 100644 slider.e37972.js</span><br><span class="line"><span class="meta">&gt;</span> Permission denied (publickey).</span><br><span class="line"><span class="meta">&gt;</span> fatal: Could not read from remote repository.</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> Please make sure you have the correct access rights</span><br><span class="line"><span class="meta">&gt;</span> and the repository exists.</span><br><span class="line"><span class="meta">&gt;</span> FATAL Something's wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="line"><span class="meta">&gt;</span> Error: Spawn failed</span><br><span class="line"><span class="meta">&gt;</span>     at ChildProcess.&lt;anonymous&gt; (H:\blog\hexo\blog\node_modules\hexo-util\lib\spawn.js:52:19)</span><br><span class="line"><span class="meta">&gt;</span>     at ChildProcess.emit (events.js:198:13)</span><br><span class="line"><span class="meta">&gt;</span>     at ChildProcess.cp.emit (H:\blog\hexo\blog\node_modules\cross-spawn\lib\enoent.js:40:29)</span><br><span class="line"><span class="meta">&gt;</span>     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>Permission denied，是的“Permission denied (publickey). fatal: Could not read from remote repository.”。这就是这步的报错信息啦，嗯，这表明，并木有成功配置GitHub 的ssh链接密钥，或者并没有生成ssh key，如不确定，可以在ternimal下执行：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　cd ~/.ssh ls</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>来查看是否有文件id_rsa以及文件id_rsa.pub</p><p>如果你没有ssh key的话，在ternimal下输入命令：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail@example.com"，</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p> youremail@example.com 改为自己的邮箱即可，途中会让你输入密码啥的，不需要管，一路回车即可，会生成你的ssh key。（如果重新生成的话会覆盖之前的ssh key。）</p><blockquote><p>Your identification has been saved in /home/tekkub/.ssh/id_rsa.<br>Your public key has been saved in /home/tekkub/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:(大概43位的字母、数字或符号的排布) <a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a></p></blockquote><p>进入github账户中</p><p>点击右上角图像，打开设置，里面有添加ssh密钥，将拷贝的公钥内容粘贴到里面，标签随便写，最好是让自己知道是哪一台主机的公钥。然后点击添加，这个时候就在github账户中添加好了ssh公钥</p><p><img src="https://i.loli.net/2019/08/19/zt6YEIdVHbfnqPj.jpg" alt="06.jpg"></p><p>这时候，就可以使用“$ hexo d”命令实现部署了：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ hexo d</span><br><span class="line"><span class="meta">&gt;</span> INFO  Deploying: git</span><br><span class="line"><span class="meta">&gt;</span> INFO  Clearing .deploy_git folder...</span><br><span class="line"><span class="meta">&gt;</span> INFO  Copying files from public folder...</span><br><span class="line"><span class="meta">&gt;</span> INFO  Copying files from extend dirs...</span><br><span class="line"><span class="meta">&gt;</span> On branch master</span><br><span class="line"><span class="meta">&gt;</span> nothing to commit, working tree clean</span><br><span class="line"><span class="meta">&gt;</span> Counting objects: 32, done.</span><br><span class="line"><span class="meta">&gt;</span> Delta compression using up to 8 threads.</span><br><span class="line"><span class="meta">&gt;</span> Compressing objects: 100% (25/25), done.</span><br><span class="line"><span class="meta">&gt;</span> Writing objects: 100% (32/32), 150.47 KiB | 1.95 MiB/s, done.</span><br><span class="line"><span class="meta">&gt;</span> Total 32 (delta 5), reused 0 (delta 0)</span><br><span class="line"><span class="meta">&gt;</span> remote: Resolving deltas: 100% (5/5), done.</span><br><span class="line"><span class="meta">&gt;</span> To github.com:abc123/abc123.github.io.git</span><br><span class="line"><span class="meta">&gt;</span>  * [new branch]      HEAD -&gt; master</span><br><span class="line"><span class="meta">&gt;</span> Branch master set up to track remote branch master from git@github.com:abc123/abc123.github.io.git.</span><br><span class="line"><span class="meta">&gt;</span> INFO  Deploy done: git</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>部署结束后，可以运行</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/abc123/abc123.github.io.git .deploy/abc123.github.io</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>命令，将部署的文件同步回本地以归档，需要特别注意的是在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ git clone https://github.com/abc123/abc123.github.io.git .deploy/abc123.github.io</span><br><span class="line"><span class="meta">&gt;</span> Cloning into '.deploy/yangluom.github.io'...</span><br><span class="line"><span class="meta">&gt;</span> remote: Enumerating objects: 32, done.</span><br><span class="line"><span class="meta">&gt;</span> remote: Total 32 (delta 0), reused 0 (delta 0), pack-reused 32</span><br><span class="line"><span class="meta">&gt;</span> Unpacking objects: 100% (32/32), done.</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="1-4-开始“Hello，-World”之后的第一篇博客"><a href="#1-4-开始“Hello，-World”之后的第一篇博客" class="headerlink" title="1.4. 开始“Hello， World”之后的第一篇博客"></a>1.4. 开始“Hello， World”之后的第一篇博客</h2><h3 id="1-4-1-配置文件命名规则和路由地址"><a href="#1-4-1-配置文件命名规则和路由地址" class="headerlink" title="1.4.1 配置文件命名规则和路由地址"></a>1.4.1 配置文件命名规则和路由地址</h3><p><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></p><h3 id="1-4-2-创建博客"><a href="#1-4-2-创建博客" class="headerlink" title="1.4.2 创建博客"></a>1.4.2 创建博客</h3><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E5%86%99%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E5%86%99%E5%8D%9A%E5%AE%A2</a></p><p><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></p><p>定位到我们的hexo根目录，执行命令：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new 'my-first-blog'</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><p>hexo会帮我们在./source/_posts下生成相关md文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> ll ./source/_posts/</span><br><span class="line">total 24</span><br><span class="line">-rw-r--r-- 1 luyou 197609 18149 8月  19 01:12 2019-08-09-Hello-World之后.md</span><br><span class="line">-rw-r--r-- 1 luyou 197609   826 7月  25 21:09 hello-world.md</span><br></pre></td></tr></table></figure><h3 id="1-4-3-写作"><a href="#1-4-3-写作" class="headerlink" title="1.4.3 写作"></a>1.4.3 写作</h3><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><h3 id="1-4-4-发布"><a href="#1-4-4-发布" class="headerlink" title="1.4.4 发布"></a>1.4.4 发布</h3><p>部署修改<br>通过 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>部署本地的博客文件到github</p><p>上面的命令只是在操作正确的状态下可行，但是，实际操作中，大家都懂的，总有各种神奇的bug，比方我，再一次踩坑了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/2019-08-09-Hello-World之后.md</span><br><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class="line"></span><br><span class="line">    ^</span><br><span class="line">    at generateError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:167:10)</span><br><span class="line">    at throwError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:173:9)</span><br><span class="line">    at readBlockMapping (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1073:9)</span><br><span class="line">    at composeNode (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12)</span><br><span class="line">    at readDocument (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1519:3)</span><br><span class="line">    at loadDocuments (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1575:5)</span><br><span class="line">    at Object.load (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1596:19)</span><br><span class="line">    at parseYAML (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:80:21)</span><br><span class="line">    at parse (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:56:12)</span><br><span class="line">    at Promise.all.spread (H:\blog\hexo\blog\node_modules\hexo\lib\plugins\processor\post.js:48:20)</span><br><span class="line">    at tryCatcher (H:\blog\hexo\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:514:35)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:574:18)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">    at Promise._settlePromises (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:699:18)</span><br><span class="line">    at Promise._fulfill (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:643:18)</span><br><span class="line">    at PromiseArray._resolve (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:126:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:144:14)</span><br><span class="line">    at PromiseArray._iterate (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:114:31)</span><br><span class="line">    at PromiseArray.init [as _init] (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:78:10)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:571:21)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">INFO  Files loaded in 473 ms</span><br><span class="line">INFO  Generated: content.json</span><br><span class="line">INFO  1 files generated in 455 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/2019-08-09-Hello-World之后.md</span><br><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class="line"></span><br><span class="line">    ^</span><br><span class="line">    at generateError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:167:10)</span><br><span class="line">    at throwError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:173:9)</span><br><span class="line">    at readBlockMapping (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1073:9)</span><br><span class="line">    at composeNode (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12)</span><br><span class="line">    at readDocument (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1519:3)</span><br><span class="line">    at loadDocuments (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1575:5)</span><br><span class="line">    at Object.load (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1596:19)</span><br><span class="line">    at parseYAML (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:80:21)</span><br><span class="line">    at parse (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:56:12)</span><br><span class="line">    at Promise.all.spread (H:\blog\hexo\blog\node_modules\hexo\lib\plugins\processor\post.js:48:20)</span><br><span class="line">    at tryCatcher (H:\blog\hexo\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:514:35)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:574:18)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">    at Promise._settlePromises (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:699:18)</span><br><span class="line">    at Promise._fulfill (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:643:18)</span><br><span class="line">    at PromiseArray._resolve (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:126:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:144:14)</span><br><span class="line">    at PromiseArray._iterate (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:114:31)</span><br><span class="line">    at PromiseArray.init [as _init] (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:78:10)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:571:21)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>反复告诫自己，待人接物时，要看别人的行动，“嘴上说不要，身体很诚实”的节奏俯拾即是，然而，自己着手搞个博客这种东西就相对单纯很多，只要你错，结果就是被显示打一计耳光，还让自己摸不到头脑，看，这里又是：YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1。<br>这步的解决，是查到了<a href="https://www.cnblogs.com/wangyuehan/p/9864830.html" target="_blank" rel="noopener">王约翰的网络日志</a>,才解决掉“博客写好了，怎么发出去？我又错在哪了？真<strong><sup>TM</sup></strong>上火，教程咋又没写明的！！！”愤怒与困惑。。。。。。。。<br><img src="https://i.loli.net/2019/08/20/kl2zvna5HmRtSUr.jpg" alt="071.jpg"></p><p>修改结束后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">$</span> hexo g</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 796 ms</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: content.json</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: blog/2019/07/25/hello-world/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: archives/2019/07/index.html</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: archives/2019/08/index.html</span><br><span class="line">INFO  Generated: blog/2019/08/09/Hello-World之后/index.html</span><br><span class="line">INFO  Generated: tags/blog/index.html</span><br><span class="line">INFO  Generated: tags/GitPage/index.html</span><br><span class="line">INFO  12 files generated in 505 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span> hexo s</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>成功预览文章！</p><h1 id="2-其他进阶设置"><a href="#2-其他进阶设置" class="headerlink" title="2. 其他进阶设置"></a>2. 其他进阶设置</h1><h2 id="2-1-头像设置"><a href="#2-1-头像设置" class="headerlink" title="2.1 头像设置"></a>2.1 头像设置</h2><p>是滴，我，算是每一步都碰壁了吧。。。。。<br>头像设置照样搞了几天才在<a href="https://www.xiongtianci.com/2019/06/13/%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E8%B6%85%E8%B5%9E%E5%8D%9A%E5%AE%A2Hexo-NexT-GitHub-Pages%E7%9A%84%E8%B6%85%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%8C%96/" target="_blank" rel="noopener">xiongtianci</a>的po文中找到了头像图片的位置的正确描述形式！</p><blockquote><p>avatar: /images/avatar.gif</p></blockquote><p>否则，要么找不到图片，要么，在url前面会加上“<a href="http://localhost:4000/”的路径，是滴，那种情况下，头像依然看不到。。。。" target="_blank" rel="noopener">http://localhost:4000/”的路径，是滴，那种情况下，头像依然看不到。。。。</a><br>解决后的情况就是这样了：</p><p><img src="https://i.loli.net/2019/08/20/CcQxgfmzB2Gdua4.jpg" alt="081.jpg"></p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/a&gt;0. 前言&lt;/h1&gt;&lt;p&gt;  知道Github能做博客已经有相当长一段时间了，但是，由于能力、精力等多种因素的限制，博客一直处于下图的状态：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/08/09/rQ81lwcifpyDeTs.jpg&quot; alt=&quot;01.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;  说来，十分惭愧，这篇blog也已经从最初的8.09写到了08.12。&lt;br&gt;  作为“Hello， World！”之后的第一篇博客，主要是给自己使用GitPage搭建Blog做个记录，当然，如果能够帮助到后来的小伙伴们，那就更好啦！&lt;br&gt;  工欲善其事必先利其器，然额，贯于GitPage搭建bolg的步骤，目前网上的各种教程较为分散，主要是以成功的在GitPage上成功实现Fork及访问为主，所以，也给很多小伙伴带来了神奇的困惑，自然而然冒出来的问题便是，然后嘞？然后我再咋搞呢？所以，本着如何较系统地从入门到实践的角度，记录下本次从搭建到第一篇博客发布的过程，也算是从本人的角度对使用Github Page搭建博客过程的一个Trouble Shotting的记录。&lt;/p&gt;
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="GitPage" scheme="http://yoursite.com/tags/GitPage/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com//blog/2019/07/25/hello-world/"/>
    <id>http://yoursite.com//blog/2019/07/25/hello-world/</id>
    <published>2019-07-25T13:09:53.914Z</published>
    <updated>2019-08-19T16:03:45.347Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure> <a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
