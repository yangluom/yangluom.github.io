<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>时间仍在，我们飞逝</title>
  
  <subtitle>每天进步一点点</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yangluom.github.io/"/>
  <updated>2019-09-16T16:37:20.833Z</updated>
  <id>https://yangluom.github.io/</id>
  
  <author>
    <name>Yang Lu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>PDB文件格式说明</title>
    <link href="https://yangluom.github.io/2019/09/16/PDB%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/"/>
    <id>https://yangluom.github.io/2019/09/16/PDB文件格式说明/</id>
    <published>2019-09-16T15:18:35.000Z</published>
    <updated>2019-09-16T16:37:20.833Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="PDB文件格式说明"><a href="#PDB文件格式说明" class="headerlink" title="PDB文件格式说明"></a>PDB文件格式说明</h1><p>本文转自：<a href="https://jerkwin.github.io/2015/06/05/PDB文件格式说明/" target="_blank" rel="noopener"><strong>哲●科●文Jerkwin</strong></a></p><p>PDB(Protein Data Bank)是一种标准文件格式, 其中包含原子的坐标等信息, 提交给 Protein Data Bank at the Research Collaboratory for Structural Bioinformatics (RCSB) 的结构都使用这种标准格式. 这里整理网上已有的一些资料, 对PDB格式做个简短介绍. 对大多数用户而言, 了解这些内容就够了, 但对那些需要创建PDB文件的用户, 请参考<a href="http://www.wwpdb.org/documentation/file-format" target="_blank" rel="noopener">PDB格式官方文档</a>.</p> <a id="more"></a><p>完整的PDB文件提供了非常多的信息, 包括作者, 参考文献以及结构说明, 如二硫键, 螺旋, 片层, 活性位点. 在使用PDB文件时请记住, 一些建模软件可能不支持那些错误的输入格式.</p><p>PDB格式以文本格式给出信息, 每一行信息称为一个 <strong>记录(record)</strong>. 一个PDB文件通常包括很多不同类型的记录, 它们以特定的顺序排列, 用以描述结构.</p><h2 id="PDB文件中的记录类型"><a href="#PDB文件中的记录类型" class="headerlink" title="PDB文件中的记录类型"></a>PDB文件中的记录类型</h2><h3 id="一-标题部分"><a href="#一-标题部分" class="headerlink" title="一. 标题部分"></a>一. 标题部分</h3><ol><li><code>HEADER</code>: 分子类, 公布日期, ID号</li><li><code>OBSLTE</code>: 注明此ID号已废弃, 改用新ID号</li><li><code>TITLE</code>: 说明实验方法类型</li><li><code>CAVEAT</code>: 可能的错误警告</li><li><code>COMPND</code>: 化合物分子组成</li><li><code>SOURCE</code>: 化合物来源</li><li><code>KEYWDS</code>: 关键词</li><li><code>EXPDTA</code>: 测定结构所用的实验方法</li><li><code>AUTHOR</code>: 结构测定者</li><li><code>REVDAT</code>: 修订日期及相关内容</li><li><code>SPRSDE</code>: 已撤销或更改的相关记录</li><li><code>JRNL</code>: 发表坐标的期刊</li><li><code>REMARK</code> <code>REMARK 1</code>: 有关文献 <code>REMARK 2</code>: 最大分辨率 <code>REMARK 3</code>: 用到的程序和统计方法. 记述结构优化的方法和相关统计数据. <code>REMARK 4-999</code>: 其他信息</li></ol><h3 id="二-一级结构"><a href="#二-一级结构" class="headerlink" title="二. 一级结构"></a>二. 一级结构</h3><ol><li><code>DBREF</code>: 其他序列库的有关记录</li><li><code>SEQADV</code>: PDB与其他记录的出入</li><li><code>SEQRES</code>: 残基序列</li><li><code>MODRES</code>: 对标准残基的修饰</li></ol><h3 id="三-杂因子"><a href="#三-杂因子" class="headerlink" title="三. 杂因子"></a>三. 杂因子</h3><ol><li><code>HET</code>: 非标准残基</li><li><code>HETATM</code>: 非标准残基的名称</li><li><code>HETSNY</code>: 非标准残基的同义字</li><li><code>FORMOL</code>: 非标准残基的化学式</li></ol><h3 id="四-二级结构"><a href="#四-二级结构" class="headerlink" title="四. 二级结构"></a>四. 二级结构</h3><ol><li><code>HELIX</code>: 螺旋. 标识螺旋的位置和类型(右手α螺旋等), 每个螺旋一条记录.</li><li><code>SHEET</code>: 片层. 标识每个片层的位置, 类型(sense, 如反平行等), 相对于模型中每个束的片层(如果存在的话)中前一束的说明, 每个片层一条记录.</li><li><code>TURN</code>: 转角</li></ol><h3 id="五-连接注释"><a href="#五-连接注释" class="headerlink" title="五. 连接注释"></a>五. 连接注释</h3><ol><li><code>SSBOND</code>: 二硫键. 定义半胱氨酸CYS残基之间的二硫键</li><li><code>LINK</code>: 残基间化学键</li><li><code>HYDBND</code>: 氢键</li><li><code>SLTBRG</code>: 盐桥</li><li><code>CISPEP</code>: 顺式残基</li></ol><h3 id="六-晶胞特征及坐标变换"><a href="#六-晶胞特征及坐标变换" class="headerlink" title="六. 晶胞特征及坐标变换"></a>六. 晶胞特征及坐标变换</h3><ol><li><code>CRYST1</code>: 晶胞参数(NMR除外). 记述晶胞结构参数(a, b, c, α, β, γ, 空间群)以及Z值(单位结构中的聚合链数).</li><li><code>ORIGXn</code>: 直角-PDB坐标</li><li><code>SCALEn</code>: 直角-晶体分数坐标(n=1, 2, 3, NMR除外). 说明数据中直角坐标向晶体分数坐标的变换因子.</li><li><code>MTRIXn</code>: 非晶相对称</li><li><code>TVECT</code>: 平移矢量</li></ol><h3 id="七-坐标部分"><a href="#七-坐标部分" class="headerlink" title="七. 坐标部分"></a>七. 坐标部分</h3><ol><li><code>MODEL</code>: 多亚基时显示亚基号 当一个PDB文件中包含多个结构时(例: NMR结构解析), 该记录出现在各个模型的第一行. <code>MODEL</code>记录行的第11-14列上记入模型序号. 序号从1开始顺序记入, 在11-14列中从右起写. 比如说有30个模型, 则第1至9号模型, 该行的7-13列空白, 在14列上记入1-9的数字; 第10-30号模型, 该行的7-12列空白, 13-14列上记入10-30的数字.</li><li><code>ATOM</code>: 标准残基的原子. 记述标准残基(氨基酸以及核酸)中各原子的原子名称, 残基名称, 直角坐标(单位埃), 占有率, 温度因子等信息.</li><li><code>SIGATM</code>: 标准差</li><li><code>ANISOU</code>: 各向异性</li><li><code>SIGUIJ</code>: 各种温度因素导致的标准差</li><li><code>TER</code>: 残基链的末端. 表示残基链的结束. 在每个聚合链的末端都必须有<code>TER</code>记录, 但因序列无序造成的链中断处不需要该记录. 例如, 一个血红蛋白分子包含四个亚链. 彼此之间并不相连. <code>TER</code>标识了每条链的结束, 以防显示时这条链与下一条相连.</li><li><code>HETATM</code>: 非标准残基的原子. 记述非标准残基(标准氨基酸以及核酸以外的化合物, 包括抑制剂, 辅因子, 离子, 溶剂)中各原子的原子名称, 残基名称, 直角坐标(单位埃), 占有率, 温度因子等信息. 与<code>ATOM</code>记录的唯一区别在于<code>HETATM</code>残基默认情况下不会与其他残基相连. 注意, 水分子也应放在此记录中.</li><li><code>ENDMDL</code>: 亚基结束. 与<code>MODEL</code>记录成对出现, 记述在各模型的链末端的<code>TER</code>记录之后.</li></ol><h3 id="八-连接信息部分"><a href="#八-连接信息部分" class="headerlink" title="八. 连接信息部分"></a>八. 连接信息部分</h3><ol><li><code>CONECT</code>: 原子间的连接信息</li></ol><h3 id="九-簿记"><a href="#九-簿记" class="headerlink" title="九. 簿记"></a>九. 簿记</h3><ol><li><code>MASTER</code>: 版权拥有者</li><li><code>END</code>: 文件结束. 标志PDB文件的结束, 必需记录.</li></ol><h2 id="一些记录类型的说明"><a href="#一些记录类型的说明" class="headerlink" title="一些记录类型的说明"></a>一些记录类型的说明</h2><p>PDB文件里面的每个记录都有着严格的格式. 每个记录中的字段, 如标识, 原子名称, 原子序号, 残基名称, 残基序号等, 不仅要按照严格的顺序书写, 而且每个字段所占的字符串长度, 及其所处的位置都是严格规定好的. 这些记录中, 通常最关心的是原子记录, 其详细说明可参考<a href="http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html" target="_blank" rel="noopener">PDB原子记录官方文档</a>.</p><p>一些老的PDB文件可能不完全遵循新格式. 对大多数用户而言, 最值得注意的区别在于<code>ATOM</code>和<code>HETATM</code>记录中的温度因子字段. 下文的例子中没有使用这些字段. 此外, 有些字段常常留空, 例如, 如当原子没有可替换位置时, 可替位置标识符就会留空.</p><h3 id="ATOM记录"><a href="#ATOM记录" class="headerlink" title="ATOM记录"></a><code>ATOM</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th><th align="center">格式, 对齐</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1-4</td><td align="center">ATOM</td><td align="center">字符, 左</td><td align="center">Record Type 记录类型</td></tr><tr><td align="center">7-11</td><td align="center">serial</td><td align="center">整数, 右</td><td align="center">Atom serial number 原子序号. PDB文件对分子结构处理为 segment, chain, residue, atom四个层次(一般并不用到chain), 因此此数位限定了一个残基中的最大原子数为为99999</td></tr><tr><td align="center">13-16</td><td align="center">name</td><td align="center">字符, 左</td><td align="center">Atom name 原子名称. 原子的元素符号在13-14列中右对齐 一般从14列开始写, 占四个字符的原子名称才会从13列开始写. 如, 铁原子FE写在13-14列, 而碳原子C只写在14列.</td></tr><tr><td align="center">17</td><td align="center">altLoc</td><td align="center">字符</td><td align="center">Alternate location indicator 可替位置标示符</td></tr><tr><td align="center">18-20</td><td align="center">resName</td><td align="center">字符</td><td align="center">Residue name 残基名称</td></tr><tr><td align="center">22</td><td align="center">chainID</td><td align="center">字符</td><td align="center">Chain identifier 链标识符</td></tr><tr><td align="center">23-26</td><td align="center">resSeq</td><td align="center">整数, 右</td><td align="center">Residue sequence number 残基序列号</td></tr><tr><td align="center">27</td><td align="center">iCode</td><td align="center">字符</td><td align="center">Code for insertion of residues 残基插入码</td></tr><tr><td align="center">28-30</td><td align="center">留空</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">31-38</td><td align="center">x</td><td align="center">浮点, 右</td><td align="center">Orthogonal coordinates for X in Angstroms 直角x坐标(埃)</td></tr><tr><td align="center">39-46</td><td align="center">y</td><td align="center">浮点, 右</td><td align="center">Orthogonal coordinates for Y in Angstroms 直角y坐标(埃)</td></tr><tr><td align="center">47-54</td><td align="center">z</td><td align="center">浮点, 右</td><td align="center">Orthogonal coordinates for Z in Angstroms 直角z坐标(埃)</td></tr><tr><td align="center">55-60</td><td align="center">occupancy</td><td align="center">浮点, 右</td><td align="center">Occupancy 占有率</td></tr><tr><td align="center">61-66</td><td align="center">tempFactor</td><td align="center">浮点, 右</td><td align="center">Temperature factor 温度因子</td></tr><tr><td align="center">67-72</td><td align="center">留空</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">73-76</td><td align="center">segID</td><td align="center">字符, 左</td><td align="center">Segment identifier(optional) 可选的片段标识符 VMD会使用此数据</td></tr><tr><td align="center">77-78</td><td align="center">element</td><td align="center">字符, 右</td><td align="center">Element symbol 元素符号</td></tr><tr><td align="center">79-80</td><td align="center">charge</td><td align="center">字符</td><td align="center">Charge on the atom(optional) 可选的原子电荷. 实际分子模拟中往往重新定义电荷, 故此列往往不用. VMD写出的PDB文件中无此列.</td></tr></tbody></table><h3 id="HETATM记录"><a href="#HETATM记录" class="headerlink" title="HETATM记录"></a><code>HETATM</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th></tr></thead><tbody><tr><td align="center">1-6</td><td align="center">HETATM</td></tr><tr><td align="center">7-80</td><td align="center">与ATOM记录相同</td></tr></tbody></table><h3 id="TER记录"><a href="#TER记录" class="headerlink" title="TER记录"></a><code>TER</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th><th align="center">格式, 对齐</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1-3</td><td align="center">TER</td><td align="center">字符</td><td align="center"></td></tr><tr><td align="center">7-11</td><td align="center">Serial number</td><td align="center">整数, 右</td><td align="center">序号</td></tr><tr><td align="center">18-20</td><td align="center">Residue name</td><td align="center">字符, 右</td><td align="center">残基名称</td></tr><tr><td align="center">22</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">23-26</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">27</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr></tbody></table><h3 id="SSBOND记录"><a href="#SSBOND记录" class="headerlink" title="SSBOND记录"></a><code>SSBOND</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th><th align="center">格式, 对齐</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1-6</td><td align="center">SSBOND</td><td align="center">字符</td><td align="center"></td></tr><tr><td align="center">8-10</td><td align="center">Serial number</td><td align="center">整数, 右</td><td align="center">序号</td></tr><tr><td align="center">12-14</td><td align="center">Residue name (CYS)</td><td align="center">字符, 右</td><td align="center">残基名称(CYS)</td></tr><tr><td align="center">16</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">18-21</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">22</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">26-28</td><td align="center">Residue name (CYS)</td><td align="center">字符, 右</td><td align="center">残基名称(CYS)</td></tr><tr><td align="center">30</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">32-35</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">36</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">60-65</td><td align="center">Symmetry operator for first residue</td><td align="center">整数, 右</td><td align="center">第一个残基的对称操作</td></tr><tr><td align="center">67-72</td><td align="center">Symmetry operator for second residue</td><td align="center">整数, 右</td><td align="center">第二个残基的对称操作</td></tr></tbody></table><h3 id="HELIX记录"><a href="#HELIX记录" class="headerlink" title="HELIX记录"></a><code>HELIX</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th><th align="center">格式, 对齐</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1-5</td><td align="center">HELIX</td><td align="center">字符, 左</td><td align="center"></td></tr><tr><td align="center">8-10</td><td align="center">Helix serial number</td><td align="center">整数, 右</td><td align="center">螺旋序号</td></tr><tr><td align="center">12-14</td><td align="center">Helix identifier</td><td align="center">字符, 右</td><td align="center">螺旋标识符</td></tr><tr><td align="center">16-18</td><td align="center">Initial residue name</td><td align="center">字符, 右</td><td align="center">起始残基名称</td></tr><tr><td align="center">20</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">22-25</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">26</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">28-30</td><td align="center">Terminal residue name</td><td align="center">字符, 右</td><td align="center">终止残基名称</td></tr><tr><td align="center">32</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">34-37</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">38</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">39-40</td><td align="center">Type of helix</td><td align="center">整数, 右</td><td align="center">螺旋类型注1</td></tr><tr><td align="center">41-70</td><td align="center">Comment</td><td align="center">字符, 左</td><td align="center">注释</td></tr><tr><td align="center">72-76</td><td align="center">Length of helix</td><td align="center">整数, 右</td><td align="center">螺旋长度</td></tr></tbody></table><p>注1: 螺旋类型有如下几种:</p><ul><li><code>1</code>: Right-handed alpha (default) 右手α螺旋(默认)</li><li><code>2</code>: Right-handed omega 右手ω螺旋</li><li><code>3</code>: Right-handed pi 右手π螺旋</li><li><code>4</code>: Right-handed gamma 右手γ螺旋</li><li><code>5</code>: Right-handed 3/10 右手3/10螺旋</li><li><code>7</code>: Left-handed omega 右手ω螺旋</li><li><code>6</code>: Left-handed alpha 右手α螺旋</li><li><code>8</code>: Left-handed gamma 右手γ螺旋</li><li><code>9</code>: 2/7 ribbon/helix 2/7带状螺旋</li><li><code>10</code>: Polyproline 聚脯氨酸</li></ul><h3 id="SHEET记录"><a href="#SHEET记录" class="headerlink" title="SHEET记录"></a><code>SHEET</code>记录</h3><table><thead><tr><th align="center">列</th><th align="center">数据</th><th align="center">格式, 对齐</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">1-5</td><td align="center">SHEET</td><td align="center">字符</td><td align="center"></td></tr><tr><td align="center">8-10</td><td align="center">Strand number (in current sheet)</td><td align="center">整数, 右</td><td align="center">束编号(当前片层中)</td></tr><tr><td align="center">12-14</td><td align="center">Sheet identifier</td><td align="center">字符, 右</td><td align="center">片层标识符</td></tr><tr><td align="center">15-16</td><td align="center">Number of strands (in current sheet)</td><td align="center">整数, 右</td><td align="center">束数目(当前片层中)</td></tr><tr><td align="center">18-20</td><td align="center">Initial residue name</td><td align="center">字符, 右</td><td align="center">起始残基名称</td></tr><tr><td align="center">22</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">23-26</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">27</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">29-31</td><td align="center">Terminal residue name</td><td align="center">字符, 右</td><td align="center">终止残基名称</td></tr><tr><td align="center">33</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">34-37</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">38</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">39-40</td><td align="center">Strand sense with respect to previous</td><td align="center">整数, 右</td><td align="center">相对于前一个片层的类型注2</td></tr><tr><td align="center">以下字段标识两个原子, 第一个位于当前片层, 第二个位于前一片层, 它们彼此之间以氢键相连. 对束1这些字段应留空.</td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">42-45</td><td align="center">Atom name (as per ATOM record)</td><td align="center">字符, 左</td><td align="center">原子名称(每个ATOM记录一个)</td></tr><tr><td align="center">46-48</td><td align="center">Residue name</td><td align="center">字符, 右</td><td align="center">残基名称</td></tr><tr><td align="center">50</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">51-54</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">55</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr><tr><td align="center">57-60</td><td align="center">Atom name (as per ATOM record)</td><td align="center">字符, 左</td><td align="center">原子名称(每个ATOM记录一个)</td></tr><tr><td align="center">61-63</td><td align="center">Residue name</td><td align="center">字符, 右</td><td align="center">残基名称</td></tr><tr><td align="center">65</td><td align="center">Chain identifier</td><td align="center">字符</td><td align="center">链标识符</td></tr><tr><td align="center">66-69</td><td align="center">Residue sequence number</td><td align="center">整数, 右</td><td align="center">残基序列号</td></tr><tr><td align="center">70</td><td align="center">Code for insertions of residues</td><td align="center">字符</td><td align="center">残基插入码</td></tr></tbody></table><p>注2: 类型标识:</p><ul><li><code>1</code>: 平行</li><li><code>-1</code> 反平行</li><li><code>0</code>: 用于束1</li></ul><h3 id="格式说明"><a href="#格式说明" class="headerlink" title="格式说明"></a>格式说明</h3><p>对于熟悉FORTRAN程序语言的用户, 下面是格式说明</p><ul><li><code>ATOM</code>或<code>HETATM</code>: <code>Format ( A6,I5,1X,A4,A1,A3,1X,A1,I4,A1,3X,3F8.3,2F6.2,6X,A4,A2,A2 )</code></li><li><code>SSBOND</code>: <code>Format ( A6,1X,I3,1X,A3,1X,A1,1X,I4,A1,3X,A3,1X,A1,1X,I4,A1,23X,2I3,1X,2I3 )</code></li><li><code>HELIX</code>: <code>Format ( A6,1X,I3,1X,A3,2(1X,A3,1X,A1,1X,I4,A1),I2,A30,1X,I5 )</code></li><li><code>SHEET</code>: <code>Format ( A6,1X,I3,1X,A3,I2,2(1X,A3,1X,A1,I4,A1),I2,2(1X,A4,A3,1X,A1,I4,A1) )</code></li></ul><p>在FORTRAN语言的输入/输出格式中, <code>X</code>表示输入/输出空格; <code>An</code>表示输入/输的字符串占<code>n</code>位, 左对齐; <code>In</code>表示输入/输的整数占<code>n</code>位, 左对齐; <code>Fm.n</code>表示输入/输的浮点数占<code>m</code>位, 其中小数点后的数字占<code>n</code>位. 这些格式前面的整数则表示重复次数, 如<code>23X</code>表示23个空格, <code>3F8.3</code>表示<code>F8,3</code>格式重复三次.</p><p>如果你使用其他程序语言, 可根据上面的格式说明转换为相应的形式.</p><h2 id="PDB文件示例"><a href="#PDB文件示例" class="headerlink" title="PDB文件示例"></a>PDB文件示例</h2><h3 id="单链蛋白"><a href="#单链蛋白" class="headerlink" title="单链蛋白"></a>单链蛋白</h3><p>胰升血糖素(Glucagon)是一个小蛋白, 29个残基处于单条链中. 第一个残基是终端为氨的氨基酸HIS, 接着的是SER和GLU残基. 坐标部分开头如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM      1  N   HIS     1      49.668  24.248  10.436  1.00 25.00</span><br><span class="line">ATOM      2  CA  HIS     1      50.197  25.578  10.784  1.00 16.00</span><br><span class="line">ATOM      3  C   HIS     1      49.169  26.701  10.917  1.00 16.00</span><br><span class="line">ATOM      4  O   HIS     1      48.241  26.524  11.749  1.00 16.00</span><br><span class="line">ATOM      5  CB  HIS     1      51.312  26.048   9.843  1.00 16.00</span><br><span class="line">ATOM      6  CG  HIS     1      50.958  26.068   8.340  1.00 16.00</span><br><span class="line">ATOM      7  ND1 HIS     1      49.636  26.144   7.860  1.00 16.00</span><br><span class="line">ATOM      8  CD2 HIS     1      51.797  26.043   7.286  1.00 16.00</span><br><span class="line">ATOM      9  CE1 HIS     1      49.691  26.152   6.454  1.00 17.00</span><br><span class="line">ATOM     10  NE2 HIS     1      51.046  26.090   6.098  1.00 17.00</span><br><span class="line">ATOM     11  N   SER     2      49.788  27.850  10.784  1.00 16.00</span><br><span class="line">ATOM     12  CA  SER     2      49.138  29.147  10.620  1.00 15.00</span><br><span class="line">ATOM     13  C   SER     2      47.713  29.006  10.110  1.00 15.00</span><br><span class="line">ATOM     14  O   SER     2      46.740  29.251  10.864  1.00 15.00</span><br><span class="line">ATOM     15  CB  SER     2      49.875  29.930   9.569  1.00 16.00</span><br><span class="line">ATOM     16  OG  SER     2      49.145  31.057   9.176  1.00 19.00</span><br><span class="line">ATOM     17  N   GLN     3      47.620  28.367   8.973  1.00 15.00</span><br><span class="line">ATOM     18  CA  GLN     3      46.287  28.193   8.308  1.00 14.00</span><br><span class="line">ATOM     19  C   GLN     3      45.406  27.172   8.963  1.00 14.00</span><br></pre></td></tr></table></figure><p>注意到, 每一行(记录)都以记录类型<code>ATOM</code>开始, 记录中的下一项是原子序号.</p><p>原子名称是<code>ATOM</code>记录中的第三项, 它的前一或二个字符包含原子类型的元素符号. 所有以<code>C</code>开始的原子名称都代表碳原子, 同理, <code>N</code>代表氮原子, <code>O</code>代表氧原子. 原子名称的下一字符为远程标识符, 表示离氨基碳原子的远近, 含义如下</p><ul><li><code>A</code>: α</li><li><code>B</code>: β</li><li><code>G</code>: γ</li><li><code>D</code>: δ</li><li><code>E</code>: ε</li><li><code>Z</code>: ζ</li><li><code>H</code>: η</li></ul><p>如果需要, 原子名称的最后一个字符可以代表分支标识符.</p><p><code>ATOM</code>记录的下一数据字段为残基类型. 注意, <strong>每一</strong> 记录都包含残基类型. 在上面的例子中, 链中的第一个残基为HIS, 第二个为SER.</p><p><code>ATOM</code>记录的下一数据字段为残基的序列号. 注意到, 残基从HIS变为SER后, 残基序列号从<code>1</code>变为<code>2</code>. 两个相同的残基可能相邻, 因此残基编号对于区分它们非常重要.</p><p><code>ATOM</code>记录的下三个数据字段分别为原子的X, Y, Z坐标. 后面接着的数据字段是占有率. 最后的数据字段是温度因子(也称B值).</p><p>胰升血糖素的PDB文件以这种方式继续下去, 直至最后一个残基</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM    239  N   THR    29       3.391  19.940  12.762  1.00 21.00</span><br><span class="line">ATOM    240  CA  THR    29       2.014  19.761  13.283  1.00 21.00</span><br><span class="line">ATOM    241  C   THR    29        .826  19.943  12.332  1.00 23.00</span><br><span class="line">ATOM    242  O   THR    29        .932  19.600  11.133  1.00 30.00</span><br><span class="line">ATOM    243  CB  THR    29       1.845  20.667  14.505  1.00 21.00</span><br><span class="line">ATOM    244  OG1 THR    29       1.214  21.893  14.153  1.00 21.00</span><br><span class="line">ATOM    245  CG2 THR    29       3.180  20.968  15.185  1.00 21.00</span><br><span class="line">ATOM    246  OXT THR    29       -.317  20.109  12.824  1.00 25.00</span><br><span class="line">TER     247      THR    29</span><br></pre></td></tr></table></figure><p>注意, 这一残基包含额外的氧原子<code>OXT</code>, 它处于末端羰基上. <code>TER</code>记录终止了氨基酸链.</p><h3 id="双链蛋白"><a href="#双链蛋白" class="headerlink" title="双链蛋白"></a>双链蛋白</h3><p>更复杂的一个蛋白, 胎血红蛋白(fetal hemoglobin), 包含两条残基酸链(α和γ), 以及两个血红素基团. 这个蛋白坐标部分的前10行内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM      1  N   VAL A   1       6.280  17.225   4.929  1.00  0.00</span><br><span class="line">ATOM      2  CA  VAL A   1       6.948  18.508   4.671  1.00  0.00</span><br><span class="line">ATOM      3  C   VAL A   1       8.436  18.338   4.977  1.00  0.00</span><br><span class="line">ATOM      4  O   VAL A   1       8.813  17.657   5.941  1.00  0.00</span><br><span class="line">ATOM      5  CB  VAL A   1       6.317  19.598   5.527  1.00  0.00</span><br><span class="line">ATOM      6  CG1 VAL A   1       6.959  20.999   5.376  1.00  0.00</span><br><span class="line">ATOM      7  CG2 VAL A   1       4.819  19.636   5.383  1.00  0.00</span><br><span class="line">ATOM      8  N   LEU A   2       9.259  18.958   4.152  1.00  0.00</span><br><span class="line">ATOM      9  CA  LEU A   2      10.715  18.872   4.330  1.00  0.00</span><br><span class="line">ATOM     10  C   LEU A   2      11.156  20.058   5.187  1.00  0.00</span><br></pre></td></tr></table></figure><p>数据文件与上面胰升血糖素的基本一样, 除了第五个数据字段包含单个字符的链标识符<code>A</code>, 它标识血红蛋白分子的α链. 而在胰升血糖素的例子中, 这一字段为空. 在链A的终止处, 出现血红素基团的记录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM   1058  N   ARG A 141      -6.576  12.834 -10.275  1.00  0.00</span><br><span class="line">ATOM   1059  CA  ARG A 141      -8.044  12.831 -10.214  1.00  0.00</span><br><span class="line">ATOM   1060  C   ARG A 141      -8.186  14.096  -9.365  1.00  0.00</span><br><span class="line">ATOM   1061  O   ARG A 141      -7.591  15.139  -9.671  1.00  0.00</span><br><span class="line">ATOM   1062  CB  ARG A 141      -8.579  11.531  -9.580  1.00  0.00</span><br><span class="line">ATOM   1063  CG  ARG A 141      -8.386  11.441  -8.054  1.00  0.00</span><br><span class="line">ATOM   1064  CD  ARG A 141      -8.727  10.045  -7.568  1.00  0.00</span><br><span class="line">ATOM   1065  NE  ARG A 141      -9.095  10.056  -6.143  1.00  0.00</span><br><span class="line">ATOM   1066  CZ  ARG A 141      -9.268   8.931  -5.414  1.00  0.00</span><br><span class="line">ATOM   1067  NH1 ARG A 141      -8.602   8.795  -4.282  1.00  0.00</span><br><span class="line">ATOM   1068  NH2 ARG A 141     -10.097   7.962  -5.830  1.00  0.00</span><br><span class="line">ATOM   1069  OXT ARG A 141      -8.973  13.984  -8.310  1.00  0.00</span><br><span class="line">TER    1070      ARG A 141</span><br><span class="line">HETATM 1071 FE   HEM A   1       8.133   8.321 -15.014  1.00  0.00</span><br><span class="line">HETATM 1072  CHA HEM A   1       8.863   8.752 -18.417  1.00  0.00</span><br><span class="line">HETATM 1073  CHB HEM A   1      10.362  10.946 -14.389  1.00  0.00</span><br><span class="line">HETATM 1074  CHC HEM A   1       8.482   7.374 -11.743  1.00  0.00</span><br><span class="line">HETATM 1075  CHD HEM A   1       6.982   5.180 -15.773  1.00  0.00</span><br><span class="line">HETATM 1076  N A HEM A   1       9.452   9.545 -16.178  1.00  0.00</span><br></pre></td></tr></table></figure><p>α链中最后一个残基为<code>ARG</code>, 额外的氧原子<code>OXT</code>同样出现在末端羰基基团中. <code>TER</code>记录标识了多肽链的结束. 在多肽链的结束处使用<code>TER</code>记录非常重要, 这样, 才不至于将一条链的终结处与另一条链的起始处相连.</p><p>上面的例子中, <code>TER</code>记录是正确的, 并且应该存在. 但是, 即便没有<code>TER</code>记录标识, 分子链仍然应该在某处终止, 因为<code>HETATM</code>残基不会与其他残基相连, 或互相相连. 作为单个残基的血红素基团由<code>HETATM</code>记录组成.</p><p>在α链血红素基团的结束处, γ链开始出现:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">HETATM 1109  CAD HEM A   1       7.582   6.731 -20.480  1.00  0.00</span><br><span class="line">HETATM 1110  CBD HEM A   1       8.992   6.848 -20.968  1.00  0.00</span><br><span class="line">HETATM 1111  CGD HEM A   1       8.998   6.529 -22.465  1.00  0.00</span><br><span class="line">HETATM 1112  O1D HEM A   1       9.693   5.683 -22.895  1.00  0.00</span><br><span class="line">HETATM 1113  O2D HEM A   1       8.276   7.153 -23.229  1.00  0.00</span><br><span class="line">ATOM   1114  C   ACE G   0       7.896 -18.462  -1.908  1.00  0.00</span><br><span class="line">ATOM   1115  O   ACE G   0       7.246 -18.839   -.922  1.00  0.00</span><br><span class="line">ATOM   1116  CH3 ACE G   0       9.415 -18.301  -1.832  1.00  0.00</span><br><span class="line">ATOM   1117  N   GLY G   1       7.354 -18.174  -3.077  1.00  0.00</span><br><span class="line">ATOM   1118  CA  GLY G   1       5.904 -18.282  -3.283  1.00  0.00</span><br><span class="line">ATOM   1119  C   GLY G   1       7.139 -19.112  -2.930  1.00  0.00</span><br><span class="line">ATOM   1120  O   GLY G   1       7.026 -20.248  -2.448  1.00  0.00</span><br><span class="line">ATOM   1121  N   HIS G   2       8.300 -18.533  -3.176  1.00  0.00</span><br><span class="line">ATOM   1122  CA  HIS G   2       9.565 -19.224  -2.889  1.00  0.00</span><br></pre></td></tr></table></figure><p>这里, 新链的开始隐含着<code>TER</code>记录存在. 新链的标识符为<code>G</code>. 整个文件以与前面相同的模式继续下去, 到整条γ链及其血红素结束.</p><p>数据字段中的空格非常关键. 如果没有提供数据, 相应的字段应该留空. 例如, 仅包含单条氨基酸链的蛋白没有链标识符, 因此, 22列应该留空.</p><p>对于上面的例子, 看起来PDB格式依赖于 <strong>残基</strong> 的概念. 残基的规则总结如下:</p><ol><li>所有处于单个残基内的原子都必须具有唯一的名称. 例如, 残基<code>VAL</code>可能只有一个名称为<code>CA</code>的原子. 其他残基可能也含有<code>CA</code>原子, 但<code>VAL</code>中出现的<code>CA</code>不能超过一个.</li><li>残基名称最大长度为三个字符, 并且能唯一地标识残基类型. 因此, 文件中具有给定名称的所有残基都具有相同的残基类型, 相同的结构. 每个特定残基在PDB文件中出现时都应具有相同的原子和连接性.</li></ol><h2 id="PDB格式文件中的常见错误"><a href="#PDB格式文件中的常见错误" class="headerlink" title="PDB格式文件中的常见错误"></a>PDB格式文件中的常见错误</h2><p>如果一个PDB文件无法正常展示, 在其成百上千行数据中找到错误位置有时很困难. 这里给出PDB文件中一些最常见的错误.</p><h3 id="程序创建的PDB文件"><a href="#程序创建的PDB文件" class="headerlink" title="程序创建的PDB文件"></a>程序创建的PDB文件</h3><p><strong>虚假的超长键</strong></p><p>由程序创建的PDB文件中, 常见的一种错误会导致在本来不该相连的残基间显示出非常长的键. 这种错误来自于缺少了分子链结束处的<code>TER</code>记录. 根据PDB标准, <code>TER</code>记录标识了分子链的结束. 文件中如果缺失了<code>TER</code>记录, 应该插入它们. 或者, 作为替代方法, 对每条链使用不同的链标识符.</p><p>显示超长键的第二个常见原因是不正确地使用<code>ATOM</code>记录, 而不使用<code>HETATM</code>记录. <code>HETATM</code>记录应该用于那些不形成链的化合物, 如水或血红素. 许多程序创建的PDB文件没有正确地使用<code>HETATM</code>记录. 在这种情况下, <code>ATOM</code>记录的开头 <strong>6</strong> 列应改为<code>HETATM</code>, 这样, 其余列的排列仍然正确.</p><p><strong>未正确排列的原子名称</strong></p><p>PDB记录中未正确排列的原子名称可能导致问题. <code>ATOM</code>和<code>HETATM</code>记录中的原子名称由下列内容组成: 元素符号(如<code>C</code>), <strong>右</strong> 对齐在13-14列中; 远程标识字符(如<code>A</code>), <strong>左</strong> 对齐在15-16列中. 许多程序只是简单地从第13列开始将整个原子名称左对齐. 在下面血红蛋白的一部分文件中可以清楚地看到区别:</p><p>正确的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">HETATM  976 FE   HEM     1      12.763  34.157   9.102  1.00  0.00</span><br><span class="line">HETATM  977  CHA HEM     1      16.124  33.461  10.405  1.00  0.00</span><br><span class="line">HETATM  978  CHB HEM     1      11.350  32.580  12.046  1.00  0.00</span><br><span class="line">HETATM  979  CHC HEM     1       9.326  34.709   7.887  1.00  0.00</span><br><span class="line">HETATM  980  CHD HEM     1      14.138  35.379   6.119  1.00  0.00</span><br></pre></td></tr></table></figure><p>错误的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">HETATM  976  FE  HEM     1      12.763  34.157   9.102  1.00  0.00</span><br><span class="line">HETATM  977  CHA HEM     1      16.124  33.461  10.405  1.00  0.00</span><br><span class="line">HETATM  978  CHB HEM     1      11.350  32.580  12.046  1.00  0.00</span><br><span class="line">HETATM  979  CHC HEM     1       9.326  34.709   7.887  1.00  0.00</span><br><span class="line">HETATM  980  CHD HEM     1      14.138  35.379   6.119  1.00  0.00</span><br></pre></td></tr></table></figure><h3 id="手动创建的PDB文件"><a href="#手动创建的PDB文件" class="headerlink" title="手动创建的PDB文件"></a>手动创建的PDB文件</h3><p><strong>重复的原子名称</strong></p><p>在手动创建的PDB文件中, 一个可能的编辑错误是, 对于一个给定残基中的所有原子没有指定唯一的名称. 在下面的例子中, 残基<code>VAL</code>中有两个原子具有名称<code>CA</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM      1  N   VAL A   1       6.280  17.225   4.929  1.00  0.00</span><br><span class="line">ATOM      2  CA  VAL A   1       6.948  18.508   4.671  1.00  0.00</span><br><span class="line">ATOM      3  C   VAL A   1       8.436  18.338   4.977  1.00  0.00</span><br><span class="line">ATOM      4  O   VAL A   1       8.813  17.657   5.941  1.00  0.00</span><br><span class="line">ATOM      5  CA  VAL A   1       6.317  19.598   5.527  1.00  0.00</span><br><span class="line">ATOM      6  CG1 VAL A   1       6.959  20.999   5.376  1.00  0.00</span><br><span class="line">ATOM      7  CG2 VAL A   1       4.819  19.636   5.383  1.00  0.00</span><br><span class="line">ATOM      8  N   LEU A   2       9.259  18.958   4.152  1.00  0.00</span><br><span class="line">ATOM      9  CA  LEU A   2      10.715  18.872   4.330  1.00  0.00</span><br><span class="line">ATOM     10  C   LEU A   2      11.156  20.058   5.187  1.00  0.00</span><br></pre></td></tr></table></figure><p>取决于所用的可视化程序, 可能无法正确显示残基的连接, 或者只有当标记残基才会给出缺少<code>CB</code>原子的错误.</p><p><strong>序列之外的残基</strong></p><p>在下面的例子中, 出现于文件中的第二个残基(SER)被错误地编号为残基5. 许多可视化程序会显示残基5与残基1和3相连, 但只有当初确实需要这样时才正确. 如果残基5被假定出现在残基4和残基6之间, 它就应该出现在那里.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM      1  C   HIS     1      49.169  26.701  10.917  1.00 16.00</span><br><span class="line">ATOM      2  CA  HIS     1      50.197  25.578  10.784  1.00 16.00</span><br><span class="line">ATOM      3  CB  HIS     1      51.312  26.048   9.843  1.00 16.00</span><br><span class="line">ATOM      4  CD2 HIS     1      51.797  26.043   7.286  1.00 16.00</span><br><span class="line">ATOM      5  CE1 HIS     1      49.691  26.152   6.454  1.00 17.00</span><br><span class="line">ATOM      6  CG  HIS     1      50.958  26.068   8.340  1.00 16.00</span><br><span class="line">ATOM      7  N   HIS     1      49.668  24.248  10.436  1.00 25.00</span><br><span class="line">ATOM      8  ND1 HIS     1      49.636  26.144   7.860  1.00 16.00</span><br><span class="line">ATOM      9  NE2 HIS     1      51.046  26.090   6.098  1.00 17.00</span><br><span class="line">ATOM     10  O   HIS     1      48.241  26.524  11.749  1.00 16.00</span><br><span class="line">ATOM     11  C   SER     5      47.713  29.006  10.110  1.00 15.00</span><br><span class="line">ATOM     12  CA  SER     5      49.138  29.147  10.620  1.00 15.00</span><br><span class="line">ATOM     13  CB  SER     5      49.875  29.930   9.569  1.00 16.00</span><br><span class="line">ATOM     14  N   SER     5      49.788  27.850  10.784  1.00 16.00</span><br><span class="line">ATOM     15  O   SER     5      46.740  29.251  10.864  1.00 15.00</span><br><span class="line">ATOM     16  OG  SER     5      49.145  31.057   9.176  1.00 19.00</span><br><span class="line">ATOM     17  C   GLN     3      45.406  27.172   8.963  1.00 14.00</span><br><span class="line">ATOM     18  CA  GLN     3      46.287  28.193   8.308  1.00 14.00</span><br></pre></td></tr></table></figure><p><strong>输入错误</strong></p><p>有时字母<code>l</code>和数字<code>1</code>被互相替换了. 取决于这种错误在文件中出现的位置, 导致的问题也不一样. 错误放置的原子可能预示着错误出现在坐标字段中. 确定这种错误的一种方式是, 使用大写字母表示文件中的数据, 然后使用文本编辑器查找所有的小写字母<code>l</code>.</p><h2 id="氢原子约定"><a href="#氢原子约定" class="headerlink" title="氢原子约定"></a>氢原子约定</h2><p>PDB文件中的氢原子约定如下:</p><ol><li>出现在<code>ATOM</code>记录中的氢原子, 处于特定残基所有其他原子的后面.</li><li>每个氢原子的名称根据与它相连原子的名称来确定: 名称的第一个位置(13列)为可选的数字, 当有两个或多个氢原子与同一个原子相连时才使用; 第二个位置(14列)为元素符号<code>H</code>; 接下来的两列包含与氢原子相连原子的远程和分支标识符(1或2个字符).</li></ol><p>示例如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">12345678901234567890123456789012345678901234567890123456789012345678901234567890</span><br><span class="line">----+----1----+----2----+----3----+----4----+----5----+----6----+----6----+----8</span><br><span class="line">ATOM      1  N   VAL     1     -13.090   1.966   9.741  1.00  0.00</span><br><span class="line">ATOM      2  CA  VAL     1     -12.852   3.121   8.892  1.00  0.00</span><br><span class="line">ATOM      3  C   VAL     1     -13.047   4.399   9.711  1.00  0.00</span><br><span class="line">ATOM      4  O   VAL     1     -12.143   5.228   9.800  1.00  0.00</span><br><span class="line">ATOM      5  CB  VAL     1     -13.753   3.058   7.658  1.00  0.00</span><br><span class="line">ATOM      6  CG1 VAL     1     -13.930   4.446   7.036  1.00  0.00</span><br><span class="line">ATOM      7  CG2 VAL     1     -13.208   2.063   6.631  1.00  0.00</span><br><span class="line">ATOM      8  H   VAL     1     -13.919   1.449   9.527  1.00  0.00</span><br><span class="line">ATOM      9  HA  VAL     1     -11.816   3.075   8.557  1.00  0.00</span><br><span class="line">ATOM     10  HB  VAL     1     -14.734   2.707   7.977  1.00  0.00</span><br><span class="line">ATOM     11 1HG1 VAL     1     -13.951   4.357   5.950  1.00  0.00</span><br><span class="line">ATOM     12 2HG1 VAL     1     -14.866   4.883   7.384  1.00  0.00</span><br><span class="line">ATOM     13 3HG1 VAL     1     -13.098   5.085   7.333  1.00  0.00</span><br><span class="line">ATOM     14 1HG2 VAL     1     -12.623   1.298   7.142  1.00  0.00</span><br><span class="line">ATOM     15 2HG2 VAL     1     -14.039   1.594   6.104  1.00  0.00</span><br><span class="line">ATOM     16 3HG2 VAL     1     -12.575   2.588   5.917  1.00  0.00</span><br></pre></td></tr></table></figure><p>在上面的例子中</p><ul><li>所有氢原子都出现在残基的其他原子之后</li><li>9号原子<code>HA</code>与2号原子<code>CA</code>相连. 这两个原子的远程标识符<code>A</code>相同.</li><li>有三个氢原子与<code>CG1</code>相连. 它们具有相同的远程标识符, 分支标识符, 但13列中含有区分数字, 因此每个氢原子都具有唯一的名称.</li><li>当只有一个氢原子与给定原子相连时, 不需要使用数字作为氢原子名称的前缀.</li></ul><h2 id="氨基酸残基与核酸缩写"><a href="#氨基酸残基与核酸缩写" class="headerlink" title="氨基酸残基与核酸缩写"></a>氨基酸残基与核酸缩写</h2><table><thead><tr><th align="center">单字母</th><th align="center">三字母</th><th align="center">中文</th><th align="center"></th><th align="center">单字母</th><th align="center">三字母</th><th align="center">中文</th><th align="center"></th><th align="center">单字母</th><th align="center">三字母</th><th align="center">中文</th><th></th><th>单字母</th><th>中文</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">Ala</td><td align="center">丙氨酸</td><td align="center">I</td><td align="center">Ile</td><td align="center">异亮氨酸</td><td align="center">R</td><td align="center">Arg</td><td align="center">精氨酸</td><td align="center">A</td><td align="center">腺苷</td><td></td><td></td><td></td></tr><tr><td align="center">C</td><td align="center">Cys</td><td align="center">半胱氨酸</td><td align="center">K</td><td align="center">Lys</td><td align="center">赖氨酸</td><td align="center">S</td><td align="center">Ser</td><td align="center">丝氨酸</td><td align="center">C</td><td align="center">胞苷</td><td></td><td></td><td></td></tr><tr><td align="center">D</td><td align="center">Asp</td><td align="center">天门冬氨酸</td><td align="center">L</td><td align="center">Leu</td><td align="center">亮氨酸</td><td align="center">T</td><td align="center">Thr</td><td align="center">苏氨酸</td><td align="center">G</td><td align="center">鸟苷</td><td></td><td></td><td></td></tr><tr><td align="center">E</td><td align="center">Glu</td><td align="center">谷氨酸</td><td align="center">M</td><td align="center">Met</td><td align="center">蛋氨酸</td><td align="center">V</td><td align="center">Val</td><td align="center">缬氨酸</td><td align="center">I</td><td align="center">肌苷</td><td></td><td></td><td></td></tr><tr><td align="center">F</td><td align="center">Phe</td><td align="center">苯丙氨酸</td><td align="center">N</td><td align="center">Asn</td><td align="center">天门冬酰胺</td><td align="center">W</td><td align="center">Trp</td><td align="center">色氨酸</td><td align="center">T</td><td align="center">胸苷</td><td></td><td></td><td></td></tr><tr><td align="center">G</td><td align="center">Gly</td><td align="center">甘氨酸</td><td align="center">P</td><td align="center">Pro</td><td align="center">脯氨酸</td><td align="center">Y</td><td align="center">Tyr</td><td align="center">酪氨酸</td><td align="center">U</td><td align="center">尿苷</td><td></td><td></td><td></td></tr><tr><td align="center">H</td><td align="center">His</td><td align="center">组氨酸</td><td align="center">Q</td><td align="center">Gln</td><td align="center">谷氨酰胺</td><td align="center">X</td><td align="center">Unk</td><td align="center">未指定或未知氨基酸</td><td align="center">X</td><td align="center">未指定或未知核酸</td><td></td><td></td><td></td></tr></tbody></table><p><img src="https://jerkwin.github.io/pic/2016/pdb_aa.png" alt="img"></p><h2 id="一些概念说明"><a href="#一些概念说明" class="headerlink" title="一些概念说明"></a>一些概念说明</h2><h3 id="温度因子-B-factor"><a href="#温度因子-B-factor" class="headerlink" title="温度因子 B-factor"></a>温度因子 B-factor</h3><p>The B-factor (or temperature factor) is an indicator of thermal motion about an atom. However, it should be pointed out that the B-factor is a mix of real thermal displacement, static disorder (multiple but defined conformations) and dynamic disorder (no defined conformation), and all the overlap between these definitions.</p><p>B因子也叫温度因子, 一般在晶体测定的pdb中都有, 是晶体学中的一个重要参数. 晶体学中结构因子可以表达为坐标x, y, z与Bj因子的函数. 物理学上对于Bj的表征有很多理论模型, 最成功的是由Debye和Waller提出的. 将固体内振荡的量子本质计算在内后, 他们将Bj表征为绝对温度T和其他各基本参数的函数. 由此可见, Bj与原子的质量等基本性质有关, 也与实验温度有关.</p><p>B因子体现了晶体中原子电子密度的”模糊度”(diffusion), 这个”模糊度”实际上反映了蛋白质分子在晶体中的构象状态. B因子越高, “模糊度”越大, 相应部位的构象就越不稳定. 在晶体学数据中, B因子一般是以原子为单位给出的, 我们可以换算成相应残基的B因子, 从而分析残基的构象稳定性. 另外, 计算出的B因子中实际上包含了实验中的很多因素, 如晶体结构测定的实验误差等, 精度高的晶体结构数据提供较可靠的B因子数据.</p><p>此外, 另外温度因子还和占有率相关, 如果本身结构解析过程中占有率低, 也会导致温度因子升高. 这个时候只能说是X-ray收集数据的时候这个地方的信号比较弱, 而和结构本身的构象如何, 没有关系.</p><p>PDB中的晶体学数据是以原子为单位的, 它所给出的B因子是相对于每个原子的. 统计中, 首先将原子的B因子换算成残基的B因子, 即把每个残基所有原子的B因子取平均值. 由于蛋白质分子表面残基的运动性比较大, B因子相对较高, 所以在统计中除去了这部分残基, 具体方法是将数据中B因子高的残基去掉10%, 对剩下的残基进行统计, 计算平均值.</p><p>温度因子做图后可以体现蛋白某些部位的活动性和柔韧性. 它也可以由计算rmsf得到. 在GROMACS中, <code>g_rmsf</code>可以将rmsf换算成B因子输出至pdb. 与晶体测定结构中的B因子相比较, 如果呈较好的相关, 可以说明模拟的过程是正常, 合理的. 但pdb中的B因子都是原子的, 一般是比较残基间的, 可以转换一下.</p><h3 id="R-factor"><a href="#R-factor" class="headerlink" title="R-factor"></a>R-factor</h3><p>In overview, the R-factor is a measure of how well a particular model structure fits the observed electron density. Or simply, “a measure of agreement between the crystallographic model and the original X-ray diffraction data”.</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="http://blog.163.com/nm_myc_1013/blog/static/137725455201331842724812/" target="_blank" rel="noopener">PDB文件的格式</a></li><li><a href="http://blog.sciencenet.cn/blog-355217-280909.html" target="_blank" rel="noopener">PDB文件详解</a></li><li><a href="http://pdbdep.protein.osaka-u.ac.jp/tutorial/zh-cn/coordinate.html" target="_blank" rel="noopener">有关原子坐标文件</a></li><li><a href="http://reference.wolfram.com/language/ref/format/PDB.zh.html" target="_blank" rel="noopener">WOLFRAM 语言 IMPORT/EXPORT 格式 PDB</a></li><li><a href="http://blog.sina.com.cn/s/blog_56cfabbf0101gauy.html" target="_blank" rel="noopener">教你读懂蛋白的PDB文件</a></li><li><a href="http://blog.sciencenet.cn/blog-468005-426638.html" target="_blank" rel="noopener">PDB 文件格式</a></li><li><a href="http://dxli75.blog.163.com/blog/static/106768289200927111540180/" target="_blank" rel="noopener">什么叫HETATM</a></li><li><a href="http://dxli75.blog.163.com/blog/static/106768289200911962735786/" target="_blank" rel="noopener">温度因子(B因子)专题</a></li><li><a href="http://www.cgl.ucsf.edu/chimera/docs/UsersGuide//tutorials/framepdbintro.html" target="_blank" rel="noopener">Introduction to Protein Data Bank Format</a></li><li><a href="https://github.com/bigwiv/Biopython-cn/blob/master/cn/chr11.rst" target="_blank" rel="noopener">Biopython PDB模块</a></li></ul><p>文章最初发现于<a href="http://www.novopro.cn/articles/201804241174.html" target="_blank" rel="noopener">上海纽普的最新资讯</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PDB文件格式说明&quot;&gt;&lt;a href=&quot;#PDB文件格式说明&quot; class=&quot;headerlink&quot; title=&quot;PDB文件格式说明&quot;&gt;&lt;/a&gt;PDB文件格式说明&lt;/h1&gt;&lt;p&gt;本文转自：&lt;a href=&quot;https://jerkwin.github.io/2015/06/05/PDB文件格式说明/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;strong&gt;哲●科●文Jerkwin&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PDB(Protein Data Bank)是一种标准文件格式, 其中包含原子的坐标等信息, 提交给 Protein Data Bank at the Research Collaboratory for Structural Bioinformatics (RCSB) 的结构都使用这种标准格式. 这里整理网上已有的一些资料, 对PDB格式做个简短介绍. 对大多数用户而言, 了解这些内容就够了, 但对那些需要创建PDB文件的用户, 请参考&lt;a href=&quot;http://www.wwpdb.org/documentation/file-format&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PDB格式官方文档&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="Bioinformatics" scheme="https://yangluom.github.io/categories/Bioinformatics/"/>
    
      <category term="structure analysis" scheme="https://yangluom.github.io/categories/Bioinformatics/structure-analysis/"/>
    
    
      <category term="PDB" scheme="https://yangluom.github.io/tags/PDB/"/>
    
      <category term="structure analysis" scheme="https://yangluom.github.io/tags/structure-analysis/"/>
    
  </entry>
  
  <entry>
    <title>抢票神器PY12306的使用</title>
    <link href="https://yangluom.github.io/2019/09/12/%E6%8A%A2%E7%A5%A8%E7%A5%9E%E5%99%A8PY12306%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://yangluom.github.io/2019/09/12/抢票神器PY12306的使用/</id>
    <published>2019-09-12T13:24:52.000Z</published>
    <updated>2019-09-12T16:46:06.575Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="抢票神器PY12306的使用"><a href="#抢票神器PY12306的使用" class="headerlink" title="抢票神器PY12306的使用"></a>抢票神器PY12306的使用</h1><p>又要过节了，先是中秋，后是国庆，转眼，元旦，春节也快了，大家很忙，忙着抢票，忙着要回家，忙着要出去玩耍，瞬间，再一次带火了长期霸榜的神器<a href="https://github.com/pjialin/py12306" target="_blank" rel="noopener">py12306 购票助手</a> ，但是很多非coder的小伙伴（包括我）一开始对着火热又陌生的软件感到操作无力，是的，<strong>让我们退而却步的，不是繁复而是陌生</strong>，所以，就试着写个小教程，权当帮助自己也希望能帮助到有缘人吧。</p> <a id="more"></a><p>说<a href="https://github.com/pjialin/py12306" target="_blank" rel="noopener">py12306 购票助手</a> 火，可不是胡说八道的，有图有真相，大家可以来这里看看Github的<a href="https://github.com/trending" target="_blank" rel="noopener">Trending</a> ，不过，还是附上今天的截图吧：<br><img src="https://i.loli.net/2019/09/12/AyqYW93l617ptNd.png" alt="-01.png"></p><p>说神器，那它是啥嘞，我直接引用软件作者<a href="https://github.com/pjialin" target="_blank" rel="noopener">pjialin</a> 的说法吧:</p><blockquote><p>12306 购票助手，支持集群，多账号，多任务购票以及 Web 页面管理<br><img src="https://i.loli.net/2019/09/12/JGKSnPUm67TZqpW.png" alt="00.png"></p></blockquote><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>好，好，看到了这几行字，但是，有很多对非coder的我们似乎并没啥意义，因为，依然不知道在说啥。。。。下面就直接说咋搞好了。<br>在操作上，刚才说过了，让大家稍感无力是陌生，我尽量争取说的让大家感到不陌生吧。。。</p><h3 id="0-安装git"><a href="#0-安装git" class="headerlink" title="0. 安装git"></a>0. 安装git</h3><p>这部分我的博客里在写搭建博客的时候已经写过了，以获的小伙伴可以直接点连接去参考啦。<a href="https://yangluom.github.io/2019/08/09/Hello-World%E4%B9%8B%E5%90%8E/#1-2-2-%E5%AE%89%E8%A3%85Git">安装Git</a></p><h3 id="1-下载并安装py12306-购票助手"><a href="#1-下载并安装py12306-购票助手" class="headerlink" title="1. 下载并安装py12306 购票助手"></a>1. 下载并安装py12306 购票助手</h3><p>对，就两条命令:</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/pjialin/py12306</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> pip install -r requirements.txt</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h4 id="1-1-下载py12306-购票助手"><a href="#1-1-下载py12306-购票助手" class="headerlink" title="1.1 下载py12306 购票助手"></a>1.1 下载py12306 购票助手</h4><p>具体怎么输呢：<br>我们在git-bash写上（对，复制粘贴就好）：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/pjialin/py12306</span></span><br></pre></td></tr></table></figure><p>就会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Cloning into &apos;py12306&apos;...</span><br><span class="line">remote: Enumerating objects: 36, done.</span><br><span class="line">remote: Counting objects: 100% (36/36), done.</span><br><span class="line">remote: Compressing objects: 100% (26/26), done.</span><br><span class="line">remote: Total 1355 (delta 16), reused 23 (delta 9), pack-reused 1319</span><br><span class="line">Receiving objects: 100% (1355/1355), 56.50 MiB | 32.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (845/845), done.</span><br></pre></td></tr></table></figure><p>这一步是把py12306从github上拷贝到自己的电脑上。当然，如果你想要把软件安在指定的文件夹下，可以这么写 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /x/y</span><br><span class="line">git clone https://github.com/pjialin/py12306</span><br></pre></td></tr></table></figure><p><code>x</code>指的是电脑的盘符,<code>y</code>指的是我们指定的文件夹。对，需要注意的是，路径<code>/x/y</code>里不要有空格。<br>等着看见<code>Resolving deltas: 100% (845/845), done.</code>这句了，就表明下载结束了。需要说明一点的是，下载结束后，不需要特殊安装，就可以使用啦。<br>具体怎么用呢？我们继续往下看。</p><h4 id="1-2-配置py12306-购票助手"><a href="#1-2-配置py12306-购票助手" class="headerlink" title="1.2 配置py12306 购票助手"></a>1.2 配置py12306 购票助手</h4><h5 id="1-2-1-安装依赖包"><a href="#1-2-1-安装依赖包" class="headerlink" title="1.2.1 安装依赖包"></a>1.2.1 安装依赖包</h5><p>先安装依赖包，（不懂什么意思无所谓）要做的就是输上下面这条命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ./py12306 &amp;&amp; pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>然后就能看到下面的字样在屏幕上出现了：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">Looking in indexes: http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">Collecting appdirs==1.4.3 (from -r requirements.txt (line 2))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/56/eb/810e700ed1349edde4cb                                                       dc1b2a21e28cdf115f9faf263f6bbf8447c1abf3/appdirs-1.4.3-py2.py3-none-any.whl</span><br><span class="line">Collecting beautifulsoup4==4.7.0 (from -r requirements.txt (line 3))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/3f/ef/40271f62429deec36f2d                                                       040283e722856abcfd34bac063435a2213b77bef/beautifulsoup4-4.7.0-py3-none-any.whl (                                                       92kB)</span><br><span class="line">Collecting bs4==0.0.1 (from -r requirements.txt (line 4))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/10/ed/7e8b97591f6f45617413                                                       9ec089c769f89a94a1a4025fe967691de971f314/bs4-0.0.1.tar.gz</span><br><span class="line">Collecting certifi==2018.11.29 (from -r requirements.txt (line 5))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/9f/e0/accfc1b56b57e9750eba272e24c4dddeac86852c2bebd1236674d7887e8a/c             ertifi-2018.11.29-py2.py3-none-any.whl (154kB)</span><br><span class="line">Requirement already satisfied: chardet==3.0.4 in d:\python\pywin\lib\site-packages (from -r requirements.txt (line 6)) (3.             0.4)</span><br><span class="line">Collecting Click==7.0 (from -r requirements.txt (line 7))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/C             lick-7.0-py2.py3-none-any.whl (81kB)</span><br><span class="line">Collecting cssselect==1.0.3 (from -r requirements.txt (line 8))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/7b/44/25b7283e50585f0b4156960691d951b05d061abf4a714078393e51929b30/c             ssselect-1.0.3-py2.py3-none-any.whl</span><br><span class="line">Collecting fake-useragent==0.1.11 (from -r requirements.txt (line 9))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/d1/79/af647635d6968e2deb57a208d309f6069d31cb138066d7e821e575112a80/f             ake-useragent-0.1.11.tar.gz</span><br><span class="line">Collecting Flask==1.0.2 (from -r requirements.txt (line 10))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/7f/e7/08578774ed4536d3242b14dacb4696386634607af824ea997202cd0edb4b/F             lask-1.0.2-py2.py3-none-any.whl (91kB)</span><br><span class="line">Collecting Flask-JWT-Extended==3.15.0 (from -r requirements.txt (line 11))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/63/38/b77f584f0290b39b306d5c01cea69a24d97e558653418167373ba852baab/F             lask-JWT-Extended-3.15.0.tar.gz</span><br><span class="line">Collecting idna==2.8 (from -r requirements.txt (line 12))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/14/2c/cd551d81dbe15200be1cf41cd03869a46fe7226e7450af7a6545bfc474c9/i             dna-2.8-py2.py3-none-any.whl (58kB)</span><br><span class="line">Collecting itsdangerous==1.1.0 (from -r requirements.txt (line 13))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/76/ae/44b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/i             tsdangerous-1.1.0-py2.py3-none-any.whl</span><br><span class="line">Collecting Jinja2==2.10 (from -r requirements.txt (line 14))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/7f/ff/ae64bacdfc95f27a016a7bed8e8686763ba4d277a78ca76f32659220a731/J             inja2-2.10-py2.py3-none-any.whl (126kB)</span><br><span class="line">Collecting lxml==4.3.0 (from -r requirements.txt (line 15))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/7b/15/7f09437276afb2cba24ac27a8f5be10ca2993eca46db3c44f58914e1311a/l             xml-4.3.0-cp36-cp36m-win_amd64.whl (3.6MB)</span><br><span class="line">Collecting MarkupSafe==1.1.0 (from -r requirements.txt (line 16))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/9d/80/9a5daf3ed7b8482e72ee138cef602b538cfba5c507e24e39fb95c189b16b/M             arkupSafe-1.1.0-cp36-cp36m-win_amd64.whl</span><br><span class="line">Collecting parse==1.9.0 (from -r requirements.txt (line 17))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/b6/98/809e53e5778c59c4af9eb920605e7a8ab439407efbe89a6d51a46efd1937/p             arse-1.9.0.tar.gz</span><br><span class="line">Collecting pyee==5.0.0 (from -r requirements.txt (line 18))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/8e/06/10c18578e2d8b9cf9902f424f86d433c647ca55e82293100f53e6c0afab4/p             yee-5.0.0-py2.py3-none-any.whl</span><br><span class="line">Collecting PyJWT==1.7.1 (from -r requirements.txt (line 19))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/87/8b/6a9f14b5f781697e51259d81657e6048fd31a113229cf346880bb7545565/P             yJWT-1.7.1-py2.py3-none-any.whl</span><br><span class="line">Collecting pyppeteer==0.0.25 (from -r requirements.txt (line 20))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/b0/16/a5e8d617994cac605f972523bb25f12e3ff9c30baee29b4a9c50467229d9/p             yppeteer-0.0.25.tar.gz (1.2MB)</span><br><span class="line">Collecting pyquery==1.4.0 (from -r requirements.txt (line 21))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/09/c7/ce8c9c37ab8ff8337faad3335c088d60bed4a35a4bed33a64f0e64fbcf29/p             yquery-1.4.0-py2.py3-none-any.whl</span><br><span class="line">Collecting redis==3.0.1 (from -r requirements.txt (line 22))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/f5/00/5253aff5e747faf10d8ceb35fb5569b848cde2fdc13685d42fcf63118bbc/redis-3.0.1-p y2.py3-none-any.whl (61kB)</span><br><span class="line">Collecting requests==2.21.0 (from -r requirements.txt (line 23))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/7d/e3/20f3d364d6c8e5d2353c72a67778eb189176f08e873c9900e10c0287b84b/requests-2.21 .0-py2.py3-none-any.whl (57kB)</span><br><span class="line">Collecting requests-html==0.9.0 (from -r requirements.txt (line 24))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/d6/bb/54d8db5ac95f34b035b68747d765aadcbbd78687b029b41b39d2a3728f35/requests_html -0.9.0-py2.py3-none-any.whl</span><br><span class="line">Collecting six==1.12.0 (from -r requirements.txt (line 25))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/73/fb/00a976f728d0d1fecfe898238ce23f502a721c0ac0ecfedb80e0d88c64e9/six-1.12.0-py 2.py3-none-any.whl</span><br><span class="line">Collecting soupsieve==1.6.2 (from -r requirements.txt (line 26))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/ef/06/53edcae4edea76b38a325980dd35aed3b39f9bd0ef27b9d33f2e6dc4c7f6/soupsieve-1.6.2-py2.py3-none-any.whl</span><br><span class="line">Collecting tqdm==4.28.1 (from -r requirements.txt (line 27))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/91/55/8cb23a97301b177e9c8e3226dba45bb454411de2cbd25746763267f226c2/tqdm-4.28.1-py2.py3-none-any.whl (45kB)</span><br><span class="line">Collecting urllib3==1.24.1 (from -r requirements.txt (line 28))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/62/00/ee1d7de624db8ba7090d1226aebefab96a2c71cd5cfa7629d6ad3f61b79e/urllib3-1.24.1-py2.py3-none-any.whl (118kB)</span><br><span class="line">Collecting w3lib==1.19.0 (from -r requirements.txt (line 29))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/37/94/40c93ad0cadac0f8cb729e1668823c71532fd4a7361b141aec535acb68e3/w3lib-1.19.0-py2.py3-none-any.whl</span><br><span class="line">Collecting websockets==7.0 (from -r requirements.txt (line 30))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/61/e4/5898fd4382264c4a49efc70b44f9a336f400a28df003298ea4f999090dad/websockets-7.0-cp36-cp36m-win_amd64.whl (58kB)</span><br><span class="line">Collecting Werkzeug==0.14.1 (from -r requirements.txt (line 31))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/20/c4/12e3e56473e52375aa29c4764e70d1b8f3efa6682bef8d0aae04fe335243/Werkzeug-0.14.1-py2.py3-none-any.whl (322kB)</span><br><span class="line">Collecting DingtalkChatbot==1.3.0 (from -r requirements.txt (line 32))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/aa/1c/1436e11f42e4ea089c26708560fb1521cf2042a1a8eb66bfc1a2f54cff27/DingtalkChatbot-1.3.0-py2.py3-none-any.whl</span><br><span class="line">Collecting lightpush==0.1.3 (from -r requirements.txt (line 33))</span><br><span class="line">  Downloading http://mirrors.aliyun.com/pypi/packages/cd/92/234f0584cbe490ce269432043fda2bceda83ca329fc5fa463bbb2d19c2c8/lightpush-0.1.3-py3-none-any.whl</span><br><span class="line">Installing collected packages: appdirs, soupsieve, beautifulsoup4, bs4, certifi, Click, cssselect, fake-useragent, Werkzeug, itsdangerous, MarkupSafe, Jinja2, Flask, PyJWT, Flask-JWT-Extended, idna, lxml, parse, pyee, websockets, urllib3, tqdm, pyppeteer, pyquery, redis, requests, six, w3lib, requests-html, DingtalkChatbot, lightpush</span><br><span class="line">  Running setup.py install for bs4: started</span><br><span class="line">    Running setup.py install for bs4: finished with status &apos;done&apos;</span><br><span class="line">  Found existing installation: certifi 2018.4.16</span><br><span class="line">    Uninstalling certifi-2018.4.16:</span><br><span class="line">      Successfully uninstalled certifi-2018.4.16</span><br><span class="line">  Running setup.py install for fake-useragent: started</span><br><span class="line">    Running setup.py install for fake-useragent: finished with status &apos;done&apos;</span><br><span class="line">  Running setup.py install for Flask-JWT-Extended: started</span><br><span class="line">    Running setup.py install for Flask-JWT-Extended: finished with status &apos;done&apos;</span><br><span class="line">  Found existing installation: idna 2.7</span><br><span class="line">    Uninstalling idna-2.7:</span><br><span class="line">      Successfully uninstalled idna-2.7</span><br><span class="line">  Running setup.py install for parse: started</span><br><span class="line">    Running setup.py install for parse: finished with status &apos;done&apos;</span><br><span class="line">  Found existing installation: urllib3 1.23</span><br><span class="line">    Uninstalling urllib3-1.23:</span><br><span class="line">      Successfully uninstalled urllib3-1.23</span><br><span class="line">  Running setup.py install for pyppeteer: started</span><br><span class="line">    Running setup.py install for pyppeteer: finished with status &apos;done&apos;</span><br><span class="line">  Found existing installation: requests 2.19.1</span><br><span class="line">    Uninstalling requests-2.19.1:</span><br><span class="line">      Successfully uninstalled requests-2.19.1</span><br><span class="line">Successfully installed Click-7.0 DingtalkChatbot-1.3.0 Flask-1.0.2 Flask-JWT-Extended-3.15.0 Jinja2-2.10 MarkupSafe-1.1.0 PyJWT-1.7.1 Werkzeug-0.14.1 appdirs-1.4.3 beautifulsoup4-4.7.0 bs4-0.0.1 certifi-2018.11.29 cssselect-1.0.3 fake-useragent-0.1.11 idna-2.8 itsdangerous-1.1.0 lightpush-0.1.3 lxml-4.3.0 parse-1.9.0 pyee-5.0.0 pyppeteer-0.0.25 pyquery-1.4.0 redis-3.0.1 requests-2.21.0 requests-html-0.9.0 six-1.12.0 soupsieve-1.6.2 tqdm-4.28.1 urllib3-1.24.1 w3lib-1.19.0 websockets-7.0</span><br><span class="line">You are using pip version 10.0.1, however version 19.2.3 is available.</span><br><span class="line">You should consider upgrading via the &apos;python -m pip install --upgrade pip&apos; command.</span><br></pre></td></tr></table></figure><p>看到<code>Successfully installed。。。。</code>之后，就表明我们已经基本把该准备好的准备到90%啦。<br>后面一条命令是：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp env.py.example env.py</span></span><br></pre></td></tr></table></figure><p>然后，我们打开指定的文件夹<code>/x/y/py2306</code>,就可以看到有个叫做“env.py”的文件啦。</p><h5 id="1-2-2-修改个人配置"><a href="#1-2-2-修改个人配置" class="headerlink" title="1.2.2 修改个人配置"></a>1.2.2 修改个人配置</h5><p>我们需要再把自己的个人信息等配置一下（我这里只写最简单的需要修改的配置，当然，如果需要软件把抢到票的好消息告诉你，通过语音、qq、邮件、电报、ios或者微信推送均可实现，不过，这个聪明的你根据文件里的说明自行修改吧）：</p><ol><li>登录12306的账号密码<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 12306 账号</span><br><span class="line">USER_ACCOUNTS = [</span><br><span class="line">    # 目前已支持仅查询，不下单，屏蔽掉下面的账号即可</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;key&apos;: 0,  # 如使用多个账号 key 不能重复</span><br><span class="line">        &apos;user_name&apos;: &apos;your user name&apos;,</span><br><span class="line">        &apos;password&apos;: &apos;your password&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    # &#123;</span><br><span class="line">    #     &apos;key&apos;: &apos;wangwu&apos;,</span><br><span class="line">    #     &apos;user_name&apos;: &apos;wangwu@qq.com&apos;,</span><br><span class="line">    #     &apos;password&apos;: &apos;wangwu&apos;</span><br><span class="line">    # &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li></ol><p>这里的<code>your user name</code>是指我们自己12306官网的登录名，<code>your password</code>是指12306网站对应的登录密码。下面“#”后面是软件作者贴心给的例子，嗯，python里面，“#”后面的就代表没有意义了，只是给人类看的注释，然当要注意的是，改的时候不要把任何空格删了。。。。。。</p><ol start="2"><li>打码（只做名词解释，不用修改）<br>再往下看，“打码”是啥意思呢？聪明你的可以百度一下，简单说就是，直接通过程序来识别12306页面验证图片的意思。</li></ol><p>3.查询任务<br>3.1 修改出发日期<br>查询任务里面，修改出发日期，由于软件可以同时查阅多天的信息，可以把我们能接受的出行日期都写上。当然，我们如果就是确定某一天出行，这里需要把下面一行注释掉，比如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'left_dates'</span>: [  <span class="comment"># 出发日期 :Array</span></span><br><span class="line">    <span class="string">"2019-01-25"</span>,</span><br><span class="line">    <span class="string">"2019-01-26"</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><p>改成：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        <span class="string">'left_dates'</span>: [  <span class="comment"># 出发日期 :Array</span></span><br><span class="line">            <span class="string">"2019-01-25"</span>,</span><br><span class="line"><span class="comment">#            "2019-01-26",</span></span><br><span class="line">        ],</span><br></pre></td></tr></table></figure><p>3.2 修改出发日期<br>修改始发-到达站，也就是改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'stations'</span>: &#123;  <span class="comment"># 车站 支持多个车站同时查询  :Dict or :List</span></span><br><span class="line">    <span class="string">'left'</span>: <span class="string">'北京'</span>,</span><br><span class="line">    <span class="string">'arrive'</span>: <span class="string">'深圳'</span>,</span><br></pre></td></tr></table></figure><p>里面的’北京’和’深圳’啦。<br>3.3 修改乘客名<br><code>&quot;张三&quot;, &quot;王五&quot;,</code>改成需要自己给买票人的名字，如果仅一个，依然需要注释掉后面一个，同3.1 修改出发日期。<br>3.4 修改是否允许余票不足时提交部分乘客<br>这里，<code>0</code>代表不允许，<code>1</code>代表允许<br>3.5 其他<br>修改座位等级、车次、时间筛选，这些操作同3.1 修改出发日期。</p><h5 id="1-2-3-效果测试"><a href="#1-2-3-效果测试" class="headerlink" title="1.2.3 效果测试"></a>1.2.3 效果测试</h5><p>以上设置结束以后，保存一下信息，然后可以用以下命令测试一下效果：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python main.py -t</span><br></pre></td></tr></table></figure><p>将会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">######## py12306 ▒▒Ʊ▒▒▒֣▒▒▒▒▒▒▒Ϊ▒▒Դ▒▒▒ߣ▒▒▒▒▒▒▒▒▒▒▒ҵ▒▒; ########</span><br><span class="line"></span><br><span class="line">▒▒ǰΪ▒▒▒▒ģʽ▒▒▒▒▒▒▒▒▒▒▒▒ɺ▒▒Զ▒▒▒▒▒</span><br><span class="line"></span><br><span class="line">WEB ▒▒▒▒ҳ▒▒▒ѿ▒▒▒▒▒▒▒▒▒▒ ▒▒▒▒▒▒ַ + ▒˿▒ 8008 ▒▒▒в鿴</span><br><span class="line"></span><br><span class="line">**** ▒▒ǰ▒▒▒▒ ****</span><br><span class="line">▒▒▒̲߳▒ѯ: δ▒▒▒▒</span><br><span class="line">CDN ״̬: δ▒▒▒▒</span><br><span class="line">״̬:</span><br><span class="line">▒▒ѯ▒▒▒: 1 ▒▒</span><br><span class="line">▒û▒▒▒▒▒▒▒▒▒▒: 120 ▒▒</span><br><span class="line">WEB ▒▒▒▒ҳ▒▒: ▒ѿ▒▒▒</span><br><span class="line"></span><br><span class="line"># ▒▒▒▒ 1 ▒▒▒▒▒▒ #</span><br><span class="line">================== ▒▒▒▒ 1 ==================</span><br><span class="line">▒▒▒▒վ▒▒▒▒▒▒    ▒▒▒▒վ▒▒▒▒▒▒</span><br><span class="line">▒˳▒▒▒▒ڣ▒[&apos;2019-09-30&apos;, &apos;2019-10-01&apos;]</span><br><span class="line">▒▒ϯ▒▒Ӳ▒ԣ▒▒▒▒▒▒▒</span><br><span class="line">▒˳▒▒ˣ▒▒▒▒</span><br><span class="line">ɸѡ▒▒▒Σ▒▒▒ɸѡ</span><br><span class="line">▒▒▒▒▒▒▒ƣ▒▒▒▒▒ -&gt; ▒▒▒▒</span><br><span class="line"></span><br><span class="line"># ▒▒▒▒ 1 ▒▒▒û▒ #</span><br><span class="line"></span><br><span class="line">▒▒▒ڵ▒¼▒û▒ yanglu1220@hotmail.com</span><br><span class="line"> * Serving Flask app &quot;py12306.web.web&quot; (lazy loading)</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: Do not use the development server in a production environment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br><span class="line">▒▒▒▒▒▒▒▒▒▒֤▒▒...</span><br><span class="line">▒▒֤▒▒▒▒֤▒ɹ▒ ▒▒ʼ▒▒¼...</span><br><span class="line"># ▒▒ӭ▒▒▒▒▒▒▒▒▒ #</span><br><span class="line"></span><br><span class="line">▒▒ѯ▒▒▒▒ ▒▒▒▒ -&gt; ▒▒▒▒ ▒▒▒▒▒▒֤▒˿▒▒▒Ϣ</span><br><span class="line"># ▒˿▒▒▒֤▒ɹ▒ ▒▒▒(ѧ▒▒) #</span><br><span class="line"></span><br><span class="line">▒û▒ ▒▒▒ ▒▒▒▒▒▒▒▒▒▒▒´μ▒▒ 120 ▒▒▒</span><br><span class="line">&gt;&gt; ▒▒ 1 ▒β▒ѯ ▒▒▒▒ -&gt; ▒▒▒▒ 2019-09-12 21:01:07</span><br><span class="line">▒▒▒▒▒▒▒▒ 2019-09-30: ▒▒▒▒ - ▒▒▒▒                G19             G107            G55             G469            G165            G111  G355             G263            G113            G1              G41             G115            G117            G179            G33   G27              G7              G119            G323            G121            G301            G181            G163            G31   G123             G125            G411            G473            G183            1461            G9              G325            G129  G131             G185            G303            G187            G167            G133            G23             G135            G189  G137             G59             G139            G3              G43             G141            G191            G145            G193  K709             G11             G35             G161            G45             G351            G475            G155            G147  G29              ▒▒ʱ 0.03                ͣ▒▒ 0.75</span><br><span class="line">▒▒▒▒▒▒▒▒ 2019-10-01: ▒▒▒▒ - ▒▒▒▒                G19             G107            G55             G469            G165            G111  G355             G263            G113            G1              G41             G115            G117            G179            G33   G27              G7              G119            G323            G301            G181            G163            G31             G411  G473             G183            1461            G9              G325            G129            G131            G185            G303  G187             G167            G133            G23             G135            G189            G137            G59             G139  G3               G43             G141            G191            G145            G193            K709            G11             G35   G161             G45             G351            G475            G155            G147            G29             ▒▒ʱ 0.03              ͣ▒▒ 0.73</span><br><span class="line"></span><br><span class="line"># ▒▒▒▒▒▒ɣ▒▒▒▒▒▒▒▒▒Ƿ▒▒▒ȷ #</span><br></pre></td></tr></table></figure><p>测试无误后，就可以执行查询、购票任务啦：</p><h5 id="1-2-4-购票"><a href="#1-2-4-购票" class="headerlink" title="1.2.4 购票"></a>1.2.4 购票</h5><p>输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python main.py</span><br></pre></td></tr></table></figure><p>将会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">######## py12306 ▒▒Ʊ▒▒▒֣▒▒▒▒▒▒▒Ϊ▒▒Դ▒▒▒ߣ▒▒▒▒▒▒▒▒▒▒▒ҵ▒▒; ########</span><br><span class="line"></span><br><span class="line">▒▒־▒▒▒▒▒▒▒▒ļ▒▒▒: runtime/12306.log</span><br><span class="line"></span><br><span class="line">WEB ▒▒▒▒ҳ▒▒▒ѿ▒▒▒▒▒▒▒▒▒▒ ▒▒▒▒▒▒ַ + ▒˿▒ 8008 ▒▒▒в鿴</span><br><span class="line"></span><br><span class="line"> * Serving Flask app &quot;py12306.web.web&quot; (lazy loading)</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: Do not use the development server in a production environment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br></pre></td></tr></table></figure><p>当然，我们打开浏览器的时候，在地址栏输入<code>localhost:8008</code>或者<code>127.0.0.1:8008</code>，就能在网页上看到查询信息啦：<br>正常显示如下：<br><img src="https://i.loli.net/2019/09/13/qJV35Ej41zFm6yX.png" alt="04.png"><br><img src="https://i.loli.net/2019/09/13/gMoprftYmRFlNqb.png" alt="05.png"><br><img src="https://i.loli.net/2019/09/13/dv1Et9MpVSnXQow.png" alt="06.png"><br><img src="https://i.loli.net/2019/09/13/21a4ZCsWRNzHc6E.png" alt="07.png"></p><p>好吧，希望大家假期紧张的出行不再受买不到车票所累！<br>再次感谢<a href="https://github.com/pjialin" target="_blank" rel="noopener">pjialin</a> 大写的神器。</p><p><strong>小提示：目前查询和登录操作是分开的，查询是不依赖用户是否登录，放在 A 云 T 云容易被限制 ip，建议在其它网络环境下运行</strong><br><strong>特别转一句<a href="https://github.com/pjialin" target="_blank" rel="noopener">pjialin</a> 大的提示：请勿用作商业用途！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;抢票神器PY12306的使用&quot;&gt;&lt;a href=&quot;#抢票神器PY12306的使用&quot; class=&quot;headerlink&quot; title=&quot;抢票神器PY12306的使用&quot;&gt;&lt;/a&gt;抢票神器PY12306的使用&lt;/h1&gt;&lt;p&gt;又要过节了，先是中秋，后是国庆，转眼，元旦，春节也快了，大家很忙，忙着抢票，忙着要回家，忙着要出去玩耍，瞬间，再一次带火了长期霸榜的神器&lt;a href=&quot;https://github.com/pjialin/py12306&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;py12306 购票助手&lt;/a&gt; ，但是很多非coder的小伙伴（包括我）一开始对着火热又陌生的软件感到操作无力，是的，&lt;strong&gt;让我们退而却步的，不是繁复而是陌生&lt;/strong&gt;，所以，就试着写个小教程，权当帮助自己也希望能帮助到有缘人吧。&lt;/p&gt;
    
    </summary>
    
      <category term="实用软件" scheme="https://yangluom.github.io/categories/%E5%AE%9E%E7%94%A8%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="PY12306" scheme="https://yangluom.github.io/categories/%E5%AE%9E%E7%94%A8%E8%BD%AF%E4%BB%B6/PY12306/"/>
    
    
      <category term="PY12306" scheme="https://yangluom.github.io/tags/PY12306/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu里切换默认python版本</title>
    <link href="https://yangluom.github.io/2019/09/11/Ubuntu%E9%87%8C%E5%88%87%E6%8D%A2%E9%BB%98%E8%AE%A4python%E7%89%88%E6%9C%AC/"/>
    <id>https://yangluom.github.io/2019/09/11/Ubuntu里切换默认python版本/</id>
    <published>2019-09-11T15:39:33.000Z</published>
    <updated>2019-09-11T15:42:28.811Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ubuntu里切换默认python版本"><a href="#Ubuntu里切换默认python版本" class="headerlink" title="Ubuntu里切换默认python版本"></a>Ubuntu里切换默认python版本</h1><p>Ubuntu里默认python为2.7，如何修改为python3版本呢？</p><p>可以利用alternatives机制更改py3为默认。</p><p>shell里执行以下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 100 </span><br><span class="line">sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 150</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="python" scheme="https://yangluom.github.io/categories/python/"/>
    
    
      <category term="python" scheme="https://yangluom.github.io/tags/python/"/>
    
      <category term="shell" scheme="https://yangluom.github.io/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>调查就是解决问题</title>
    <link href="https://yangluom.github.io/2019/09/10/%E8%B0%83%E6%9F%A5%E5%B0%B1%E6%98%AF%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98/"/>
    <id>https://yangluom.github.io/2019/09/10/调查就是解决问题/</id>
    <published>2019-09-10T14:54:05.000Z</published>
    <updated>2019-09-10T15:11:03.907Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="调查就是解决问题"><a href="#调查就是解决问题" class="headerlink" title="调查就是解决问题"></a><strong>调查就是解决问题</strong></h1><p><strong>把你所谓困难问题的“来源”找到手，“现状”弄明白，你的这个困难问题也就容易解决了。调查就像“十月怀胎”，解决问题就像“一朝分娩”。调查就是解决问题。                –《毛选·一：反对本本主义》</strong></p><p>最近闲暇时间会去读读毛选，以期有意义的消磨下时光。为什么选毛选去读呢，是因为这段时间离我们生活的年代很近，基本的历史脉络很清晰，其他的周边史料比较丰富，且毛选因为要面对当时受众需求，用字也比较亲民，所以，一看起来会有印证，结合当时历史进程看，也更能感受文章的历史环境，二看起来也并不会特别枯燥，读后，总能又有新的理解，且偶有振聋发聩之感。</p> <a id="more"></a><p>期中，两论自然不必说，个人觉得结合目前具体的工作， 《毛选·一：反对本本主义》一文，对如何认识问题、调研问题、解决问题相当有指导意义。该文虽然写在1930年，也就是中国工农革命的幼年时期，内容似乎稍显单薄，但是，文章已以社会调查为例形象的讲述了认识问题、解决问题的方法论。</p><p>这里仅结合目前个人工作的内容，借助《本本》一文认识问题的方法论，稍谈一点自己浅薄的感悟。</p><p>新药研发，特别是新药筛选，是一项具有极大潜在社会价值和经济价值的工作，同时更是一项极具风险和挑战性的工作，工作本身目标明确，但如果所筛得的潜在药物不佳，将会导致后续巨大投入瞬间灰飞烟灭，此外潜在新药、靶点、治疗方法多种多样，每种靶点、方式都有其各自的优势与不足，每种评价方式亦有优劣，涉及的知识体系庞大，细节繁杂，另有很多基础研究上暂时的未知，以上亦给相应的筛选、发现工作带来很大的困难。新药开发是要高效而又稳健的，这是使得我们在进行新药开发时，需要以充分调研为基础，“<strong>调查就是解决问题</strong>”，“<strong>只有向实际情况作调查</strong>。”。</p><p>以下认识，仅代表个人浅见：首先应充分积累对所关注疾病本身的认识（包括但不限于疾病发生的流行病学、基本病程进展情况、已有上市、在研治疗药物的作用靶点和机制，及不同类型患者在不同治疗方案下的预后与已知和潜在的不足等等），这是进行相应新药发现、筛选的整体认知，可以明确为什么去做，可能在那些方面弥补或改进已有治疗策略，在做药的角度从何入手，能有多大临床需求、社会价值和潜在经济效益等问题，该部分内容是求面、求广、求细；其次对疾病发生机制不同阶段的生物学特征理化变化进行充分调研（包括但不限于细胞本身的变化、组织器官的变化以及相应的生物化学特征或是标志物的变化等等），这是对疾病发生、发展生物学本质的认知，这方面需要充分梳理对所关注疾病的研究历史、实验证据等，以上调研可以让我们了解人们对所关注疾病认知发展的来龙去脉，不仅包括已知的信息，更应包括尚未明确阐释的信息，这可以让我们思辨而不仅拘泥于我们想看到的信息来认识所关注疾病的本质，该部分调研是对药物有效性的保证，且可以对药物如何成药，对其作用机制方面的潜在风险进行充分预判，也正是潘总常常问及的“MOA（mechanism of action）是什么？”的问题，充分的认识到待选靶点发挥作用的生物学本质，才能够利用规律，对潜在药物进行筛选、改造和开发，还能指导我们去用合适的手段、合适的方法藉由已有的知识去评价药物的有效性，去用全面的角度评价药物的安全性，亦能在此基础上，使我们获得具有独立知识产权的创新药物，这部分内容是求准、求深、求辨、求新；再者，是对所选潜在药物可能的工艺、成本的调研，虽然新药筛选对这部分要求并不是太高，但是，该部分工作涉及到潜在药物产业化后市场接受度的问题，如果待选药物制备费用极高或者制备工艺对环境极不友好，且去治疗一个重要但不紧急的疾病，该药物是否适合现阶段的市场需求则又需要打一个比较大的问号了，这部分，我想，应该是求接地气。</p><p>在愿景或者理想的驱动下，将问题细致剖析、深入挖掘，对研究对象充分调研，充分知晓基础研究、临床研究和当下研究能力、研究条件的现实与我们要达成的目标，并以尽量全的视角去观察它们，科学而正确的提出问题，并直面工作中碰到的问题，再加合理而有效的实验和少许运气，我想，这足够让我们具有把目标从理想带入现实的“发言权”和底气了。</p><p><strong>[附]</strong></p><h1 id="反对本本主义"><a href="#反对本本主义" class="headerlink" title="反对本本主义"></a><strong>反对本本主义</strong></h1><p>（一九三〇年五月）毛 泽 东</p><p><strong>一、没有调查，没有发言权</strong></p><p>你对于某个问题没有调查，就停止你对于某个问题的发言权。这不太野蛮了吗？一点也不野蛮。你对那个问题的现实情况和历史情况既然没有调查，不知底里，对于那个问题的发言便一定是瞎说一顿。瞎说一顿之不能解决问题是大家明了的，那末，停止你的发言权有什么不公道呢？许多的同志都成天地闭着眼睛在那里瞎说，这是共产党员的耻辱，岂有共产党员而可以闭着眼睛瞎说一顿的吗？</p><p>要不得！</p><p>要不得！</p><p>注重调查！</p><p>反对瞎说！</p><p><strong>二、调查就是解决问题</strong></p><p>你对于那个问题不能解决吗？那末，你就去调查那个问题的现状和它的历史吧！你完完全全调查明白了，你对那个问题就有解决的办法了。一切结论产生于调查情况的末尾，而不是在它的先头。只有蠢人，才是他一个人，或者邀集一堆人，不作调查，而只是冥思苦索地“想办法”，“打主意”。须知这是一定不能想出什么好办法，打出什么好主意的。换一句话说，他一定要产生错办法和错主意。</p><p>许多巡视员，许多游击队的领导者，许多新接任的工作干部，喜欢一到就宣布政见，看到一点表面，一个枝节，就指手画脚地说这也不对，那也错误。这种纯主观地“瞎说一顿”，实在是最可恶没有的。他一定要弄坏事情，一定要失掉群众，一定不能解决问题。</p><p>许多做领导工作的人，遇到困难问题，只是叹气，不能解决。他恼火，请求调动工作，理由是“才力小，干不下”。这是懦夫讲的话。迈开你的两脚，到你的工作范围的各部分各地方去走走，学个孔夫子的“每事问”，任凭什么才力小也能解决问题，因为你未出门时脑子是空的，归来时脑子已经不是空的了，已经载来了解决问题的各种必要材料，问题就是这样子解决了。一定要出门吗？也不一定，可以召集那些明了情况的人来开个调查会，把你所谓困难问题的“来源”找到手，“现状”弄明白，你的这个困难问题也就容易解决了。</p><p>调查就像“十月怀胎”，解决问题就像“一朝分娩”。调查就是解决问题。</p><p><strong>三、反对本本主义</strong></p><p>以为上了书的就是对的，文化落后的中国农民至今还存着这种心理。不谓共产党内讨论问题，也还有人开口闭口“拿本本来”。我们说上级领导机关的指示是正确的，决不单是因为它出于“上级领导机关”，而是因为它的内容是适合于斗争中客观和主观情势的，是斗争所需要的。不根据实际情况进行讨论和审察，一味盲目执行，这种单纯建立在“上级”观念上的形式主义的态度是很不对的。为什么党的策略路线总是不能深入群众，就是这种形式主义在那里作怪。盲目地表面上完全无异议地执行上级的指示，这不是真正在执行上级的指示，这是反对上级指示或者对上级指示怠工的最妙方法。</p><p>本本主义的社会科学研究法也同样是最危险的，甚至可能走上反革命的道路，中国有许多专门从书本上讨生活的从事社会科学研究的共产党员，不是一批一批地成了反革命吗？就是明显的证据。我们说马克思主义是对的，决不是因为马克思这个人是什么“先哲”，而是因为他的理论，在我们的实践中，在我们的斗争中，证明了是对的。我们的斗争需要马克思主义。我们欢迎这个理论，丝毫不存什么“先哲”一类的形式的甚至神秘的念头在里面。读过马克思主义“本本”的许多人，成了革命叛徒，那些不识字的工人常常能够很好地掌握马克思主义。马克思主义的“本本”是要学习的，但是必须同我国的实际情况相结合。我们需要“本本”，但是一定要纠正脱离实际情况的本本主义。</p><p>怎样纠正这种本本主义？只有向实际情况作调查。</p><p><strong>四、离开实际调查就要产生唯心的阶级估量和唯心的工作指导，那末，它的结果，不是机会主义，便是盲动主义</strong></p><p>你不相信这个结论吗？事实要强迫你信。你试试离开实际调查去估量政治形势，去指导斗争工作，是不是空洞的唯心的呢？这种空洞的唯心的政治估量和工作指导，是不是要产生机会主义错误，或者盲动主义错误呢？一定要弄出错误。这并不是他在行动之前不留心计划，而是他于计划之前不留心了解社会实际情况，这是红军游击队里时常遇见的。那些李逵式的官长，看见弟兄们犯事，就懵懵懂懂地乱处置一顿。结果，犯事人不服，闹出许多纠纷，领导者的威信也丧失干净，这不是红军里常见的吗？必须洗刷唯心精神，防止一切机会主义盲动主义错误出现，才能完成争取群众战胜敌人的任务。必须努力作实际调查，才能洗刷唯心精神。</p><p><strong>五、社会经济调查，是为了得到正确的阶级估量，接着定出正确的斗争策略</strong></p><p>为什么要作社会经济调查？我们就是这样回答。因此，作为我们社会经济调查的对象的是社会的各阶级，而不是各种片断的社会现象。近来红军第四军的同志们一般的都注意调查工作了，但是很多人的调查方法是错误的。调查的结果就像挂了一篇狗肉账，像乡下人上街听了许多新奇故事，又像站在高山顶上观察人民城郭。这种调查用处不大，不能达到我们的主要目的。我们的主要目的，是要明了社会各阶级的政治经济情况。我们调查所要得到的结论，是各阶级现在的以及历史的盛衰荣辱的情况。举例来说，我们调查农民成分时，不但要知道自耕农，半自耕农，佃农，这些以租佃关系区别的各种农民的数目有多少，我们尤其要知道富农，中农，贫农，这些以阶级区别阶层区别的各种农民的数目有多少。我们调查商人成分，不但要知道粮食业、衣服业、药材业等行业的人数各有多少，尤其要调查小商人、中等商人、大商人各有多少。我们不仅要调查各业的情况，尤其要调查各业内部的阶级情况。我们不仅要调查各业之间的相互关系，尤其要调查各阶级之间的相互关系。我们调查工作的主要方法是解剖各种社会阶级，我们的终极目的是要明了各种阶级的相互关系，得到正确的阶级估量，然后定出我们正确的斗争策略，确定哪些阶级是革命斗争的主力，哪些阶级是我们应当争取的同盟者，哪些阶级是要打倒的。我们的目的完全在这里。</p><p>什么是调查时要注意的社会阶级？下面那些就是：</p><p>工业无产阶级</p><p>手工业工人</p><p>雇农</p><p>贫农</p><p>城市贫民</p><p>游民</p><p>手工业者</p><p>小商人</p><p>中农</p><p>富农</p><p>地主阶级</p><p>商业资产阶级</p><p>工业资产阶级</p><p>这些阶级（有的是阶层）的状况，都是我们调查时要注意的。在我们暂时的工作区域中所没有的，只是工业无产阶级和工业资产阶级，其余都是经常碰见的。我们的斗争策略就是对这许多阶级阶层的策略。</p><p>我们从前的调查还有一个极大的缺点，就是偏于农村而不注意城市，以致许多同志对城市贫民和商业资产阶级这二者的策略始终模糊。斗争的发展使我们离开山头跑向平地了，我们的身子早已下山了，但是我们的思想依然还在山上。我们要了解农村，也要了解城市，否则将不能适应革命斗争的需要。</p><p>   <strong>六、中国革命斗争的胜利要靠中国同志了解中国情况</strong></p><p>我们的斗争目的是要从民权主义转变到社会主义。我们的任务第一步是，争取工人阶级的大多数，发动农民群众和城市贫民，打倒地主阶级，打倒帝国主义，打倒国民党政权，完成民权主义革命。由这种斗争的发展，跟着就要执行社会主义革命的任务。这些伟大的革命任务的完成不是简单容易的，它全靠无产阶级政党的斗争策略的正确和坚决。倘若无产阶级政党的斗争策略是错误的，或者是动摇犹豫的，那末，革命就非走向暂时的失败不可。须知资产阶级政党也是天天在那里讨论斗争策略的，他们的问题是怎样在工人阶级中传播改良主义影响，使工人阶级受他们的欺骗，而脱离共产党的领导，怎样争取富农去消灭贫农的暴动，怎样组织流氓去镇压革命等等。在这样日益走向尖锐的短兵相接的阶级斗争的形势之下，无产阶级要取得胜利，就完全要靠他的政党——共产党的斗争策略的正确和坚决。共产党的正确而不动摇的斗争策略，决不是少数人坐在房子里能够产生的，它是要在群众的斗争过程中才能产生的，这就是说要在实际经验中才能产生。因此，我们需要时时了解社会情况，时时进行实际调查。那些具有一成不变的保守的形式的空洞乐观的头脑的同志们，以为现在的斗争策略已经是再好没有了，党的第六次全国代表大会的“本本”保障了永久的胜利，只要遵守既定办法就无往而不胜利。这些想法是完全错误的，完全不是共产党人从斗争中创造新局面的思想路线，完全是一种保守路线。这种保守路线如不根本丢掉，将会给革命造成很大损失，也会害了这些同志自己。红军中显然有一部分同志是安于现状，不求甚解，空洞乐观，提倡所谓“无产阶级就是这样”的错误思想，饱食终日，坐在机关里面打瞌睡，从不肯伸只脚到社会群众中去调查调查。对人讲话一向是那几句老生常谈，使人厌听。我们要大声疾呼，唤醒这些同志：</p><p>速速改变保守思想！</p><p>换取共产党人的进步的斗争思想！</p><p>到斗争中去！</p><p>到群众中作实际调查去！</p><p><strong>七、调查的技术</strong></p><p>（1）要开调查会作讨论式的调查</p><p>只有这样才能近于正确，才能抽出结论。那种不开调查会，不作讨论式的调查，只凭一个人讲他的经验的方法，是容易犯错误的。那种只随便问一下子，不提出中心问题在会议席上经过辩论的方法，是不能抽出近于正确的结论的。</p><p>（2）调查会到些什么人？</p><p>要是能深切明了社会经济情况的人。以年龄说，老年人最好，因为他们有丰富的经验，不但懂得现状，而且明白因果。有斗争经验的青年人也要，因为他们有进步的思想，有锐利的观察。以职业说，工人也要，农民也要，商人也要，知识分子也要，有时兵士也要，流氓也要。自然，调查某个问题时，和那个问题无关的人不必在座，如调查商业时，工农学各业不必在座。</p><p>（3）开调查会人多好还是人少好？</p><p>看调查人的指挥能力。那种善于指挥的，可以多到十几个人或者二十几个人。人多有人多的好处，就是在做统计时（如征询贫农占农民总数的百分之几），在做结论时（如征询土地分配平均分好还是差别分好），能得到比较正确的回答。自然人多也有人多的坏处，指挥能力欠缺的人会无法使会场得到安静。究竟人多人少，要依调查人的情况决定。但是至少需要三人，不然会囿于见闻，不符合真实情况。</p><p>（4）要定调查纲目</p><p>纲目要事先准备，调查人按照纲目发问，会众口说。不明了的，有疑义的，提起辩论。所谓“调查纲目”，要有大纲，还要有细目，如“商业”是个大纲，“布匹”，“粮食”，“杂货”，“药材”都是细目，布匹下再分“洋布”，“土布”，“绸缎”各项细目。</p><p>（5）要亲身出马</p><p>凡担负指导工作的人，从乡政府主席到全国中央政府主席，从大队长到总司令，从支部书记到总书记，一定都要亲身从事社会经济的实际调查，不能单靠书面报告，因为二者是两回事。</p><p>（6）要深入</p><p>初次从事调查工作的人，要作一两回深入的调查工作，就是要了解一处地方（例如一个农村、一个城市），或者一个问题（例如粮食问题、货币问题）的底里。深切地了解一处地方或者一个问题了，往后调查别处地方、别个问题，便容易找到门路了。</p><p>（7）要自己做记录</p><p>调查不但要自己当主席，适当地指挥调查会的到会人，而且要自己做记录，把调查的结果记下来。假手于人是不行的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;调查就是解决问题&quot;&gt;&lt;a href=&quot;#调查就是解决问题&quot; class=&quot;headerlink&quot; title=&quot;调查就是解决问题&quot;&gt;&lt;/a&gt;&lt;strong&gt;调查就是解决问题&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;把你所谓困难问题的“来源”找到手，“现状”弄明白，你的这个困难问题也就容易解决了。调查就像“十月怀胎”，解决问题就像“一朝分娩”。调查就是解决问题。                –《毛选·一：反对本本主义》&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最近闲暇时间会去读读毛选，以期有意义的消磨下时光。为什么选毛选去读呢，是因为这段时间离我们生活的年代很近，基本的历史脉络很清晰，其他的周边史料比较丰富，且毛选因为要面对当时受众需求，用字也比较亲民，所以，一看起来会有印证，结合当时历史进程看，也更能感受文章的历史环境，二看起来也并不会特别枯燥，读后，总能又有新的理解，且偶有振聋发聩之感。&lt;/p&gt;
    
    </summary>
    
      <category term="哲学" scheme="https://yangluom.github.io/categories/%E5%93%B2%E5%AD%A6/"/>
    
      <category term="方法论" scheme="https://yangluom.github.io/categories/%E5%93%B2%E5%AD%A6/%E6%96%B9%E6%B3%95%E8%AE%BA/"/>
    
    
      <category term="毛选" scheme="https://yangluom.github.io/tags/%E6%AF%9B%E9%80%89/"/>
    
  </entry>
  
  <entry>
    <title>启</title>
    <link href="https://yangluom.github.io/2019/09/07/%E5%90%AF/"/>
    <id>https://yangluom.github.io/2019/09/07/启/</id>
    <published>2019-09-07T06:43:32.000Z</published>
    <updated>2019-09-12T13:34:54.809Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="启"><a href="#启" class="headerlink" title="启"></a><center>启</center></h1><center>        --- 我想，这应该是一篇不断在update的博文</center><h2 id="缘"><a href="#缘" class="headerlink" title="缘"></a>缘</h2><p>​      是的，这部分说的是我为什么会做这么一个博客。</p> <a id="more"></a><h3 id="1-关于问题"><a href="#1-关于问题" class="headerlink" title="1. 关于问题"></a>1. 关于问题</h3><p>​      说到做这个博客的最初，其实还是想着靠博客来记录一些什么，记录什么呢？这个事情我纠结了一段时间，可以是技术笔记、可以是科技进展的摘录和翻译、可以是看到某些作品的感悟，抽离具象的东西，我想，应该记录一些自己曾经和现在正在疑惑的、自以为了然了的和又温故知新了的东西。人看世界、看问题的方式，随时间的推移，正如去读一个好的或者称之为经典的文学作品，他在不同的年纪或有了不同经历之后去读，应该会有新的角度，并从而得到不同的收获和感悟，偶会再有看到某些文字、章节后，再又恍然大悟且“当时我咋没感受”或者，“我去，这本书写的好深啊”的触动。是的，东西摆在那里，且一直客观的在那里，当你去看它的时候，你收集或者积累到的相关的信息有多少，又用什么角度去审视，就会有不同的收获与见解，当然，如果能把自己能看到的纯粹的东西（这里包括正向的经验和负向的不足）再吸纳进入自己的世界观，我想，这个时间就应该没有白花。</p><h4 id="1-1-看待问题"><a href="#1-1-看待问题" class="headerlink" title="1.1 看待问题"></a>1.1 看待问题</h4><p>​      承上，说到角度，去解决问题的不同尝试对每个人来说应该是最直接的经验。问题，人人、时时、处处都会碰到东西，那么，问题是什么呢？我想，每个人有每个人的理解，但可能看法还不一样，至少，在不同的语境下它的定义还是不同的，索性，我直接引用下现成的东西，在<a href="https://baike.baidu.com/item/%E9%97%AE%E9%A2%98/1067365" target="_blank" rel="noopener">百度百科</a>上是这么说的：“问题，指要求回答或解答的题目；事态的严重性足以引人研究讨论，或尚待解决者。”而在韦氏词典上，给出的解释是这样的：</p><blockquote><h4 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h4><p> <strong>noun</strong><br>prob·lem | \ ˈprä-bləm  , -bᵊm, -ˌblem<br>Definition of <em>problem</em> (Entry 1 of 2)<br><strong>1a**</strong>:** a question raised for inquiry, consideration, or solution<br>​  <strong>b**</strong>:** a proposition in mathematics or physics stating something to be done<br><strong>2a**</strong>:** an intricate unsettled question<br>​  <strong>b**</strong>:** a source of perplexity, distress, or vexation<br>​  <strong>c**</strong>:** difficulty in understanding or accepting</p></blockquote><blockquote><p>​ <em>I have a problem with your saying that</em></p></blockquote><blockquote><p> <strong>adjective</strong><br>Definition of <em>problem</em> (Entry 2 of 2)<br><strong>1**</strong>:<em>* dealing with a problem of conduct or social relationship<br>a *problem</em> play<br><strong>2**</strong>:<em>* difficult to deal with<br>a *problem</em> child</p></blockquote><p>​      是的，仅看不同的词典、来源，这个词依然有了有差异的解释。<br>​      这里我说的问题，是名词的问题，但又不是数学物理中的那种得到唯一解或者描述的问题，也不是类似社会问题的困境性质的问题，这里说的是对待事情、寻求解决的问题。在我理解来，在此范畴下的问题就是理想和现实之间的差距。关于这段，我觉得<a href="https://zh.wikipedia.org/wiki/%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">wikepedia对问题的说法</a>就很到位，有兴趣的可以酌情食用。以下部分是我自己的理解：理想是（我们自发的，或者别人给予的意愿或者）事情要达到的状态，现实是目前事情的状态，从现实到目标实现的这个过程即是问题解决，也可以说是回答了问题。而很好地解决问题的前提是，我们对理想和现实状态有充分的了解，明确知道完成态和现实态之间的差异，以及完成态的各种评价指标。所以，我们需要对将要处理的对象有充分的理解和认识，将要处理的对象是什么，其本质是什么，特性又有哪些？我们对研究对象目前的认知到了何种程度，未知又有哪些？我们要在哪个角度或者范围内解决这个问题？解决问题所在的领域的边界，抑或称之为内涵和外延在哪里？梳理清楚以上的背景，我们才能够更好的去看待事情的完成态，以及事情完成后的基本面貌，可能实现的好处有什么，可能出现的风险和新的问题又有哪些？基于以上充分调研，我们才会有更丰富、更准确的角度去评价我们需要处理的对象。是的，这里仅用对待问题这个具体的例子，来说一下本博客将以何种态度来看待问题。<br>​      依然清晰记得2014年入学的时候，我的导师梅品超教授对我知识结构的评价是：<strong>基本概念不清晰，基本原理不清楚</strong>。当时，感觉还是很震惊的吧，自以为做实验、抑或是生物化学、分子生物学以及细胞生物学类实验多年的我，当时还稍有不忿，不过现在想来，这应该算是后面求学的最大收获之一：要真正去认识一个事物，就要在人类知识的范围内充分了解其本质（包括发现其本质的过程）、其所属范畴，以及用于评价和支配其本身的规则和规律（这里包含为什么的内容）。<br><img src="https://i.loli.net/2019/09/09/AbuoEsY37Pjvr9H.jpg" alt="Symtom.jpg"><br>图片来源：<a href="https://www.randrmagonline.com/articles/87404-restoring-success-getting-to-the-root-of-the-problem" target="_blank" rel="noopener">Restoring Success: Getting to the ROOT of the Problem</a></p><h4 id="1-2-解决问题"><a href="#1-2-解决问题" class="headerlink" title="1.2 解决问题"></a>1.2 解决问题</h4><p>​      说到解决问题，马克思主义哲学经典的矛盾论、两分法、两点论是必然会用到的，但是，很多时候，又会被想要达成美好结果的意愿忽略掉。分析事物的时候，<a href="https://zh.wikipedia.org/wiki/%E9%97%AE%E9%A2%98" target="_blank" rel="noopener">wikepedia在问题条目</a>也做出了比较经典的总结，我就直接摘引如下了：</p><blockquote><ol><li>首要的是，收集整理关于现状的可信的信息，而不要假设已经拥有完备的可信信息；</li><li>不暗示倾向于某种原因或者解决方法；</li><li>只陈述现状和期望的状态；</li><li>在解决问题的过程中，问题的定义可能（有必要）会不断的改进或者转换形式。</li></ol></blockquote><p>​      在不断的对问题进行剖析之后，可以发现，对理想状态和现实状态的了解的精准程度，会直接影响问题解决的过程，因为，最终问题的解决是要以现实为基础，以理想的达成为考量的。当然，在解决问题的过程中，有些“问题”是必须直接面对的，有些“问题”又是可以迂回处理的，同时，不排除两种状态之间的转换。但是，面对正确的问题是最终解决问题的基础，逃避或者努力去解决“不正确”的问题，只会让事情变得更加不可控制。<br>当然，这里又会引申出解决问题的方法论和如何正确体问的话题，这部分等有空的时候再继续补充。</p><h3 id="2-关于人"><a href="#2-关于人" class="headerlink" title="2. 关于人"></a>2. 关于人</h3><p>​   说到人，这个话题就太大了，仅就个人浅薄的认识瞎说几句。个人认为，人，作为一个物种存在在这个世界上，是普通而又不普通的一种，说到普通，是因为人只是这个星球上的各种生命形态的一种。说到不普通，往远了说，自150亿年前宇宙大爆炸始，生命的出现已是各种偶然中的偶然，此外，在生命形态不断演化的过程当中，猴子中的失败者，人类逐渐演化成了现在智人的形态及生活、生存方式。身为智人，有各种生理上与严酷的自然条件不匹配的特征，按照人类简史的说法，智人产生了讲故事的能力，也就是描绘可能发生的事情的能力，智人以这种非眼前利益的意志，团结、协调起来，成为了这个星球上最有创造力的物种，并随着时间的推移，以族群的方式，不断积累、传播、再创造着各种知识与技巧，才造就了我们今天如此辉煌的物质世界，也藉于此，人类创造了自己的政治、经济、军事、文化、科技、律法等的各种社会形态和规则。而物种超离本能的自然属性，用更高层次的智慧去指导行为，则是那么多偶然中的更小概率的事件。当然不可回避的是，伴随着人类族群的创造和发展，很多物种却也因智人的发展，大量而快速的灭绝着。。。<br><img src="https://i.loli.net/2019/09/09/UAtpFDok5n4MiwK.png" alt="trace-fish-common-ancestor_1200.png"><br>图片来源：<a href="https://www.evogeneao.com/learn/tree-of-life" target="_blank" rel="noopener">The Tree of Life</a><br>期间，涵盖的面太宽，作为单个个体的人的精力和知识水平也极为有限，真正能够创造新的视角、开辟新的领域的人物，我想应该是凡人中的伟人；于平凡的我们，我想，一个人，真正去思考了，真正去实践了，才不枉走这一圈吧。<br>推荐一个网站吧：<a href="https://www.allhistory.com/" target="_blank" rel="noopener">全历史</a> 一个正在不断充实中的历史网站。</p><h3 id="3-关于科学"><a href="#3-关于科学" class="headerlink" title="3. 关于科学"></a>3. 关于科学</h3><p>突然发现，这篇里面，谈的话题都很大，额，超纲了，就瞎抄瞎写吧，哈哈。</p><h4 id="3-1-科学的发展历史"><a href="#3-1-科学的发展历史" class="headerlink" title="3.1 科学的发展历史"></a>3.1 科学的发展历史</h4><p>这个有很多书，有兴趣的话，可以去读读，暂时仅列书目和提纲，这个太大了，以我的知识能力，很显然是写不了的，但是，这又是应该知道的东西，我想，仍然以提纲为挈领，以个人不同时间关注的点的摘抄和补充为主吧。</p><h4 id="3-2-科学的定义"><a href="#3-2-科学的定义" class="headerlink" title="3.2 科学的定义"></a>3.2 科学的定义</h4><h4 id="3-3-科学精神"><a href="#3-3-科学精神" class="headerlink" title="3.3 科学精神"></a>3.3 科学精神</h4><p>天地不仁，以万物为刍狗；圣人不仁，以百姓为刍狗。</p><h3 id="4-关于美"><a href="#4-关于美" class="headerlink" title="4. 关于美"></a>4. 关于美</h3><h4 id="3-1-美的定义"><a href="#3-1-美的定义" class="headerlink" title="3.1 美的定义"></a>3.1 美的定义</h4><h2 id="界"><a href="#界" class="headerlink" title="界"></a>界</h2><p>这部分说的是我的博客可能涉及的方面。<br>作为一个射手男，对神秘与未知还有一部分迷离不清的事物，总抱有很强的好奇心，所以，我想，博客的内容应该是以技术、知识的转载为主，自己的感想、理解为辅，顺带时而还会有些自己对某些自己熟悉的领域知识、进展的梳理和总结吧。</p><h3 id="1-生命科学最新进展"><a href="#1-生命科学最新进展" class="headerlink" title="1. 生命科学最新进展"></a>1. 生命科学最新进展</h3><h3 id="2-生物制药、细胞治疗及基因治疗方面方法及进展"><a href="#2-生物制药、细胞治疗及基因治疗方面方法及进展" class="headerlink" title="2. 生物制药、细胞治疗及基因治疗方面方法及进展"></a>2. 生物制药、细胞治疗及基因治疗方面方法及进展</h3><h4 id="2-1-疾病发生机制"><a href="#2-1-疾病发生机制" class="headerlink" title="2.1 疾病发生机制"></a>2.1 疾病发生机制</h4><h4 id="2-2-治疗药物、方法进展"><a href="#2-2-治疗药物、方法进展" class="headerlink" title="2.2 治疗药物、方法进展"></a>2.2 治疗药物、方法进展</h4><h4 id="2-3-生物制药策略"><a href="#2-3-生物制药策略" class="headerlink" title="2.3 生物制药策略"></a>2.3 生物制药策略</h4><h4 id="2-4-生物制药技术"><a href="#2-4-生物制药技术" class="headerlink" title="2.4 生物制药技术"></a>2.4 生物制药技术</h4><h3 id="3-生物信息学技术的原理及分析方法"><a href="#3-生物信息学技术的原理及分析方法" class="headerlink" title="3. 生物信息学技术的原理及分析方法"></a>3. 生物信息学技术的原理及分析方法</h3><h4 id="3-1-NGS（测序技术、分析方法等）"><a href="#3-1-NGS（测序技术、分析方法等）" class="headerlink" title="3.1 NGS（测序技术、分析方法等）"></a>3.1 NGS（测序技术、分析方法等）</h4><h4 id="3-2-结构分析、预测（Pymol、DS、MOE、Schrodinger等，包括但不限于结构查看、模拟及docking）"><a href="#3-2-结构分析、预测（Pymol、DS、MOE、Schrodinger等，包括但不限于结构查看、模拟及docking）" class="headerlink" title="3.2 结构分析、预测（Pymol、DS、MOE、Schrodinger等，包括但不限于结构查看、模拟及docking）"></a>3.2 结构分析、预测（Pymol、DS、MOE、Schrodinger等，包括但不限于结构查看、模拟及docking）</h4><h3 id="4-数据分析语言、方法相关"><a href="#4-数据分析语言、方法相关" class="headerlink" title="4. 数据分析语言、方法相关"></a>4. 数据分析语言、方法相关</h3><h4 id="4-1-Linux操作"><a href="#4-1-Linux操作" class="headerlink" title="4.1 Linux操作"></a>4.1 Linux操作</h4><h4 id="4-2-Python"><a href="#4-2-Python" class="headerlink" title="4.2 Python"></a>4.2 Python</h4><h4 id="4-3-R语言"><a href="#4-3-R语言" class="headerlink" title="4.3 R语言"></a>4.3 R语言</h4><h4 id="4-4-统计学原理及方法"><a href="#4-4-统计学原理及方法" class="headerlink" title="4.4 统计学原理及方法"></a>4.4 统计学原理及方法</h4><h4 id="4-5-结果呈现（图像绘制、图像处理、格式等）"><a href="#4-5-结果呈现（图像绘制、图像处理、格式等）" class="headerlink" title="4.5 结果呈现（图像绘制、图像处理、格式等）"></a>4.5 结果呈现（图像绘制、图像处理、格式等）</h4><h4 id="4-6-其他涉及软件的操作等"><a href="#4-6-其他涉及软件的操作等" class="headerlink" title="4.6 其他涉及软件的操作等"></a>4.6 其他涉及软件的操作等</h4><h3 id="5-历史人文地理天文"><a href="#5-历史人文地理天文" class="headerlink" title="5. 历史人文地理天文"></a>5. 历史人文地理天文</h3><h3 id="6-其他（包括自己的一些小感想）"><a href="#6-其他（包括自己的一些小感想）" class="headerlink" title="6. 其他（包括自己的一些小感想）"></a>6. 其他（包括自己的一些小感想）</h3><h4 id="6-1-实用软件"><a href="#6-1-实用软件" class="headerlink" title="6.1 实用软件"></a>6.1 实用软件</h4><h2 id="冀"><a href="#冀" class="headerlink" title="冀"></a>冀</h2><p>希望把这个博客，当作一个记录，记录当下、记录过往、记录成长，同时也是对自己的敦促。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;启&quot;&gt;&lt;a href=&quot;#启&quot; class=&quot;headerlink&quot; title=&quot;启&quot;&gt;&lt;/a&gt;&lt;center&gt;启&lt;/center&gt;&lt;/h1&gt;&lt;center&gt;        --- 我想，这应该是一篇不断在update的博文&lt;/center&gt;


&lt;h2 id=&quot;缘&quot;&gt;&lt;a href=&quot;#缘&quot; class=&quot;headerlink&quot; title=&quot;缘&quot;&gt;&lt;/a&gt;缘&lt;/h2&gt;&lt;p&gt;​      是的，这部分说的是我为什么会做这么一个博客。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>抓取每日biying图片</title>
    <link href="https://yangluom.github.io/2019/09/01/%E6%8A%93%E5%8F%96%E6%AF%8F%E6%97%A5biying%E5%9B%BE%E7%89%87/"/>
    <id>https://yangluom.github.io/2019/09/01/抓取每日biying图片/</id>
    <published>2019-09-01T15:49:31.000Z</published>
    <updated>2019-09-05T17:37:42.005Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="抓取每日biying图片"><a href="#抓取每日biying图片" class="headerlink" title="抓取每日biying图片"></a>抓取每日biying图片</h1><h2 id="缘起"><a href="#缘起" class="headerlink" title="缘起"></a>缘起</h2><p><a href="https://cn.bing.com/" target="_blank" rel="noopener">必应</a>每天更新的图片是相当的精致的（在线查看的话，推荐<a href="https://bing.ioliu.cn/" target="_blank" rel="noopener">NinexCss做的壁纸</a>网站啦，<a href="https://github.com/xCss/bing" target="_blank" rel="noopener">代码地址</a>也可以点击查看），个人以为是微软的又一良心之作，当然，巨硬家的良心之作还是很多的^_^。最初想着，每天开机的时候就能够把biying的图片自动改为桌面就好了，当然，这个也是实现了的，不过有的桌面壁纸的确不太适合本人的风格，但并不妨碍图片依旧很美腻，索性，直接就写了个东西（好吧，我承认，最初是根据<a href="https://blog.csdn.net/icevmj/article/details/78890552" target="_blank" rel="noopener">FransicZhang</a>写的改的），每天开机时，自动去抓取biying的图片，放在一个文件夹里，对，那种感觉就是，翻着看起来就感到很开心的了。<br>当然，修改的主要原因是，图片链接 <a href="https://area.sinaapp.com/bingImg/" target="_blank" rel="noopener">https://area.sinaapp.com/bingImg/</a>  的图片命名方式好像变化了，导致图片用原来的python脚本抓取不到了，这里主要改了下存回本地的图片的命名方式。。。。<br> <a id="more"></a></p><h2 id="扣子"><a href="#扣子" class="headerlink" title="扣子"></a>扣子</h2><p>我的系统是Win10 64位，python3也已经安装在系统中并加入了系统环境变量里面。剩下的，废话不多说了，直接上python3的代码吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#import urllib.request</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> requests         </span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> ctypes</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">save_img</span><span class="params">(img_url,dirname)</span>:</span></span><br><span class="line">    <span class="comment">#保存图片到磁盘文件夹dirname中</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(dirname):</span><br><span class="line">            <span class="keyword">print</span> (<span class="string">'文件夹'</span>,dirname,<span class="string">'不存在，重新建立'</span>)</span><br><span class="line">            <span class="comment">#os.mkdir(dirname)</span></span><br><span class="line">            os.makedirs(dirname)</span><br><span class="line">        <span class="comment">#获得图片文件名，包括后缀</span></span><br><span class="line">        basename1 = os.path.basename(img_url)</span><br><span class="line">        basename = basename1.lstrip(<span class="string">'th\\?id=OHR.'</span>).rstrip(<span class="string">'&amp;rf=LaDigue_1920x1080.jpg&amp;pid=hp'</span>)</span><br><span class="line">        print(<span class="string">'basename:'</span>, basename)</span><br><span class="line">        <span class="comment">#拼接目录与文件名，得到图片路径</span></span><br><span class="line">        filepath = os.path.join(dirname, basename+<span class="string">".jpg"</span>)</span><br><span class="line">        <span class="comment">#下载图片，并保存到文件夹中</span></span><br><span class="line">        urllib.request.urlretrieve(img_url,filepath)</span><br><span class="line">    <span class="keyword">except</span> IOError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'文件操作失败'</span>,e)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">print</span> (<span class="string">'错误 ：'</span>,e)</span><br><span class="line">    print(<span class="string">"Save"</span>, filepath, <span class="string">"successfully!"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> filepath</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求网页，跳转到最终 img 地址</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_img_url</span><span class="params">(raw_img_url = <span class="string">"https://area.sinaapp.com/bingImg/"</span>)</span>:</span></span><br><span class="line">    r = requests.get(raw_img_url)       </span><br><span class="line">    img_url = r.url <span class="comment"># 得到图片文件的网址</span></span><br><span class="line">    print(<span class="string">'img_url:'</span>, img_url)</span><br><span class="line">    <span class="keyword">return</span> img_url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置图片绝对路径 filepath 所指向的图片为壁纸</span></span><br><span class="line"><span class="comment">#def set_img_as_wallpaper(filepath):</span></span><br><span class="line"><span class="comment">#    ctypes.windll.user32.SystemParametersInfoW(20, 0, filepath, 0)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    dirname = <span class="string">"D:/python/biying/biyingw"</span>       <span class="comment"># 图片要被保存在的位置</span></span><br><span class="line">    img_url = get_img_url()</span><br><span class="line">    filepath = save_img(img_url, dirname)   <span class="comment"># 图片文件的的路径</span></span><br><span class="line"><span class="comment">#    set_img_as_wallpaper(filepath)</span></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>然后，可以写个BiyingPicCrawl.bat在上面.py存放的文件夹里，然后设置BiyingPicCrawl.bat文件开机启动，就可以实现每天开机时，自动去抓取biying的图片的目的了。。。。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">python biyingwall.py</span><br></pre></td></tr></table></figure><h2 id="小感想"><a href="#小感想" class="headerlink" title="小感想"></a>小感想</h2><p>这小伎俩算是鸡鸣狗盗的范畴吧，但是，看到图片取回本地保持着，还是很开心的啦。<br>再附一张好看的图片吧<br><img src="https://i.loli.net/2019/09/02/Hhi2Mvu8RDJqFdL.jpg" alt="BabySloth_ZH-CN8329403615_1920x1080.jpg"></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;抓取每日biying图片&quot;&gt;&lt;a href=&quot;#抓取每日biying图片&quot; class=&quot;headerlink&quot; title=&quot;抓取每日biying图片&quot;&gt;&lt;/a&gt;抓取每日biying图片&lt;/h1&gt;&lt;h2 id=&quot;缘起&quot;&gt;&lt;a href=&quot;#缘起&quot; class=&quot;headerlink&quot; title=&quot;缘起&quot;&gt;&lt;/a&gt;缘起&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://cn.bing.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;必应&lt;/a&gt;每天更新的图片是相当的精致的（在线查看的话，推荐&lt;a href=&quot;https://bing.ioliu.cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NinexCss做的壁纸&lt;/a&gt;网站啦，&lt;a href=&quot;https://github.com/xCss/bing&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;代码地址&lt;/a&gt;也可以点击查看），个人以为是微软的又一良心之作，当然，巨硬家的良心之作还是很多的^_^。最初想着，每天开机的时候就能够把biying的图片自动改为桌面就好了，当然，这个也是实现了的，不过有的桌面壁纸的确不太适合本人的风格，但并不妨碍图片依旧很美腻，索性，直接就写了个东西（好吧，我承认，最初是根据&lt;a href=&quot;https://blog.csdn.net/icevmj/article/details/78890552&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;FransicZhang&lt;/a&gt;写的改的），每天开机时，自动去抓取biying的图片，放在一个文件夹里，对，那种感觉就是，翻着看起来就感到很开心的了。&lt;br&gt;当然，修改的主要原因是，图片链接 &lt;a href=&quot;https://area.sinaapp.com/bingImg/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://area.sinaapp.com/bingImg/&lt;/a&gt;  的图片命名方式好像变化了，导致图片用原来的python脚本抓取不到了，这里主要改了下存回本地的图片的命名方式。。。。&lt;br&gt;
    
    </summary>
    
      <category term="python" scheme="https://yangluom.github.io/categories/python/"/>
    
      <category term="爬虫" scheme="https://yangluom.github.io/categories/python/%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="python" scheme="https://yangluom.github.io/tags/python/"/>
    
      <category term="biying" scheme="https://yangluom.github.io/tags/biying/"/>
    
  </entry>
  
  <entry>
    <title>蛋白质-DNA互作研究--技术更迭！</title>
    <link href="https://yangluom.github.io/2019/08/29/%E8%9B%8B%E7%99%BD%E8%B4%A8-DNA%E4%BA%92%E4%BD%9C%E7%A0%94%E7%A9%B6-%E6%8A%80%E6%9C%AF%E6%9B%B4%E8%BF%AD%EF%BC%81/"/>
    <id>https://yangluom.github.io/2019/08/29/蛋白质-DNA互作研究-技术更迭！/</id>
    <published>2019-08-28T17:14:11.000Z</published>
    <updated>2019-09-05T17:37:39.168Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="蛋白质-DNA互作研究–技术更迭！"><a href="#蛋白质-DNA互作研究–技术更迭！" class="headerlink" title="蛋白质-DNA互作研究–技术更迭！"></a>蛋白质-DNA互作研究–技术更迭！</h1><p>依然是为了避免重复造轮子的优化，本文基于<a href>诺唯赞生物</a>的文章<a href="https://mp.weixin.qq.com/s?__biz=MjM5NTcwMTA2Mw==&mid=2652655307&idx=1&sn=3109da49be7fac32a16d327c3f1a3fcd&chksm=bd1c66e38a6beff52710f522d956eb3714aaceb218154d478b04f2c8b59903b76df08fcb6584&mpshare=1&scene=1&srcid=&sharer_sharetime=1567012310911&sharer_shareid=816f734c3d2fb29668df8cecf587ddcc&key=0d403d3babf6608ff26b9e6687babddca52554420a490eef7a4a21adaea02c98eaf710a20ad1203a64a4bf24ccd85bcc9beda6745905cbc5fa9055ba81a249dfdfd7e8efefae1a4a027a2dd19cdafe4e&ascene=1&uin=MjY0MDM3MDU4MA%3D%3D&devicetype=Windows+10&version=62060833&lang=zh_CN&pass_ticket=6gwo2Bf6dV46tyX%2Faxvh4h1TP0enAKg0RlnXua84G0LiV1QMmIvVYYHJ8kZwdImY" target="_blank" rel="noopener">干货 | 蛋白质-DNA互作研究那些你不知道的技术更迭！</a>进行修改与补充。<br>蛋白质与DNA互作是基因转录调控的关键，也是启动基因转录的前提。蛋白质与DNA互作主要包括组蛋白、转录因子、DNA甲基化酶和染色质重塑复合物等。为了研究蛋白质-DNA互作，科学家发明了很多方法：凝胶阻滞、DNaseⅠ足迹实验、甲基化干扰、体内足迹、酵母杂交、ChIP-Seq等。其中ChIP-Seq可以真实、完整地反映结合在DNA序列上的靶蛋白，是目前研究蛋白质-DNA互作的经典方法。但该技术需要大量细胞，且步骤繁琐，耗时较长，因此，研究者不断在寻找新的替代方法。<br>2019年4月Thomas G Fazzio教授等发表在Cell期刊的uliCUT&amp;RUN技术，将蛋白质-DNA互作研究升级到单细胞水平。近几个月来，又相继有文章报道了CUT&amp;Tag等技术，进一步优化了蛋白质-DNA互作研究方法，本文将对系列方法一并总结介绍。</p><h2 id="01-蛋白质-DNA相互作用技术发展历程"><a href="#01-蛋白质-DNA相互作用技术发展历程" class="headerlink" title="01 蛋白质-DNA相互作用技术发展历程"></a>01 蛋白质-DNA相互作用技术发展历程</h2><table><thead><tr><th align="center">时间</th><th align="left">技术</th></tr></thead><tbody><tr><td align="center">1997年</td><td align="left">Orlando等研发出ChIP[1]，主要用于研究转录因子与DNA结合位点的序列信息。</td></tr><tr><td align="center">2009年</td><td align="left">Dominic Schmidt等将ChIP与高通量测序技术结合，发明了ChIP-seq，能够在全基因组范围内检测与蛋白相互作用的DNA区域。</td></tr><tr><td align="center">2017年</td><td align="left">Henikoff等发布CUT&amp;RUN技术，使用微球菌核酸酶（micrococcal nuclease, MNase）进行染色质切割替代ChIP-seq中的超声打断，使得蛋白-DNA互作研究从ChIP-seq所需的104级别降到100-1000个细胞。</td></tr><tr><td align="center">2019年</td><td align="left">Thomas G Fazzio教授等发布uliCUT&amp;RUN，将CUT&amp;RUN技术升级到单细胞水平，并应用于早期胚胎研究。</td></tr><tr><td align="center">2019年</td><td align="left">Henikoff等发明CUT&amp;Tag，使用带有接头的Tn5转座酶替代MNase，简化实验操作，将细胞量从104级别降到60个细胞甚至单细胞。</td></tr></tbody></table><h2 id="02-蛋白质-DNA相互作用技术概述"><a href="#02-蛋白质-DNA相互作用技术概述" class="headerlink" title="02 蛋白质-DNA相互作用技术概述"></a>02 蛋白质-DNA相互作用技术概述</h2> <a id="more"></a><h3 id="✦染色质免疫共沉淀（ChIP）"><a href="#✦染色质免疫共沉淀（ChIP）" class="headerlink" title="✦染色质免疫共沉淀（ChIP）:"></a>✦染色质免疫共沉淀（ChIP）:</h3><p>ChIP是全基因组范围内检测蛋白-DNA互作的标准方法，该技术由Orlando等于1997年创立<sup>[1]</sup>。</p><p><img src="https://i.loli.net/2019/08/29/QYPgJdUFWcXE7nO.png" alt="01.png"></p><center>图1：ChIP 基本原理图<sup>[1]</sup></center><h4 id="✦ChIP原理："><a href="#✦ChIP原理：" class="headerlink" title="✦ChIP原理："></a>✦ChIP原理：</h4><p>将染色质和与之相互作用的转录因子和组蛋白通过甲醛等物质交联起来，然后通过超声将染色质打碎成小片段，加入针对特定转录因子或特殊修饰的组蛋白抗体，通过Protein A/Protein G微球或磁珠将抗体-转录因子-染色质复合物拖下来，通过PCR或测序的方法检测与目的蛋白相结合的DNA序列，进而研究这些转录因子在细胞发育或者生长中的作用位点。</p><h3 id="✦ChIP-seq："><a href="#✦ChIP-seq：" class="headerlink" title="✦ChIP-seq："></a>✦ChIP-seq：</h3><p>ChIP-seq将ChIP技术与二代测序相结合，将ChIP下来的DNA进行二代测序文库构建，能够获取全基因组范围内组蛋白DNA及染色质修饰等DNA区段信息。</p><p><img src="https://i.loli.net/2019/08/29/pZxl41vDKndT6yM.png" alt="02.png"></p><center>图2：ChIP-seq 流程</center><h4 id="✦ChIP-seq原理："><a href="#✦ChIP-seq原理：" class="headerlink" title="✦ChIP-seq原理："></a>✦ChIP-seq原理：</h4><p>将通过ChIP特异性收集到的与目的蛋白结合的DNA片段进行纯化与文库构建，ChIP-seq继承了ChIP的技术难点，需要先用甲醛将与DNA互作的蛋白固定，这个过程会造成一些非相关蛋白交联，形成假阳性。一些作用力小的转录因子或者由于甲醛交联不充分，在超声破碎时会造成假阴性。为了消除背景噪音，则需加大细胞投入量。ChIP以及ChIP-seq无法捕获少量细胞中发生的关键表观基因组学过程， 包括影响胚胎发育，发育疾病，干细胞的过程分化和某些癌症的发生。</p><h3 id="✦CUT-amp-RUN-Cleavage-Under-Targets-and-Release-Using-Nuclease-："><a href="#✦CUT-amp-RUN-Cleavage-Under-Targets-and-Release-Using-Nuclease-：" class="headerlink" title="✦CUT&amp;RUN (Cleavage Under Targets and Release Using Nuclease )："></a>✦CUT&amp;RUN (Cleavage Under Targets and Release Using Nuclease )：</h3><p>Henikoff实验室于2017年1月16日发表在elife上关于CUT&amp;RUN的文章，使得蛋白-DNA互作研究从ChIP-seq所需的10<sup>4</sup>级别降到100 - 1,000个细胞<sup>[2]</sup>。 </p><p><img src="https://i.loli.net/2019/08/29/ZKOWIRnvbL1AQgG.png" alt="03.png"></p><center>图3：CUT&RUN 文章 <sup>[2]</sup></center><h4 id="✦CUT-amp-RUN原理："><a href="#✦CUT-amp-RUN原理：" class="headerlink" title="✦CUT&amp;RUN原理："></a>✦CUT&amp;RUN原理：</h4><p><img src="https://i.loli.net/2019/08/29/YgREoDvyKI2Zm17.png" alt="04.png"></p><center>图4：CUT&RUN 原理 <sup>[3]</sup></center><p>利用连有刀豆蛋白A的磁珠（concanavalin A-coated magnetic beads）结合细胞。使用非离子去污剂洋地黄皂苷进行细胞膜通透。然后孵育靶蛋白（如转录因子, TF）的抗体和Protein A-MNase。抗体和Protein A-MNase能够通过核孔进入细胞核，MNase 通过Protein A 和抗体的介导切割靶蛋白附近的DNA序列。MNase的活化需要Ca2+，可通过加入Ca2+或者螯合剂来启动或终止反应，进而将靶蛋白结合的DNA序列从细胞核中释放到上清中，用以建库。</p><h3 id="✦uliCUT-amp-RUN"><a href="#✦uliCUT-amp-RUN" class="headerlink" title="✦uliCUT&amp;RUN:"></a>✦uliCUT&amp;RUN:</h3><p>2019年4月4日，发表在Cell期刊，文章进一步将该技术升级到单细胞水平，并应用于早期胚胎。升级版CUT&amp;RUN被称为超低量CUT&amp;RUN（ultra-low input CUT&amp;RUN, uliCUT&amp;RUN）。</p><p><img src="https://i.loli.net/2019/08/29/oRm5KHOBXxjqnPd.png" alt="05.png"></p><center>图5：uliCUT&RUN文章 <sup>[4]</sup></center><p>相对于CUT&amp;RUN技术，uliCUT&amp;RUN的改进包括：Buffer、体系、孵育时间、spike-in DNA量以及建库制备和纯化过程。</p><p><img src="https://i.loli.net/2019/08/29/iJzokgG4PrHap2F.png" alt="06.png"></p><center>图6：不同细胞量mESCs的uliCUT&RUN数据结果<sup>[4]</sup></center><p>将不同细胞量mESC的uliCUT&amp;RUN数据中的CTCF和H3K4me3测序结果与已有文献发表的ChIP-seq数据进行read密度可视化比较，发现10个细胞起始量的测序结果可以展现出类似50万细胞量的结合位点富集热图。其中CTCF的结合区更为狭窄集中，而H3K4me3则占据相对宽的区段。</p><h3 id="✦CUT-amp-Tag（Cleavage-Under-Targets-and-Tagmentation）："><a href="#✦CUT-amp-Tag（Cleavage-Under-Targets-and-Tagmentation）：" class="headerlink" title="✦CUT&amp;Tag（Cleavage Under Targets and Tagmentation）："></a>✦CUT&amp;Tag（Cleavage Under Targets and Tagmentation）：</h3><p>Henikoff博士于2019年4月29日发表在Nature Communication上关于CUT&amp;Tag的文章，让细胞量从104级别降到60个细胞甚至单细胞。<br><img src="https://i.loli.net/2019/08/29/oHUX7caPvkiVRm5.png" alt="07.png"></p><center>图7：CUT&Tag文献<sup>[5]</sup></center><h4 id="✦CUT-amp-Tag-原理："><a href="#✦CUT-amp-Tag-原理：" class="headerlink" title="✦CUT&amp;Tag 原理："></a>✦CUT&amp;Tag 原理：</h4><p><img src="https://i.loli.net/2019/08/29/3fk2ZFPEhs64BxI.png" alt="08.png"></p><center>图8：CUT&Tag原理图<sup>[5]</sup></center><p>利用连有刀豆蛋白A的磁珠（concanavalin A-coated magnetic beads）结合细胞（刀豆蛋白A能与细胞膜上的糖蛋白结合）。使用非离子去污剂洋地黄皂苷进行细胞膜通透。然后分步孵育靶蛋白（如转录因子, TF）的抗体（一抗）、二抗、和Protein A-Tn5，抗体和Protein A-Tn5能够通过细胞膜、核孔进入细胞核，Tn5通过Protein A 和抗体的介导切割靶蛋白附近的DNA序列。使用Tn5在进行切割的时候，会在被切割的片段两端加上接头序列，通过PCR扩增直接可以得到二代测序文库。</p><p><img src="https://i.loli.net/2019/08/29/EItw1u8bADUidlx.png" alt="09.png"></p><center>图9: CUT&Tag、CUT&RUN的peaks鉴定结果与ChIP-seq的对比<sup>[5]</sup></center><p>Henikoff等使用了ChIP-seq、CUT&amp;RUN、CUT&amp;Tag三种方法来对组蛋白H3K27me3进行研究。通过相同的数据量（8M Reads）进行比较分析发现，三种方法对应的染色体景观相似，但是ChIP-seq需要更高的测序深度才能达到去背景噪音的效果，CUT&amp;RUN和CUT&amp;Tag的信噪比远远高于ChIP-seq。</p><h4 id="✦CUT-amp-Tag-单细胞操作流程："><a href="#✦CUT-amp-Tag-单细胞操作流程：" class="headerlink" title="✦CUT&amp;Tag 单细胞操作流程："></a>✦CUT&amp;Tag 单细胞操作流程：</h4><p><img src="https://i.loli.net/2019/08/29/TEyq5BurAeKUkd8.png" alt="10.png"></p><center>图10：单细胞CUT&Tag操作流程<sup>[5]</sup></center><p>CUT&amp;Tag能够对极少量细胞（60个细胞）进行操作，还可以进行单细胞操作。进行单细胞操作需要将细胞进行分装，由于Protein A-Tn5在细胞内进行，PCR反应之前，切割的核酸均在细胞内， Henikoff博士通过分配单个细胞到5184纳米孔，再加入带随机标签的引物进行扩增的办法，实现单细胞测序。</p><h3 id="✦其他蛋白质-DNA互作研究方法："><a href="#✦其他蛋白质-DNA互作研究方法：" class="headerlink" title="✦其他蛋白质-DNA互作研究方法："></a>✦其他蛋白质-DNA互作研究方法：</h3><p>2019年3月以来，bioRxiv上传了数篇蛋白-DNA互作研究的预印文章，包括CoBATCH<sup>[5]</sup> 和ACT-seq<sup>[6]</sup> 技术等，同样基于Tn5与融合蛋白进行ChIP技术的创新，原理基本相同。</p><h2 id="03-ChIP-seq、CUT-amp-RUN与CUT-amp-Tag技术比较"><a href="#03-ChIP-seq、CUT-amp-RUN与CUT-amp-Tag技术比较" class="headerlink" title="03 ChIP-seq、CUT&amp;RUN与CUT&amp;Tag技术比较"></a>03 ChIP-seq、CUT&amp;RUN与CUT&amp;Tag技术比较</h2><table><thead><tr><th align="center">参数</th><th align="center">ChIP-seq</th><th align="center">CUT&amp;RUN</th><th align="center">CUT&amp;Tag</th></tr></thead><tbody><tr><td align="center">起始细胞量</td><td align="center">~ 10<sup>6</sup> cells</td><td align="center">&gt; 10<sup>3</sup> cells</td><td align="center">&gt; 60 cells</td></tr><tr><td align="center">实验操作时间</td><td align="center">3 ~ 4 天</td><td align="center">1天</td><td align="center">1天</td></tr><tr><td align="center">信噪比</td><td align="center">低</td><td align="center">高</td><td align="center">高</td></tr><tr><td align="center">数据重复性</td><td align="center">低</td><td align="center">高</td><td align="center">高</td></tr></tbody></table><h2 id="04-CUT-amp-RUN与CUT-amp-Tag核心技术"><a href="#04-CUT-amp-RUN与CUT-amp-Tag核心技术" class="headerlink" title="04 CUT&amp;RUN与CUT&amp;Tag核心技术"></a>04 CUT&amp;RUN与CUT&amp;Tag核心技术</h2><p><strong>Protein A-Tn5、Protein G-Tn5以及 Protein A-MNase三种酶是CUT&amp;Tag、CUT&amp;RUN技术中的关键核心酶。</strong> 由于CUT&amp;Tag、CUT&amp;RUN均是针对极低起始量细胞进行实验，因此对核心酶原料有极高要求。</p><p>首先是Tn5转座酶需要具有高活性，才能保证对微量DNA的高灵敏度和高亲和力，有效抓取数十个细胞中的有限结合位点；第二，由于Tn5转座酶对DNA的高亲和力，纯化过程中易产生非特异核酸残留。应用在仅有数十个细胞的CUT&amp;Tag实验中，非特异核酸残留会对建库效果和测序数据产生较大影响。因此，选择CUT&amp;Tag用酶时，一方面需要对Tn5转座酶进行定向进化和突变，选择高活性突变株；另一方面，需要有较高的蛋白纯化工艺，尽可能降低非特异核酸残留。</p><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>[1] Orlando, V., Strutt, H., &amp; Paro, R. (1997). Analysis of chromatin structure byin VivoFormaldehyde cross-linking. Methods, 11(2), 205-214.</p><p>[2] Skene, P.J., and Henikoff, S. (2017). An efficient targeted nuclease strategy for high-resolution mapping of DNA binding sites. eLife 6, e21856.</p><p>[3] Skene, P.J., Henikoff, J.G., and Henikoff, S. (2018). Targeted in situ genomewide profiling with high efficiency for low cell numbers. Nat. Protoc. 13, 1006–1019.</p><p>[4] Kaya-Okur, H. S., Wu, S. J., Codomo, C. A., Pledger, E. S., Bryson, T. D., Henikoff, J. G., … &amp; Henikoff, S. (2019). CUT&amp;Tag for efficient epigenomic profiling of small samples and single cells. Nature communications, 10(1), 1930.</p><p>[5] Wang, Q., Xioong, H., Ai, S., Yu, X., Liu, Y., Zhang, J., &amp; He, A. (2019). CoBATCH for high-throughput single-cell epigenomic profiling. bioRxiv, 590661.</p><p>[6] Carter, B., Ku, W. L., Tang, Q., Kang, J. Y., &amp; Zhao, K. (2019). Mapping Histone Modifications in Low Cell Number and Single Cells Using Antibody-guided Chromatin Tagmentation (ACT-seq). bioRxiv, 571208.</p><p>[7] Wu J, Huang B, Chen H, et al. The landscape of accessible chromatin in mammalian preimplantation embryos[J]. Nature, 2016, 534(7609): 652.</p><p>[8] Zheng C, Zheng L, Yoo J K, et al. Landscape of infiltrating T cells in liver cancer revealed by single-cell sequencing[J]. Cell, 2017, 169(7): 1342-1356. e16.</p><p>[9] Zhang L, Yu X, Zheng L, et al. Lineage tracking reveals dynamic relationships of T cells in colorectal cancer[J]. Nature, 2018, 564(7735): 268.</p><p>[10] Han X, Wang R, Zhou Y, et al. Mapping the mouse cell atlas by microwell-seq[J]. Cell, 2018, 172(5): 1091-1107. e17.</p><p>[11] Wu J, Xu J, Liu B, et al. Chromatin analysis in human early development reveals epigenetic transition during ZGA[J]. Nature, 2018, 557(7704): 256.</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;蛋白质-DNA互作研究–技术更迭！&quot;&gt;&lt;a href=&quot;#蛋白质-DNA互作研究–技术更迭！&quot; class=&quot;headerlink&quot; title=&quot;蛋白质-DNA互作研究–技术更迭！&quot;&gt;&lt;/a&gt;蛋白质-DNA互作研究–技术更迭！&lt;/h1&gt;&lt;p&gt;依然是为了避免重复造轮子的优化，本文基于&lt;a href&gt;诺唯赞生物&lt;/a&gt;的文章&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MjM5NTcwMTA2Mw==&amp;mid=2652655307&amp;idx=1&amp;sn=3109da49be7fac32a16d327c3f1a3fcd&amp;chksm=bd1c66e38a6beff52710f522d956eb3714aaceb218154d478b04f2c8b59903b76df08fcb6584&amp;mpshare=1&amp;scene=1&amp;srcid=&amp;sharer_sharetime=1567012310911&amp;sharer_shareid=816f734c3d2fb29668df8cecf587ddcc&amp;key=0d403d3babf6608ff26b9e6687babddca52554420a490eef7a4a21adaea02c98eaf710a20ad1203a64a4bf24ccd85bcc9beda6745905cbc5fa9055ba81a249dfdfd7e8efefae1a4a027a2dd19cdafe4e&amp;ascene=1&amp;uin=MjY0MDM3MDU4MA%3D%3D&amp;devicetype=Windows+10&amp;version=62060833&amp;lang=zh_CN&amp;pass_ticket=6gwo2Bf6dV46tyX%2Faxvh4h1TP0enAKg0RlnXua84G0LiV1QMmIvVYYHJ8kZwdImY&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;干货 | 蛋白质-DNA互作研究那些你不知道的技术更迭！&lt;/a&gt;进行修改与补充。&lt;br&gt;蛋白质与DNA互作是基因转录调控的关键，也是启动基因转录的前提。蛋白质与DNA互作主要包括组蛋白、转录因子、DNA甲基化酶和染色质重塑复合物等。为了研究蛋白质-DNA互作，科学家发明了很多方法：凝胶阻滞、DNaseⅠ足迹实验、甲基化干扰、体内足迹、酵母杂交、ChIP-Seq等。其中ChIP-Seq可以真实、完整地反映结合在DNA序列上的靶蛋白，是目前研究蛋白质-DNA互作的经典方法。但该技术需要大量细胞，且步骤繁琐，耗时较长，因此，研究者不断在寻找新的替代方法。&lt;br&gt;2019年4月Thomas G Fazzio教授等发表在Cell期刊的uliCUT&amp;amp;RUN技术，将蛋白质-DNA互作研究升级到单细胞水平。近几个月来，又相继有文章报道了CUT&amp;amp;Tag等技术，进一步优化了蛋白质-DNA互作研究方法，本文将对系列方法一并总结介绍。&lt;/p&gt;
&lt;h2 id=&quot;01-蛋白质-DNA相互作用技术发展历程&quot;&gt;&lt;a href=&quot;#01-蛋白质-DNA相互作用技术发展历程&quot; class=&quot;headerlink&quot; title=&quot;01 蛋白质-DNA相互作用技术发展历程&quot;&gt;&lt;/a&gt;01 蛋白质-DNA相互作用技术发展历程&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;时间&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;技术&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;1997年&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Orlando等研发出ChIP[1]，主要用于研究转录因子与DNA结合位点的序列信息。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;2009年&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Dominic Schmidt等将ChIP与高通量测序技术结合，发明了ChIP-seq，能够在全基因组范围内检测与蛋白相互作用的DNA区域。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;2017年&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Henikoff等发布CUT&amp;amp;RUN技术，使用微球菌核酸酶（micrococcal nuclease, MNase）进行染色质切割替代ChIP-seq中的超声打断，使得蛋白-DNA互作研究从ChIP-seq所需的104级别降到100-1000个细胞。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;2019年&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Thomas G Fazzio教授等发布uliCUT&amp;amp;RUN，将CUT&amp;amp;RUN技术升级到单细胞水平，并应用于早期胚胎研究。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;2019年&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Henikoff等发明CUT&amp;amp;Tag，使用带有接头的Tn5转座酶替代MNase，简化实验操作，将细胞量从104级别降到60个细胞甚至单细胞。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&quot;02-蛋白质-DNA相互作用技术概述&quot;&gt;&lt;a href=&quot;#02-蛋白质-DNA相互作用技术概述&quot; class=&quot;headerlink&quot; title=&quot;02 蛋白质-DNA相互作用技术概述&quot;&gt;&lt;/a&gt;02 蛋白质-DNA相互作用技术概述&lt;/h2&gt;
    
    </summary>
    
      <category term="Epigenetics" scheme="https://yangluom.github.io/categories/Epigenetics/"/>
    
      <category term="ChIP-seq" scheme="https://yangluom.github.io/categories/Epigenetics/ChIP-seq/"/>
    
    
      <category term="蛋白质-DNA互作" scheme="https://yangluom.github.io/tags/%E8%9B%8B%E7%99%BD%E8%B4%A8-DNA%E4%BA%92%E4%BD%9C/"/>
    
      <category term="技术" scheme="https://yangluom.github.io/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Nature 投稿: 格式指南</title>
    <link href="https://yangluom.github.io/2019/08/21/Nature-%E6%8A%95%E7%A8%BF-%E6%A0%BC%E5%BC%8F%E6%8C%87%E5%8D%97/"/>
    <id>https://yangluom.github.io/2019/08/21/Nature-投稿-格式指南/</id>
    <published>2019-08-20T17:08:21.000Z</published>
    <updated>2019-09-05T17:37:35.444Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nature-投稿-格式指南"><a href="#Nature-投稿-格式指南" class="headerlink" title="Nature 投稿: 格式指南"></a>Nature 投稿: 格式指南</h1><p>为避免重造轮子，本文主要是在<a href="http://www.cailiaoniu.com/6285.html" target="_blank" rel="noopener">材料牛  SCI丨科研必备：Nature 投稿指南</a>的基础上进行补充和修改。</p><p>本指南翻译了投稿Nature在格式上的一些<a href="https://www.nature.com/nature/for-authors/formatting-guide" target="_blank" rel="noopener">要求</a>。除了投稿指南，还可以通过阅读Nature杂志上面的文章（打印版或online版）来熟悉Nature的内容和写作风格。</p><h2 id="1-Nature稿件的格式"><a href="#1-Nature稿件的格式" class="headerlink" title="1 Nature稿件的格式"></a>1 Nature稿件的格式</h2> <a id="more"></a><p>对于原创研究性文章，Nature的主要格式有Articles 和 Letters。此外，Nature还出版其他的投稿材料，详述如下（1.4节）。</p><h3 id="1-1-Articles"><a href="#1-1-Articles" class="headerlink" title="1.1 Articles"></a>1.1 Articles</h3><p>Articles应是原创报道，其结论代表了对一个重要问题理解的实质性进展，并具有直接、深远的影响。通常不超过5页的Nature journal page，并且不超过50篇参考文献。 （纯文本每页约1300字。）Articles需提供一个最多150字且与正文分离的摘要（一般期刊都有这样的要求）。摘要不能有参考文献，并且不包含数字、缩写、缩略语或测试方法（除非必要）。【编外话： Nature 524, 450; Nature 444, 347; Nature 516, 78这三篇文章在摘要中都引用了参考文献，感觉Nature期刊这种情况较常见，但是其他期刊很少见到摘要中引用参考文献的情况出现。】</p><p>摘要目的是让在该学科之外的读者可以理解文章的研究内容。摘要包括：2-3句关于研究背景的基本介绍；主要结论的陈述（由短语Here we show 或其他等效词引出）；2-3句关于该实验发现或结论如何推动该领域的发展的总结。【编外话：Nature投稿指南中关于摘要的详细要求在我们写文章时，对于摘要的写作提供了一个非常好的借鉴，这样的高要求同样适用于其他期刊的文章。】</p><p>Articles一般在3000字左右，在进行简洁明确的实验数据讨论或解释之前需对研究背景做一个500字左右的介绍（与摘要部分有一定的重复也可以），同时文章以一个或者两个简短的总结段落结尾。</p><p>正文可以包含小标题，总共不超过6个，每个不超过40个字符（包括空格），即小标题的文本长度少于一行。Articles通常有5-6个展示项目（图或表）。</p><h3 id="1-2-Letters"><a href="#1-2-Letters" class="headerlink" title="1.2 Letters"></a>1.2 Letters</h3><p>Letters是比较简短的原创研究报告，其重要性意味着该原创研究能够引起其他领域研究人员的关注。</p><p>Letters一般不超过4页的Nature journal page，并且不超过30篇参考文献。Letters以一个完全引用的段落开始, 约200字, 最多不超过300字。该段的目的在于可以使得其他学科的读者能够理解所研究的内容。该段应以2-3个研究领域基本介绍的句子开头；其次用一句话声明主要结论（以“Here we show”或其等效词开头）; 最后，2-3句关于该实验发现或结论如何推动该领域的发展的总结。</p><p>请参考annotated example,了解应该怎么写Letters的摘要段。</p><p>正文的其余部分大约1500字。为了简要概括与所做工作相关的内容，正文末尾的所有讨论都要简洁，不要重复论文前面的总结或介绍材料。</p><p>Letters通常有3 - 4个展示项目（图或表）。</p><p>字数统计指的是文章的正文。引用、标题、作者和致谢不包含在总字数内。</p><h3 id="1-3-Brief-Communications-Arising-and-Corrections"><a href="#1-3-Brief-Communications-Arising-and-Corrections" class="headerlink" title="1.3 Brief Communications Arising and Corrections"></a>1.3 Brief Communications Arising and Corrections</h3><p>Brief Communications Arising是指：对发表在Nature上的原创研究论文或其它同行评议材料做出的特别有趣或重要的评论。它们只在网上公布但不出版。</p><p>关于投递Corrections的更多细节，请阅读Brief Communications Arising。（Corrections这种情况一般发生在文章接受以后出现的未被编辑和审稿人发现的错误用的。）</p><h3 id="1-4-Other-contributions-to-Nature"><a href="#1-4-Other-contributions-to-Nature" class="headerlink" title="1.4 Other contributions to Nature"></a>1.4 Other contributions to Nature</h3><p>我们常用的一般为Article和Letter这两种形式，我们重点对这两种形式文章的投稿要求进行了详解。Nature还有其他类型的文章，在此我们没有进行过多解释。有关其他类型的文章的投稿请打开链接（other submitted material）来查看其它类型的稿件和有关详细内容。包括：News and Comment；Correspondence；Obituaries；Opinion；Books &amp; Arts；Futures；News &amp; Views；Insights, Reviews and Perspectives；Analysis；Hypothesis；Careers；Technology Features；Outlooks。</p><h2 id="2-编辑过程"><a href="#2-编辑过程" class="headerlink" title="2 编辑过程"></a>2 编辑过程</h2><p>打开链接（getting published in Nature）查看Nature上发布的有关出版、稿件评审和投稿之后编辑如何处理论文的说明。文章提交给Nature即表明所有作者都已经同意文章上的所有内容。更多细节请参见（authorship policy）。</p><h2 id="3-送审前评估"><a href="#3-送审前评估" class="headerlink" title="3 送审前评估"></a>3 送审前评估</h2><p>如果您想询问您的Article 或 Letter是否适合Nature，请使用Nature的在线预提交咨询服务（presubmission enquiry service）。所有的预提交咨询必须包含一个给编辑的封面段（阐明广泛的科学的读者兴趣），一个完整的引用总结段落（用Letters to Nature的风格来写）和参考文献。</p><h2 id="4-可读性"><a href="#4-可读性" class="headerlink" title="4 可读性"></a>4 可读性</h2><p>Nature是一个覆盖所有科学领域的国际性杂志。因此，稿件应该简明扼要, 这样可以让其他学科领域的读者或者英语非母语的读者容易理解。</p><p>重要且专业化的术语应该简洁而不是说教式的解释。</p><p>对于基因、蛋白质和其他专业名称，作者可以使用其习惯的用法，但是首次出现需给出其标准形式。【编外话：所有的期刊一般都有这样的要求：专业术语以及后文中常出现的组合词可以简写，但是首次出现需给出标准形式。】Nature青睐作者使用国际商定的命名法; 详细内容见author policies。网络发布的正式描述新物种的特殊情况也请注明。</p><p>在投稿正式接收之前，Nature的编辑会就有关格式问题给出详细的建议。Nature的编辑常常建议修改标题，改写Articles的摘要和Letters的第一段，这样可以使得广大的读者容易明白所得到的结论。</p><p>文章接收后，Nature的副编辑（文字编辑）确保文中的文字和图形可以让领域外的人读懂，会把文章编辑为Nature自己的风格。副编辑特别重视摘要段，整体清晰度，图，图的格式和标题。</p><p>编辑部会给作者寄去校样，并欢迎作者与Nature杂志的副编辑就修改意见进行讨论，但Nature杂志对于论文的格式和图形的大小有关的问题有最终决定权。</p><h2 id="5-Format-of-Articles-and-Letters"><a href="#5-Format-of-Articles-and-Letters" class="headerlink" title="5 Format of Articles and Letters"></a>5 Format of Articles and Letters</h2><p>稿件应使用双倍行距并用英语写作。</p><p>稿件的组织形式：标题，正文，方法，参考文献，补充材料（如果有的话），致谢，作者的贡献，作者信息（包含数据沉积说明（data deposition statement），竞争利益申报以及相应的作者线（competing interest declaration and corresponding author line）），表格，图的说明。</p><p>对于首次提交的稿件，为了便于审稿期刊要求文字和图片合并在一个文件中（Microsoft Word或PDF格式，最大不超过30 MB）。一般情况下Word版本的稿件中，图表可以插入在文中的适当位置，也可在稿件的最后单独呈现，无论哪种情况都不能缺少有关图表的注释。另外，Word中需要添加行号及页码 （编外话：这样做的目的即能为审稿提供便利，还能方便我们对于审稿人提出的问题精确定位。例：Page xxx, Line xxx）。</p><h3 id="5-1-Titles"><a href="#5-1-Titles" class="headerlink" title="5.1 Titles"></a>5.1 Titles</h3><p>标题不超过两行。对于标题，Letters尽量不超过 90个字符（包括空格），Articles 尽量不超过75个字符（包括空格）。标题通常不包括数字，首字母缩写词，缩写或标点符号。为了检索的方便性，Title应包括足够的细节，让领域外的读者看到Title就可以明白文章的主要内容。</p><h3 id="5-2-Text"><a href="#5-2-Text" class="headerlink" title="5.2 Text"></a>5.2 Text</h3><p>Articles不超过5页，Letters不超过4页。文本的一整页包含约1300字。此外，一个典型的Article包含约3000字的正文，五个小显示项目（图和/或表格）配有简短的说明，如果合适的话还要有引文和方法部分。一个典型的Letter包含约1500字的正文（不包括Letter的第一段，图表说明，如果合适的话还要有引用和方法部分）和四个小展示项目（图和/或表）与简短的说明。复合图（有几组）通常需要占用大约半页，相当于约600个单词。</p><p>当提交新的稿件或者修改稿时，作者应给编辑附信以说明文章的长度，大概多少页数。稿件如果严重超出了在这里规定的长度或者编辑特别提醒的长度，作者必须将文章缩减才能被接收，这会延迟文章的发表。</p><p>Nature要求作者在稿件末尾的注释部分说明共同作者所做的贡献（参见5.5节）。如果作者认为有必要说明两个或者多个共同作者地位相等，可以用星号将他们标记出来，并且紧接着通讯地址下面写上“These authors contributed equally to this work”（这些作者对该工作贡献相等）。如果地位平等的共同作者超过三个，作者应该在投稿声明中说明。当前地址应写在作者列表的下面，（在第一页的底部脚注规则下），可以用匕首符号来标识; 所有其他必要的与作者相关的解释写在致谢中。</p><p>我们首选的文本格式是微软的Word，要删除标签。</p><p>TeX/LaTeX:如果您使用TeX/LaTeX准备的文章，在您的文章接收之后，排版之前，我们需要将其转换为Word格式。文章的所有文本材料（包括引文，表格，图表标题，在线方法等）应该以单个.tex文件包含在内。</p><p>期刊使用“标准”的字体，最好是12点Times New Roman。对于数学符号，希腊字母和其它特殊字符，使用普通的文字或符号字体（Symbol font）。Word公式编辑器/ 数学公式（MathType）应仅用于那些不能使用普通的文本或符号字体制作的公式 。</p><h3 id="5-3-Methods"><a href="#5-3-Methods" class="headerlink" title="5.3 Methods"></a>5.3 Methods</h3><p>在文本的结尾部分，应当包括方法部分，紧挨着图的说明。方法部分将出现在在线PDF，和全文（HTML）在线版，但在印刷发行时不会出现。方法部分要尽可能的简洁，但应该包含必要的内容，以便解释和实验成果可重复。方法部分通常不超过3000字。作者可以将实验的详细方法保存到Protocol Exchange中（Protocol Exchange），(Protocol Exchange是通过NPG维持的一个开放的资源)。文章出版之后，作者保存在Protocol Exchange在中的详细方法将链接到在线方法部分。</p><p>应避免一些已公开的详细的方法; 可以提供一个参考文献，以节省空间。</p><p>方法部分要用简短的粗体标题进行细分，方法部分可以包括数据统计，试剂，动物模型等特定的部分。如果该部分包括引用，编号应与文章其余部分的最后一个参考文献编号连续，并且列表应挨着文章末尾的附加方法部分。</p><p>方法部分不能包含图或表（基本显示项目应包括在扩展数据中）。</p><h3 id="5-4-References"><a href="#5-4-References" class="headerlink" title="5.4 References"></a>5.4 References</h3><p>参考文献需要数字编号，并需要按照其在文章中的出现顺序依次编号。相应的具体参考文献的格式可以下载几篇Nature上面的文献即可明确。【编外话：在投稿之前，我们通常都是采用最新几期该期刊出版的文章的格式作为参考，来对我们自己的文章进行格式化，这其中就包括了参考文献的具体格式。】</p><p>文中添加引用时，参考文献序号要使用上标，只有当这些序号可能和一些上标的数字混淆时才可以把参考文献的序号放到括号内。</p><p>不要使用链接字段（由Endnote和类似的程序产生的）。在保存文件之前，请使用Endnote提供的一键移除按钮将EndNote的代码移除。</p><p>引文的数量是有严格限制的。Article最多50个引文，Letter最多30个。每个序号后只能有一个引文。</p><p>只有已经出版或者已经提交给某个出版机构的的文章才可以写到引文列表中。正在准备的论文应该在文中以一个作者列表的形式被提及（或者缩写，作者中的任何人是目前稿件的共同作者。）出版的会议摘要，编号的专利和预印本可以包括在引文列表中。（我们邀请作者写的综述，提供的观点和有见解的文章，作为突出引用可以例外）如果参考文献的作者不超过5个，所有的作者都要包含在内。如果参考文献的作者超过5个，只写出第一作者，后面写上“et al”。</p><p>在准备参考文献时，请按照以下Nature发布的版本风格：</p><p>  a. 作者应该首先列出姓，后跟一个逗号和名的首字母。</p><p>  b. 需要把所有引用的文章的标题给出。在参考文献列表中引用的文章标题应该是正体的，不要用斜体; 标题的第一个字要大写，标题要准确的写出，用一个句号结束。书名中所有主要单词的首字母要用斜体。杂志的标题根据平时的习惯使用斜体和缩写。卷号是粗体的。书需要写出出版商和出版城市。 （请参考Nature发表的论文详细信息。）<br>  c.只适用于网络刊物的引文应该像上面一样给出作者，文章标题和期刊名称，随后是完整的网址或者DOI（对于刚刚上线还没有页码的文章，需要给出DOI号）和出版年（用括号括起来）。【编外话：这里的意思就是Nature也允许引用康奈尔大学Arxiv网站上并未实际接收的文章。】</p><p>  d. 引用网站要给出作者（如果知道的话），引用页面的标题，完整的URL，和发布的年（用括号括起来）。</p><h3 id="5-5-End-notes"><a href="#5-5-End-notes" class="headerlink" title="5.5 End notes"></a>5.5 End notes</h3><p>尾注要简短，位于参考文献下方。请参考我们的annotated example来了解Nature文章的尾注的写法。</p><p>含Supplementary Information的文章，在参考文献之后要有一个声明：Supplementary Information is linked to the online version of the paper at <a href="http://www.nature.com/nature" target="_blank" rel="noopener">www.nature.com/nature</a>.</p><p>Acknowledgements应简短，不应包括感谢匿名审稿人和编辑，或者是热情洋溢的评论，这些无关紧要的话。例如，可以感谢一个人的援助，但不要说“优秀的”援助，或者可以感谢一个人的意见，但不要说成“有见地”的意见。致谢可以包含赠款和捐款数字。</p><p>Author Contributions: 作者需要给出一个声明来明确每一个共同作者所做出的贡献。该声明可以长达几个句子，描述单个作者的任务，作者的顺序按着他们名字首字母的顺序。进一步的解释和例子见authorship policy页。</p><p>Author Information: 作者应包含在本文的最后一组语句中，按以下顺序：</p><p>  a. 如果合适的话，做有关URL和相关公共数据库入口的号码的数据淤结的声明。</p><p>  b. 有一句“Reprints and permissions information is available at <a href="http://www.nature.com/reprints。" target="_blank" rel="noopener">www.nature.com/reprints。</a></p><p>  c. Competing financial interests的声明。</p><p>  d. 有一句“Correspondence and requests for materials should be addressed to XX”，其中XX是指一个E-mail地址。Nature期望这个认定的作者可以对读者的询问和索要材料进行答复，并协调处理与出版的稿件相关的任何问题，包括更正投诉在内。命名为通讯作者的人不一定是资深作者，而作者的名字的公布也并不意味着资历。如果有必要，可以包括一个以上的电子邮件地址，Nature将与第一个地址就有关出版后的事项进行交流，并期望作者与其他共同作者进行协调。</p><h3 id="5-6-Life-sciences-reporting-guidelines"><a href="#5-6-Life-sciences-reporting-guidelines" class="headerlink" title="5.6 Life sciences reporting guidelines"></a>5.6 Life sciences reporting guidelines</h3><p>发送到外部审查的生命科学的研究论文，作者必须有包含自己的有关实验和分析设计的几个要素相关细节的稿件。这些规定旨在提高报告的透明度和公布结果的可重复性。在同行评审中，作者需要填写一份审查清单来确认这些元素包含在稿件中，这份审查清单将会提供给编辑和同行评审者。</p><h3 id="5-7-Tables"><a href="#5-7-Tables" class="headerlink" title="5.7 Tables"></a>5.7 Tables</h3><p>表应在单独的页面上给出，纵向（不能是横向），在页面中间，而不是两侧。</p><p>表要有一行短的标题，字体为黑体。表应尽可能地小。制作表时要牢记：Nature页面的大小是会对表的大小有限制。</p><p>表的下方要解释表中符号和缩写的定义，还要有一些说明性材料，要尽可能的简短，全部是双倍行距。</p><p>X射线细化统计和NMR结构统计要用标准的表。作者应该使用这些标准表作为扩展数据表。这些标准的表可在（forms and declarations）上找到。</p><h3 id="5-8-Figure-legend"><a href="#5-8-Figure-legend" class="headerlink" title="5.8 Figure legend"></a>5.8 Figure legend</h3><p>图的说明作为文本文件的一部分，应一个接一个的列出，与图形文件相分离。不能在每个图下面写一个说明。</p><p>每一个图的说明应以一个简单的标题开始，然后给每个版块和使用的符号一个简短描述。对于有方法部分的稿件，说明中不应含有详细的方法，或超过100个字（对于全文来说总共不超过500字）。在没有方法部分的稿件中，说明应该是少于300字（对于整篇文章来说，要800字或更少）。</p><p>所有误差棒必须在图例中进行定义，如上述5.6节中的讨论。</p><h3 id="5-9-Figures"><a href="#5-9-Figures" class="headerlink" title="5.9 Figures"></a>5.9 Figures</h3><p>Nature需要电子格式的图。请确保所有的图像符合Nature期刊上的图像完整性策略（the Nature journals’ policy on image integrity.）。</p><p>图应尽可能小而简单，兼顾清晰。目的是为了其他或相关学科的读者能够理解，并协助他们理解论文。不必要的图和与图相关的部分（板）应当避免：例如，在小表或直方图给出数据，通常可以在文本中简要说明来代替。避免不必要的复杂性，着色和过多的细节。</p><p>图包含的面板不要超过一个，除非各部分存在逻辑连接;多部分图的每个面板应控制尺寸，使得整体图可以通过相同数量的减少和以可见的最小的尺寸再现在打印页上。Nature的标准图尺寸是89毫米（单列）和183毫米（双列）和页面的全部深度为247毫米。</p><p>氨基酸序列应使用Courier字体（或其他等宽字体），用50或100个字符行的单字母代码进行打印。</p><p>描述化学结构时，要使用自然化学生物学的指导方针。</p><p>对图的准备的一些简单的指导意见：</p><p>Lettering: 图的字体（轴的标签等）应该是小写型，首字母大写，没有句号。</p><p>Units: 单位和数字之间有一个空格，然后按照SI命名法或某一特定领域常用的术语。上千的数字应该用逗号（1，000）分开。不寻常的单位或缩写给出定义。</p><p>Scale bar: 应使用比例尺，而不要用放大因子。</p><p>Layering type: 应避免分层超过阴影或变形区域，不要使用相反的类型（彩色背景上用白色字母）。</p><p>文本，包括键符号，应在图的说明中给出，不要在图中给出。</p><p>Figure quality</p><p>初次提交，图的质量要高，可以让审阅人进行评估，如果单独提供，最好为JPEG格式。如果原稿的文字和图与文件（最初提交的首选格式）不匹配，可插入Word文档或PDF中。关于尺寸，分辨率和标签，建议作者根据最初的和修订的提交准则（initial and revised submissions guidelines）。</p><p>请注意，打印出版的高质量的图比较大，在提交阶段是不利于上传的。即使将这些高质量的图上传到Nature的提交网站，但是很多审阅人不能接收带有大附件的电子邮件。在文章被接收发表时，编辑会向作者索要高质量的图，所以没有必要在提交阶段发送这些高质量的图。</p><p>Third party rights</p><p>Nature不支持使用或者采用以前发表的展示项目（例如，图，表，图像，视频或文本框）。不过，为了一些概念的说明，需要使用公布的数据，这时可以使用先前公布的展示项目。请注意，在这些情况下，我们可能无法获取到重新使用我们论文中的某些图片的权利（原版本，或改编版本）。在这种情况下，我们将与您联系，讨论使用替代材料。</p><p>Figure costs</p><p>稿件中彩色图是需要付费的。目前，第一个彩图我们收取827￡，每增加一个彩图收￡295。如果没有能力支付这笔费用，编辑可以自行决断彩色图的出版问题。但在文章接收前，作者要和编辑达成一致意见。</p><h3 id="5-10-Production-quality-figures"><a href="#5-10-Production-quality-figures" class="headerlink" title="5.10 Production-quality figures"></a>5.10 Production-quality figures</h3><p>原则上，当原稿被接收出版时，编辑会索要高分辨率的图。当编辑索要高分辨率的图时，您再递交该图。在那个阶段，要根据这些准则准备图guidelines.。</p><h3 id="5-11-Extended-Data"><a href="#5-11-Extended-Data" class="headerlink" title="5.11 Extended Data"></a>5.11 Extended Data</h3><p>扩展的数据图和表只在网上有（在线PDF和全文HTML版），但同行评审的展示项目可以给文章和通讯提供必要的背景，由于空间限制或者只有少数专家对此有兴趣，文章的打印版不将其包括在内。扩展数据展示项最多为10个（图和表）。见Composition of a Nature research paper.。</p><p>在出版时，扩展数据表应该从相似的行到表来规定格式（见第5.7节），但主体部分（不包括标题和说明，应该包括在Word文件的结尾）应作为图像单独提交，因为Nature的副编辑部不会对扩展数据表进行编辑。小表也可以作为扩展数据的数据中的子板包括在内。可以阅读扩展数据格式指南，见Extended Data Formatting Guide.。</p><p>扩展数据的图在准备时与在打印中出现的图相比是略有不同的，只要它们大小符合（见 Extended Data Formatting Guide），可以是多版。Nature的美术部不会对扩展数据表进行编辑，为此，当准备这些图时，作者要按照Nature的风格来准备。扩展数据图的说明应该像打印图一样来准备，并在Word文件的末尾一个接着一个的列出。</p><p>如果空间允许，Nature鼓励作者，做一个简单的示意图，作为扩展数据图的一个版块，来总结文章的主要发现（例如，以协助理解细胞内复杂的细节方面，结构和分子生物学学科）。</p><p>如果原稿已有扩展数据图或表，作者要将它们放在正文合适的位置（例如，扩展数据图1和扩展数据表1）。</p><p>如果扩展数据表和扩展数据图的说明中有参考文献，编号应从正文参考文献的末尾接着写（如果存在附加的方法部分，可以从附加方法部分的参考文献的后面接着写）。如果附加方法部分存在列表，扩展列表应添加到附加方法部分的列表的后面。如果没有附加的方法部分，可以添加到扩展数据说明的下面。</p><h3 id="5-12-Supplementary-Information"><a href="#5-12-Supplementary-Information" class="headerlink" title="5.12 Supplementary Information"></a>5.12 Supplementary Information</h3><p>补充信息（Supplementary Information, SI）是同行评审必不可少的背景材料（例如，大的数据集，方法，计算），只在网上发布，但过大或不切实际，或感兴趣的只有少数专家，则不能包含在印刷版本内。详情参见Supplementary Information page。</p><p>补充信息不要包含图（除那些打印时出现的图，这些图应和扩展数据图格式相同）。当表像扩展数据那样不适合格式化时（例如，包含大型数据集的表，或者最适合Excel文件的始数据），才可以包含在补充信息中。</p><p>如果原稿已有SI，在提交或者回复编辑的索要信时，作者应该将补充信息（例如，视频，表）的分散项目放在主原稿的合适的位置。</p><h3 id="5-13-Chemical-structures-and-characterization-of-chemical-materials"><a href="#5-13-Chemical-structures-and-characterization-of-chemical-materials" class="headerlink" title="5.13 Chemical structures and characterization of chemical materials"></a>5.13 Chemical structures and characterization of chemical materials</h3><p>对于Nature关于描述实验方法和新化合物的表征的标准指南，请参阅characterization of chemical materials。对于化学结构，作者应该遵循Nature Chemical Biology guidelines（见Nature Chemical Biology guidelines.）。</p><h2 id="6-Submission"><a href="#6-Submission" class="headerlink" title="6 Submission"></a>6 Submission</h2><p>如果可以的话，文章和信件应在线提交。如果不能在线提交，原稿应该邮递。不要用电子邮件发送。当一起提交时，请务必阅读有关说明信和一些重要内容有关的问题。</p><p>在提交之前，所有投稿人必须同意Nature所有的出版政策。</p><p>作者必须使数据和材料可以公开发布。这包括数据到相关数据库的沉积和安排它们在网上发布的日期，以提高透明度和公布结果的可重复性。Nature的出版政策的完整说明是在the NPG Authors and Referees website（见Authors and Referees website.）。</p><h2 id="7-Other-Nature-and-NPG-journals"><a href="#7-Other-Nature-and-NPG-journals" class="headerlink" title="7 Other Nature and NPG journals"></a>7 Other Nature and NPG journals</h2><p>所有的Nature期刊之间的关系在Nature系列页面提供（见Nature family page）。详细内容请参阅Nature出版集团出版的其他期刊中的Publications and services部分(见Publications and services)。</p><p>感谢原文作者<a href="http://www.cailiaoniu.com/author/bestwishes" target="_blank" rel="noopener">小小</a>，侵删</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Nature-投稿-格式指南&quot;&gt;&lt;a href=&quot;#Nature-投稿-格式指南&quot; class=&quot;headerlink&quot; title=&quot;Nature 投稿: 格式指南&quot;&gt;&lt;/a&gt;Nature 投稿: 格式指南&lt;/h1&gt;&lt;p&gt;为避免重造轮子，本文主要是在&lt;a href=&quot;http://www.cailiaoniu.com/6285.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;材料牛  SCI丨科研必备：Nature 投稿指南&lt;/a&gt;的基础上进行补充和修改。&lt;/p&gt;
&lt;p&gt;本指南翻译了投稿Nature在格式上的一些&lt;a href=&quot;https://www.nature.com/nature/for-authors/formatting-guide&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;要求&lt;/a&gt;。除了投稿指南，还可以通过阅读Nature杂志上面的文章（打印版或online版）来熟悉Nature的内容和写作风格。&lt;/p&gt;
&lt;h2 id=&quot;1-Nature稿件的格式&quot;&gt;&lt;a href=&quot;#1-Nature稿件的格式&quot; class=&quot;headerlink&quot; title=&quot;1 Nature稿件的格式&quot;&gt;&lt;/a&gt;1 Nature稿件的格式&lt;/h2&gt;
    
    </summary>
    
      <category term="科研" scheme="https://yangluom.github.io/categories/%E7%A7%91%E7%A0%94/"/>
    
      <category term="格式" scheme="https://yangluom.github.io/categories/%E7%A7%91%E7%A0%94/%E6%A0%BC%E5%BC%8F/"/>
    
    
      <category term="科研" scheme="https://yangluom.github.io/tags/%E7%A7%91%E7%A0%94/"/>
    
      <category term="格式" scheme="https://yangluom.github.io/tags/%E6%A0%BC%E5%BC%8F/"/>
    
      <category term="Nature" scheme="https://yangluom.github.io/tags/Nature/"/>
    
  </entry>
  
  <entry>
    <title>雄性减数分裂I前期需要组蛋白修饰reader ZCWPW1，而雌性非必须</title>
    <link href="https://yangluom.github.io/2019/08/21/%E9%9B%84%E6%80%A7%E5%87%8F%E6%95%B0%E5%88%86%E8%A3%82I%E5%89%8D%E6%9C%9F%E9%9C%80%E8%A6%81%E7%BB%84%E8%9B%8B%E7%99%BD%E4%BF%AE%E9%A5%B0reader-ZCWPW1%EF%BC%8C%E8%80%8C%E9%9B%8C%E6%80%A7%E9%9D%9E%E5%BF%85%E9%A1%BB/"/>
    <id>https://yangluom.github.io/2019/08/21/雄性减数分裂I前期需要组蛋白修饰reader-ZCWPW1，而雌性非必须/</id>
    <published>2019-08-20T16:03:25.000Z</published>
    <updated>2019-09-05T17:37:32.328Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>减数分裂是一种特殊的细胞分裂类型，该过程可以产生单倍体生殖细胞并通过同源重组确保其遗传多样性。作者发现，在雄性小鼠减数分裂I前期，H3K4me3阅读器ZCWPW1是特异且必须的，而在小鼠的雌性生殖细胞中并无该现象。雄性小鼠<em>Zcwpw1_的缺失会导致联会的完全失败，其缺失致使雄性减数分裂停滞在偶线期到粗线期阶段，并伴有DNA双链断裂修复的不完全和重组交叉形成缺乏，进而导致雄性不育。在卵母细胞中，_Zcwpw1_缺失仅在某种程度上导致减数分裂前期的进程减慢; _Zcwpw1<sup>-/-</sup></em> 卵母细胞能够完成减数分裂，且<em>Zcwpw1<sup>-/-</sup></em> 雌性小鼠的生育能力直到成年中期亦能保持正常。文章结论，H3K4me3 的reader ZCWPW1 对于雄性减数分裂联会是必不可少的，但对于雌性来说并不是必需的。文章结果表明ZCWPW1可能是哺乳动物生殖细胞减数分裂中的一个以前未知，性别依赖的表观遗传调节因子。<br> <a id="more"></a></p><p> 未完待续</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;减数分裂是一种特殊的细胞分裂类型，该过程可以产生单倍体生殖细胞并通过同源重组确保其遗传多样性。作者发现，在雄性小鼠减数分裂I前期，H3K4me3阅读器ZCWPW1是特异且必须的，而在小鼠的雌性生殖细胞中并无该现象。雄性小鼠&lt;em&gt;Zcwpw1_的缺失会导致联会的完全失败，其缺失致使雄性减数分裂停滞在偶线期到粗线期阶段，并伴有DNA双链断裂修复的不完全和重组交叉形成缺乏，进而导致雄性不育。在卵母细胞中，_Zcwpw1_缺失仅在某种程度上导致减数分裂前期的进程减慢; _Zcwpw1&lt;sup&gt;-/-&lt;/sup&gt;&lt;/em&gt; 卵母细胞能够完成减数分裂，且&lt;em&gt;Zcwpw1&lt;sup&gt;-/-&lt;/sup&gt;&lt;/em&gt; 雌性小鼠的生育能力直到成年中期亦能保持正常。文章结论，H3K4me3 的reader ZCWPW1 对于雄性减数分裂联会是必不可少的，但对于雌性来说并不是必需的。文章结果表明ZCWPW1可能是哺乳动物生殖细胞减数分裂中的一个以前未知，性别依赖的表观遗传调节因子。&lt;br&gt;
    
    </summary>
    
      <category term="Epigenetics" scheme="https://yangluom.github.io/categories/Epigenetics/"/>
    
      <category term="histone modification" scheme="https://yangluom.github.io/categories/Epigenetics/histone-modification/"/>
    
    
      <category term="meiosis" scheme="https://yangluom.github.io/tags/meiosis/"/>
    
      <category term="histone modification" scheme="https://yangluom.github.io/tags/histone-modification/"/>
    
      <category term="ZCWPW1" scheme="https://yangluom.github.io/tags/ZCWPW1/"/>
    
      <category term="H3K4me3" scheme="https://yangluom.github.io/tags/H3K4me3/"/>
    
      <category term="Epigenetics" scheme="https://yangluom.github.io/tags/Epigenetics/"/>
    
  </entry>
  
  <entry>
    <title>Hello-World之后</title>
    <link href="https://yangluom.github.io/2019/08/09/Hello-World%E4%B9%8B%E5%90%8E/"/>
    <id>https://yangluom.github.io/2019/08/09/Hello-World之后/</id>
    <published>2019-08-09T14:06:44.000Z</published>
    <updated>2019-09-12T15:38:33.772Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h1><p>  知道Github能做博客已经有相当长一段时间了，但是，由于能力、精力等多种因素的限制，博客一直处于下图的状态：</p><p><img src="https://i.loli.net/2019/08/09/rQ81lwcifpyDeTs.jpg" alt="01.jpg"></p><p>  说来，十分惭愧，这篇blog也已经从最初的8.09写到了08.12。<br>  作为“Hello， World！”之后的第一篇博客，主要是给自己使用GitPage搭建Blog做个记录，当然，如果能够帮助到后来的小伙伴们，那就更好啦！<br>  工欲善其事必先利其器，然额，贯于GitPage搭建blog的步骤，目前网上的各种教程较为分散，主要是以成功的在GitPage上成功实现Fork及访问为主，所以，也给很多小伙伴带来了神奇的困惑，自然而然冒出来的问题便是，然后嘞？然后我再咋搞呢？所以，本着如何较系统地从入门到实践的角度，记录下本次从搭建到第一篇博客发布的过程，也算是从本人的角度对使用Github Page搭建博客过程的一个Trouble Shotting的记录。</p> <a id="more"></a><h2 id="本文主要参考以下文章实现"><a href="#本文主要参考以下文章实现" class="headerlink" title="本文主要参考以下文章实现"></a>本文主要参考以下文章实现</h2><blockquote><ol><li><a href="https://div.io/topic/1691" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li><li><a href="http://www.54tianzhisheng.cn/2017/12/18/hexo-yilia/" target="_blank" rel="noopener">Hexo + yilia 搭建博客可能会遇到的所有疑问</a></li><li><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">Markdown基本语法</a></li><li><a href="https://blog.csdn.net/assassinsshadow/article/details/79820299" target="_blank" rel="noopener">windows 下 git bash 打开特定的文件目录</a></li><li><a href="http://www.w3cschool.cc/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a></li><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官网: 快速、简洁且高效的博客框架</a></li><li><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">用Hexo写出第一篇博客</a></li></ol></blockquote><h1 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1. 步骤"></a>1. 步骤</h1><h2 id="1-1-申请Github账号，并创建自己博客的Repositories"><a href="#1-1-申请Github账号，并创建自己博客的Repositories" class="headerlink" title="1.1 申请Github账号，并创建自己博客的Repositories"></a>1.1 申请Github账号，并创建自己博客的<strong>Repositories</strong></h2><p>  想来，这个环节应该是最简单的，网上有无数的教程阔以帮助实现，具体过程不再赘述。<br>  当然，链接提供是必备的啦，详看参考文章1。<br>  需要特别指出的是，每个帐号只能有一个仓库来存放个人主页，而且仓库的名字必须是username/username.github.io，对，这个username就是你自己的用户名，这是特殊的命名约定。<br>  比如我的用户名是yangluom，我的blog仓库就是yangluom/yangluom.github.io这个啦。<br>  <img src="https://i.loli.net/2019/08/12/w6Gsdv2VhaPFjMB.jpg" alt="02.jpg"><br>  比方说你得用户名是abc123，那你就可以创建abc123.github.io这个Repositories（资源仓库）,并通过<a href="http://abc123.github.io" target="_blank" rel="noopener">http://abc123.github.io</a> 来访问你的个人主页。<br>  这里特别提醒一下，需要注意的个人主页的网站内容是在master分支下的。</p><h2 id="1-2-在本地下载、安装Hexo"><a href="#1-2-在本地下载、安装Hexo" class="headerlink" title="1.2 在本地下载、安装Hexo"></a>1.2 在本地下载、安装Hexo</h2><p>  嗯，这可能是让人小纠结的问题，我既然要在github上搭博客，直接在github上操作不就完了么？其实并不是，这个过程是，你必须先在本地搞定你自己静态网页的内容后，然后部署到github上。<br>  所以，要先实现本地系统的环境配置。要使用Hexo，需要在你的系统中支持Nodejs以及Git。（本部分主要参考<a href="https://div.io/topic/1691" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a>，如有雷同，纯属必然，并无偶然。。。）</p><h3 id="1-2-1-安装Node-js"><a href="#1-2-1-安装Node-js" class="headerlink" title="1.2.1 安装Node.js"></a>1.2.1 安装Node.js</h3><p>  <a href="https://nodejs.org/download/" target="_blank" rel="noopener">下载Node.js</a><br>  由于我使用的操作系统是64位WIN10系统，所以，仅就该系统下如何安装予以展示，其他操作系统的安装，可以参考下文进行：<br>  参考地址：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">安装Node.js</a><br>  这次安装，我采用了Node.js v10.16.3 LTS(长期支持版本)版本，如果目前版本已过时，大家可以根据自己使用的操作系统，去<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Node.js的官网</a>下载最新的LTS版本软件：<br>  <img src="https://i.loli.net/2019/08/18/hGOUydvKgVPkIF5.jpg" alt="00.jpg"></p><p>  具体安装如下，其他版本安装应该类似：<br>  双击已经下载的安装包，将出现如下界面，点击“Next”继续就可以了；<br>  <img src="https://i.loli.net/2019/08/18/hGOUydvKgVPkIF5.jpg" alt="00.jpg"></p><p>   勾选接受协议选项，点击 next（下一步） 按钮 :<br>   <img src="https://i.loli.net/2019/08/18/NKG9zf6y2qTHRcF.jpg" alt="002.jpg"></p><p>   Node.js默认安装目录为 “C:\Program Files\nodejs&quot; , 你可以修改目录，并点击 next（下一步）：<br>   <img src="https://i.loli.net/2019/08/18/vHh78EGpuztckre.jpg" alt="003.jpg"></p><p>   点击树形图标来选择你需要的安装模式 （如无特殊需求，选项默认就可以啦）, 然后点击下一步 next（下一步），继续进行安装：<br>   <img src="https://i.loli.net/2019/08/18/7iPCVpOgwGy15Nu.jpg" alt="004.jpg"></p><p>   点击 Install（安装） 开始安装Node.js。你也可以点击 Back（返回）来修改先前的配置。 然后并点击 next（下一步）；然后，点击 Finish（完成）按钮退出安装向导，至此，Node.js就已经安装在我们的电脑上啦 。</p><p>   最后，检测一下PATH环境变量是否配置了Node.js：<br>   点击开始→ 运行→ 输入”cmd” → 输入命令”path”，输出如下结果：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">luyou</span>&gt;<span class="title">path</span></span></span><br><span class="line"><span class="function"><span class="title">PATH</span>=<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">system32</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">Wbem</span>;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">WindowsPowerShell</span>\<span class="title">v1</span>.0\;<span class="title">C</span>:\<span class="title">WINDOWS</span>\<span class="title">System32</span>\<span class="title">OpenSSH</span>\;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">MacType</span>;<span class="title">C</span>:\<span class="title">Program</span> <span class="title">Files</span>\<span class="title">nodejs</span>\;<span class="title">D</span>:\<span class="title">python</span>\<span class="title">pywin</span>\<span class="title">Scripts</span>\;<span class="title">D</span>:\<span class="title">python</span>\<span class="title">pywin</span>\;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">Microsoft</span>\<span class="title">WindowsApps</span>;<span class="title">D</span>:\<span class="title">moe2014</span>\<span class="title">bin</span>;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Local</span>\<span class="title">GitHubDesktop</span>\<span class="title">bin</span>;<span class="title">C</span>:\<span class="title">Users</span>\<span class="title">luyou</span>\<span class="title">AppData</span>\<span class="title">Roaming</span>\<span class="title">npm</span></span></span><br></pre></td></tr></table></figure><p>   我们可以看到环境变量中已经包含了C:\Program Files\nodejs\</p><h3 id="1-2-2-安装Git"><a href="#1-2-2-安装Git" class="headerlink" title="1.2.2 安装Git"></a>1.2.2 安装Git</h3><p>  下载地址：<a href="http://git-scm.com/download/" target="_blank" rel="noopener">http://git-scm.com/download/</a><br>  打开上面的连接，是这样的：<br>  <img src="https://i.loli.net/2019/09/12/c7DvpYVLP5wXeNs.png" alt="01.png"><br>  然后根据我们自己的操作系统，选择相应链接下载就好啦，（我想，玩linux的小伙伴就不用看这里了）网站会根据操作系统的位数，自动下载相应软件啦。<br>  <img src="https://i.loli.net/2019/09/12/ARDhLQJWHTEYmyj.png" alt="02.png"></p><p>  下载完成后安装，安装路径自己选择（比方<code>D:\Program Files</code>），其他的选项参照下图：</p><p>  <img src="https://i.loli.net/2019/09/12/TM2Bpy31aZC7KkF.jpg" alt="09.jpg"></p><p>  <img src="https://i.loli.net/2019/09/12/UG6E8dVzJXnBAsI.jpg" alt="10.jpg"></p><p>  <img src="https://i.loli.net/2019/09/12/MJ1IyflrZAsQBbH.jpg" alt="11.jpg"></p><p>  其他的一步一步往下即可，最后Finish完成安装；</p><blockquote><p>此处可能有的小坑，即git安装后，可能需要在指定目录打开，此时，可以如下操作：</p></blockquote><blockquote><p>找到gitbash快捷图标，右键，点击属性<br>将目标： –cd -to-home 删掉<br>起始位置填写即将打开的路径，如下图。点击【应用】【确定】。</p></blockquote><p><img src="https://i.loli.net/2019/08/13/Y2EMAmZ4jvkxDes.jpg" alt="03.jpg"></p><p>对了，这部分操作的时候。如果不明白，可以参考<a href="https://www.cnblogs.com/jasonxu19900827/p/7823089.html" target="_blank" rel="noopener">Jason徐小峰的博客git bash安装和基本设置</a>，图文并茂，写的很清晰。</p><h3 id="1-2-3-安装Hexo"><a href="#1-2-3-安装Hexo" class="headerlink" title="1.2.3 安装Hexo"></a>1.2.3 安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir /h/hexo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /h/hexo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-cli -g</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g <span class="comment"># 或者hexo generate</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s <span class="comment"># 或者hexo server，此时，如果系统没报错的话，即可在http://localhost:4000/ 查看</span></span></span><br></pre></td></tr></table></figure><p>现在我们打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。 </p><p>目前我安装所用的本地环境如下：(可以通过hexo -v查看)<br><img src="https://i.loli.net/2019/08/15/AabERYQyLnqUIto.jpg" alt="04.jpg"></p><p>在这里说下Hexo常用的几个命令：</p><blockquote><ol><li>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹</li><li>hexo server (hexo s) 启动本地web服务，用于博客的预览</li><li>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> hexo new <span class="string">"postName"</span><span class="comment">#新建文章</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo new page <span class="string">"pageName"</span><span class="comment">#新建页面</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></li></ol></blockquote><p>常用简写</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> hexo n == hexo new<span class="comment">#新建文章</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo g == hexo generate<span class="comment">#生成静态文件</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo s == hexo server<span class="comment">#启动本地web服务</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo d == hexo deploy<span class="comment">#部署播客到远端</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>常用组合</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> hexo d -g <span class="comment">#生成部署</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo s -g <span class="comment">#生成预览</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h3 id="1-2-4-Hexo主题设置"><a href="#1-2-4-Hexo主题设置" class="headerlink" title="1.2.4 Hexo主题设置"></a>1.2.4 Hexo主题设置</h3><p>这里以主题yilia为例进行说明（也就是本博客的主题啦）。</p><h4 id="1-2-4-1-安装主题"><a href="#1-2-4-1-安装主题" class="headerlink" title="1.2.4.1 安装主题"></a>1.2.4.1 安装主题</h4><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia.git themes/yilia</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h4 id="1-2-4-2-更新主题"><a href="#1-2-4-2-更新主题" class="headerlink" title="1.2.4.2 更新主题"></a>1.2.4.2 更新主题</h4><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> <span class="built_in">cd</span> themes/yilia</span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> git pull</span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo g <span class="comment"># 生成</span></span></span><br><span class="line"><span class="meta">  $</span><span class="bash"> hexo s <span class="comment"># 启动本地web服务器</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>现在打开<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，会看到我们已经应用了一个新的主题。</p><h2 id="1-3-本地Hexo部署到Github"><a href="#1-3-本地Hexo部署到Github" class="headerlink" title="1.3. 本地Hexo部署到Github"></a>1.3. 本地Hexo部署到Github</h2><p> 这一步恐怕是最关键的一步了，让我们把在本地web环境下预览到的博客部署到github上，然后就可以直接通过<a href="http://abc123.github.io访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。" target="_blank" rel="noopener">http://abc123.github.io访问了。不过很多教程文章对这个步骤语焉不详，这里着重说下。</a></p><blockquote><p>首先需要明白所谓部署到github的原理。</p></blockquote><blockquote><ol><li>之前步骤中在Github上创建的那个特别的repo（abc123.github.io）一个最大的特点就是其master中的html静态文件，可以通过链接<a href="http://abc123.github.io来直接访问。" target="_blank" rel="noopener">http://abc123.github.io来直接访问。</a></li><li>Hexo -g 会生成一个静态网站（第一次会生成一个public目录），这个静态文件可以直接访问。</li><li>需要将hexo生成的静态网站，提交(git commit)到github上。<br>明白了原理，怎么做自然就清晰了。</li></ol></blockquote><h3 id="1-3-1-使用hexo-deploy部署"><a href="#1-3-1-使用hexo-deploy部署" class="headerlink" title="1.3.1. 使用hexo deploy部署"></a>1.3.1. 使用hexo deploy部署</h3><p>hexo deploy可以部署到很多平台，具体可以参考<a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Hexo官网的这个链接</a>. 如果部署到github，需要在配置文件_config.xml中作如下修改：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:abc123/abc123.github.io.git</span><br><span class="line">  branch: master</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>然后在命令行中执行</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>即可完成部署。</p><p>注意需要提前安装一个扩展：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>在实际操作过程中，我在”hexo d”这一步碰到了神奇的问题，希望能够帮到碰到类似问题的小伙伴，具体如下：<br>当我输入”hexo d”命令后，系统提示：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p><img src="https://i.loli.net/2019/08/18/ChR8GM6vJioxg7y.jpg" alt="05.jpg"></p><p>于是,根据linghucong 大的教程，进行安装:</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> + hexo-deployer-git@1.0.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> added 24 packages from 10 contributors and audited 9166 packages <span class="keyword">in</span> 37.295s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> found 1 low severity vulnerability</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>其实，这里已经明确报过错误信息啦：“npm WARN <a href="mailto:babel-eslint@10.0.2" target="_blank" rel="noopener">babel-eslint@10.0.2</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.”<br>但我当时并木有看懂，就继续根据提示操作了下：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">  $</span><span class="bash"> npm audit fix</span></span><br><span class="line">  npm WARN babel-eslint@10.0.2 requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.</span><br><span class="line">  npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span><br><span class="line">  npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> up to date <span class="keyword">in</span> 5.492s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> fixed 0 of 1 vulnerability <span class="keyword">in</span> 9166 scanned packages</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">    1 vulnerability required manual review and could not be updated</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>但，并木有解决问题，于是又转回了报错的提示：“npm WARN <a href="mailto:babel-eslint@10.0.2" target="_blank" rel="noopener">babel-eslint@10.0.2</a> requires a peer of eslint@&gt;= 4.12.1 but none is installed. You must install peer dependencies yourself.”，google后的解决方案是：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm install eslint@4.x babel-eslint@8 --save-dev</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN deprecated circular-json@0.3.3: CircularJSON is <span class="keyword">in</span> maintenance only, flatted is its successor.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> + babel-eslint@8.2.6</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> + eslint@4.19.1</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> added 108 packages from 125 contributors, updated 12 packages and audited 9456 packages <span class="keyword">in</span> 63.142s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> found 1 low severity vulnerability</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>继续跟着提示操作：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm audit fix</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> up to date <span class="keyword">in</span> 7.582s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> fixed 0 of 1 vulnerability <span class="keyword">in</span> 9456 scanned packages</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   1 vulnerability required manual review and could not be updated</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>于是，这下就可以成功使用“$ npm install hexo-deployer-git –save”命令，安装扩展了：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@1.2.9: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (current: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> + hexo-deployer-git@1.0.0</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> updated 1 package and audited 9456 packages <span class="keyword">in</span> 23.449s</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> found 1 low severity vulnerability</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   run `npm audit fix` to fix them, or `npm audit` <span class="keyword">for</span> details</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>安装完“hexo-deployer-git”扩展后，本以为就阔以使用“$ hexo d”命令实现部署了，然而：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ hexo d</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Deploying: git</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Setting up Git deployment...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Initialized empty Git repository <span class="keyword">in</span> H:/blog/hexo/blog/.deploy_git/.git/</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> [master (root-commit) 5cd33de] First commit</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  1 file changed, 0 insertions(+), 0 deletions(-)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 placeholder</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Clearing .deploy_git folder...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Copying files from public folder...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Copying files from extend <span class="built_in">dirs</span>...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> [master 06d32bd] Site updated: 2019-08-07 00:10:46</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  19 files changed, 2616 insertions(+)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 2019/07/25/hello-world/index.html</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 archives/2019/07/index.html</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 archives/2019/index.html</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 archives/index.html</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/default-skin.b257fa.svg</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/iconfont.16acc2.ttf</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/iconfont.45d7ee.svg</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/iconfont.8c627f.woff</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/iconfont.b322fa.eot</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 fonts/tooltip.4004ff.svg</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 img/default-skin.png</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 img/preloader.gif</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 img/scrollbar_arrow.png</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 index.html</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 main.0cf68a.css</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 main.0cf68a.js</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 mobile.992cbe.js</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  delete mode 100644 placeholder</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  create mode 100644 slider.e37972.js</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Permission denied (publickey).</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> fatal: Could not <span class="built_in">read</span> from remote repository.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Please make sure you have the correct access rights</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> and the repository exists.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Error: Spawn failed</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     at ChildProcess.&lt;anonymous&gt; (H:\blog\hexo\blog\node_modules\hexo-util\lib\spawn.js:52:19)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     at ChildProcess.emit (events.js:198:13)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     at ChildProcess.cp.emit (H:\blog\hexo\blog\node_modules\cross-spawn\lib\enoent.js:40:29)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     at Process.ChildProcess._handle.onexit (internal/child_process.js:248:12)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>Permission denied，是的“Permission denied (publickey). fatal: Could not read from remote repository.”。这就是这步的报错信息啦，嗯，这表明，并木有成功配置GitHub 的ssh链接密钥，或者并没有生成ssh key，如不确定，可以在ternimal下执行：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　　cd ~/.ssh ls</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>来查看是否有文件id_rsa以及文件id_rsa.pub</p><p>如果你没有ssh key的话，在ternimal下输入命令：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "youremail@example.com"，</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p> youremail@example.com 改为自己的邮箱即可，途中会让你输入密码啥的，不需要管，一路回车即可，会生成你的ssh key。（如果重新生成的话会覆盖之前的ssh key。）</p><blockquote><p>Your identification has been saved in /home/tekkub/.ssh/id_rsa.<br>Your public key has been saved in /home/tekkub/.ssh/id_rsa.pub.<br>The key fingerprint is:<br>SHA256:(大概43位的字母、数字或符号的排布) <a href="mailto:youremail@example.com" target="_blank" rel="noopener">youremail@example.com</a></p></blockquote><p>进入github账户中</p><p>点击右上角图像，打开设置，里面有添加ssh密钥，将拷贝的公钥内容粘贴到里面，标签随便写，最好是让自己知道是哪一台主机的公钥。然后点击添加，这个时候就在github账户中添加好了ssh公钥</p><p><img src="https://i.loli.net/2019/08/19/zt6YEIdVHbfnqPj.jpg" alt="06.jpg"></p><p>这时候，就可以使用“$ hexo d”命令实现部署了：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ hexo d</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Deploying: git</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Clearing .deploy_git folder...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Copying files from public folder...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Copying files from extend <span class="built_in">dirs</span>...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> On branch master</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> nothing to commit, working tree clean</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Counting objects: 32, <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Delta compression using up to 8 threads.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Compressing objects: 100% (25/25), <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Writing objects: 100% (32/32), 150.47 KiB | 1.95 MiB/s, <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Total 32 (delta 5), reused 0 (delta 0)</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> remote: Resolving deltas: 100% (5/5), <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> To github.com:abc123/abc123.github.io.git</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">  * [new branch]      HEAD -&gt; master</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Branch master <span class="built_in">set</span> up to track remote branch master from git@github.com:abc123/abc123.github.io.git.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> INFO  Deploy <span class="keyword">done</span>: git</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>部署结束后，可以运行</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/abc123/abc123.github.io.git .deploy/abc123.github.io</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>命令，将部署的文件同步回本地以归档，需要特别注意的是在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ git <span class="built_in">clone</span> https://github.com/abc123/abc123.github.io.git .deploy/abc123.github.io</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Cloning into <span class="string">'.deploy/yangluom.github.io'</span>...</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> remote: Enumerating objects: 32, <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> remote: Total 32 (delta 0), reused 0 (delta 0), pack-reused 32</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Unpacking objects: 100% (32/32), <span class="keyword">done</span>.</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h2 id="1-4-开始“Hello，-World”之后的第一篇博客"><a href="#1-4-开始“Hello，-World”之后的第一篇博客" class="headerlink" title="1.4. 开始“Hello， World”之后的第一篇博客"></a>1.4. 开始“Hello， World”之后的第一篇博客</h2><h3 id="1-4-1-配置文件命名规则和路由地址"><a href="#1-4-1-配置文件命名规则和路由地址" class="headerlink" title="1.4.1 配置文件命名规则和路由地址"></a>1.4.1 配置文件命名规则和路由地址</h3><p><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></p><h3 id="1-4-2-创建博客"><a href="#1-4-2-创建博客" class="headerlink" title="1.4.2 创建博客"></a>1.4.2 创建博客</h3><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E5%86%99%E5%8D%9A%E5%AE%A2" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E5%86%99%E5%8D%9A%E5%AE%A2</a></p><p><a href="https://www.jianshu.com/p/56d99a3049a5" target="_blank" rel="noopener">https://www.jianshu.com/p/56d99a3049a5</a></p><p>定位到我们的hexo根目录，执行命令：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new 'my-first-blog'</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><p>hexo会帮我们在./source/_posts下生成相关md文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ll ./<span class="built_in">source</span>/_posts/</span></span><br><span class="line">total 24</span><br><span class="line">-rw-r--r-- 1 luyou 197609 18149 8月  19 01:12 2019-08-09-Hello-World之后.md</span><br><span class="line">-rw-r--r-- 1 luyou 197609   826 7月  25 21:09 hello-world.md</span><br></pre></td></tr></table></figure><h3 id="1-4-3-写作"><a href="#1-4-3-写作" class="headerlink" title="1.4.3 写作"></a>1.4.3 写作</h3><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><h3 id="1-4-4-发布"><a href="#1-4-4-发布" class="headerlink" title="1.4.4 发布"></a>1.4.4 发布</h3><p>部署修改<br>通过 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>部署本地的博客文件到github</p><p>上面的命令只是在操作正确的状态下可行，但是，实际操作中，大家都懂的，总有各种神奇的bug，比方我，再一次踩坑了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/2019-08-09-Hello-World之后.md</span><br><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class="line"></span><br><span class="line">    ^</span><br><span class="line">    at generateError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:167:10)</span><br><span class="line">    at throwError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:173:9)</span><br><span class="line">    at readBlockMapping (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1073:9)</span><br><span class="line">    at composeNode (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12)</span><br><span class="line">    at readDocument (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1519:3)</span><br><span class="line">    at loadDocuments (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1575:5)</span><br><span class="line">    at Object.load (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1596:19)</span><br><span class="line">    at parseYAML (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:80:21)</span><br><span class="line">    at parse (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:56:12)</span><br><span class="line">    at Promise.all.spread (H:\blog\hexo\blog\node_modules\hexo\lib\plugins\processor\post.js:48:20)</span><br><span class="line">    at tryCatcher (H:\blog\hexo\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:514:35)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:574:18)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">    at Promise._settlePromises (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:699:18)</span><br><span class="line">    at Promise._fulfill (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:643:18)</span><br><span class="line">    at PromiseArray._resolve (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:126:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:144:14)</span><br><span class="line">    at PromiseArray._iterate (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:114:31)</span><br><span class="line">    at PromiseArray.init [as _init] (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:78:10)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:571:21)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">INFO  Files loaded in 473 ms</span><br><span class="line">INFO  Generated: content.json</span><br><span class="line">INFO  1 files generated in 455 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">ERROR Process failed: _posts/2019-08-09-Hello-World之后.md</span><br><span class="line">YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class="line"></span><br><span class="line">    ^</span><br><span class="line">    at generateError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:167:10)</span><br><span class="line">    at throwError (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:173:9)</span><br><span class="line">    at readBlockMapping (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1073:9)</span><br><span class="line">    at composeNode (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1359:12)</span><br><span class="line">    at readDocument (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1519:3)</span><br><span class="line">    at loadDocuments (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1575:5)</span><br><span class="line">    at Object.load (H:\blog\hexo\blog\node_modules\js-yaml\lib\js-yaml\loader.js:1596:19)</span><br><span class="line">    at parseYAML (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:80:21)</span><br><span class="line">    at parse (H:\blog\hexo\blog\node_modules\hexo-front-matter\lib\front_matter.js:56:12)</span><br><span class="line">    at Promise.all.spread (H:\blog\hexo\blog\node_modules\hexo\lib\plugins\processor\post.js:48:20)</span><br><span class="line">    at tryCatcher (H:\blog\hexo\blog\node_modules\bluebird\js\release\util.js:16:23)</span><br><span class="line">    at Promise._settlePromiseFromHandler (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:514:35)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:574:18)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">    at Promise._settlePromises (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:699:18)</span><br><span class="line">    at Promise._fulfill (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:643:18)</span><br><span class="line">    at PromiseArray._resolve (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:126:19)</span><br><span class="line">    at PromiseArray._promiseFulfilled (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:144:14)</span><br><span class="line">    at PromiseArray._iterate (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:114:31)</span><br><span class="line">    at PromiseArray.init [as _init] (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise_array.js:78:10)</span><br><span class="line">    at Promise._settlePromise (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:571:21)</span><br><span class="line">    at Promise._settlePromise0 (H:\blog\hexo\blog\node_modules\bluebird\js\release\promise.js:619:10)</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>反复告诫自己，待人接物时，要看别人的行动，“嘴上说不要，身体很诚实”的节奏俯拾即是，然而，自己着手搞个博客这种东西就相对单纯很多，只要你错，结果就是被显示打一计耳光，还让自己摸不到头脑，看，这里又是：YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1。<br>这步的解决，是查到了<a href="https://www.cnblogs.com/wangyuehan/p/9864830.html" target="_blank" rel="noopener">王约翰的网络日志</a>,才解决掉“博客写好了，怎么发出去？我又错在哪了？真<strong><sup>TM</sup></strong>上火，教程咋又没写明的！！！”愤怒与困惑。。。。。。。。<br><img src="https://i.loli.net/2019/08/20/kl2zvna5HmRtSUr.jpg" alt="071.jpg"></p><p>修改结束后：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo g</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded in 796 ms</span><br><span class="line">INFO  Generated: sitemap.xml</span><br><span class="line">INFO  Generated: content.json</span><br><span class="line">INFO  Generated: atom.xml</span><br><span class="line">INFO  Generated: blog/2019/07/25/hello-world/index.html</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: archives/2019/index.html</span><br><span class="line">INFO  Generated: archives/2019/07/index.html</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: archives/2019/08/index.html</span><br><span class="line">INFO  Generated: blog/2019/08/09/Hello-World之后/index.html</span><br><span class="line">INFO  Generated: tags/blog/index.html</span><br><span class="line">INFO  Generated: tags/GitPage/index.html</span><br><span class="line">INFO  12 files generated in 505 ms</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p>成功预览文章！</p><h1 id="2-其他进阶设置"><a href="#2-其他进阶设置" class="headerlink" title="2. 其他进阶设置"></a>2. 其他进阶设置</h1><h2 id="2-1-头像设置"><a href="#2-1-头像设置" class="headerlink" title="2.1 头像设置"></a>2.1 头像设置</h2><p>是滴，我，算是每一步都碰壁了吧。。。。。<br>头像设置照样搞了几天才在<a href="https://www.xiongtianci.com/2019/06/13/%E6%89%93%E9%80%A0%E4%B8%AA%E6%80%A7%E8%B6%85%E8%B5%9E%E5%8D%9A%E5%AE%A2Hexo-NexT-GitHub-Pages%E7%9A%84%E8%B6%85%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%8C%96/" target="_blank" rel="noopener">xiongtianci</a>的po文中找到了头像图片的位置的正确描述形式！</p><blockquote><p>avatar: /img/avatar.jpg</p></blockquote><p>实际路径是“themes/yilia/source/img/avatar.gif”, 但此处应写成“/img/avatar.jpg”<br>否则，要么找不到图片，要么，在url前面会加上“<a href="http://localhost:4000/”的路径，是滴，那种情况下，头像依然看不到。。。。" target="_blank" rel="noopener">http://localhost:4000/”的路径，是滴，那种情况下，头像依然看不到。。。。</a><br>解决后的情况就是这样了：</p><p><img src="https://i.loli.net/2019/08/20/CcQxgfmzB2Gdua4.jpg" alt="081.jpg"></p><h2 id="2-2-增加字数、阅读时长统计"><a href="#2-2-增加字数、阅读时长统计" class="headerlink" title="2.2 增加字数、阅读时长统计"></a>2.2 增加字数、阅读时长统计</h2><p>打开博客根目录、安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -save hexo-wordcount</span><br></pre></td></tr></table></figure><p>博客根目录_config.yml添加配置:</p><blockquote><p>word_count: true</p></blockquote><p>找到themes\yilia\layout_partial\article.ejs,在大概第七行</p><blockquote><p>&lt;%- partial(‘post/date’, {class_name: ‘archive-article-date’, date_format: null}) %&gt;</p></blockquote><p>下面添加代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(theme.word_count &amp;&amp; !post.no_word_count)&#123;%&gt;</span><br><span class="line">          &lt;%- partial('post/word') %&gt;</span><br><span class="line">          &lt;% &#125; %&gt;</span><br><span class="line">最后在themes\yilia\layout\_partial\post目录下新建word.ejs,内容如下：</span><br><span class="line"></span><br><span class="line">&lt;div style="margin-top:10px;"&gt;</span><br><span class="line">    &lt;span class="post-time"&gt;</span><br><span class="line">      &lt;span class="post-meta-item-icon"&gt;</span><br><span class="line">        &lt;i class="fa fa-keyboard-o"&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span class="post-meta-item-text" style="font-size: 16px;color: grey"&gt;  字数统计: &lt;/span&gt;</span><br><span class="line">        &lt;!--这里样式可以自己定制--&gt;</span><br><span class="line">        &lt;span class="post-count" style="font-size: 16px;color: grey"&gt;&lt;%= wordcount(post.content) %&gt;字&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;span class="post-time"&gt;</span><br><span class="line">      &amp;nbsp; | &amp;nbsp;</span><br><span class="line">      &lt;span class="post-meta-item-icon"&gt;</span><br><span class="line">        &lt;i class="fa fa-hourglass-half"&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span class="post-meta-item-text" style="font-size: 16px;color: grey"&gt;  阅读时长: &lt;/span&gt;</span><br><span class="line">        &lt;span class="post-count" style="font-size: 16px;color: grey"&gt;&lt;%= min2read(post.content) %&gt;分&lt;/span&gt;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="2-3-增加卜算子统计"><a href="#2-3-增加卜算子统计" class="headerlink" title="2.3 增加卜算子统计"></a>2.3 增加卜算子统计</h2><p>主要参考Rayqian的博客<a href="https://qianlei6148.github.io/2018/10/09/hexo%E6%A8%A1%E7%89%88yilia%E6%B7%BB%E5%8A%A0%E8%AE%BF%E9%97%AE%E9%87%8F/" target="_blank" rel="noopener">hexo模版yilia添加访问量</a>实现，具体做法很简单，就是在你的themes/yilia/layout/_partial/footer.ejs的“class=”footer-left””前添加脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script async src=&quot;https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>然后在该文件的以下位置的下面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;footer-right&quot;&gt;</span><br><span class="line">&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot;&gt;Hexo&lt;/a&gt;  Theme &lt;a href=&quot;https://github.com/litten/hexo-theme-yilia&quot; target=&quot;_blank&quot;&gt;Yilia&lt;/a&gt; by Litten</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>添加如下统计信息即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;powered-by&quot;&gt;</span><br><span class="line">      &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;</span><br><span class="line">          本站总访客:&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt; ||</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;</span><br><span class="line">          本站总访问量:&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次 ||</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">      &lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class="line">          本文总访问量:&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>然后就可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在本地查看啦，如果你发现数字很大，那是因为本地的测试地址大家都一样，你上传到github，再打开你的域名地址就会发现从0开始了！</p><p>目前的问题是，不蒜子的官方服务网站是<a href="http://service.ibruce.info/" target="_blank" rel="noopener">不蒜子</a>，目前最大的弊端就是不开放注册，所以对于运行了一段时间的网站，不蒜子的数据都是从1开始，没办法设置，只有等后期开放注册之后，登入网站才能对统计计数进行设置。</p><h2 id="2-4-增加头像旋转动画"><a href="#2-4-增加头像旋转动画" class="headerlink" title="2.4 增加头像旋转动画"></a>2.4 增加头像旋转动画</h2><p>主要参考Rayqian的博客<a href="https://qianlei6148.github.io/2018/10/01/hexo%E6%A8%A1%E7%89%88yilia%E5%A4%B4%E5%83%8F%E5%A2%9E%E5%8A%A0%E6%97%8B%E8%BD%AC%E6%95%88%E6%9E%9C/" target="_blank" rel="noopener">hexo模版yilia头像增加旋转效果</a>实现<br>在themes\yilia\source\文件夹下新建一个css文件avatarrotation.css用来旋转360度<br>内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.left-col #header .profilepic img &#123;</span><br><span class="line">/* 控制旋转速度时间*/</span><br><span class="line">  -webkit-transition: -webkit-transform 1.0s ease-out;</span><br><span class="line">  -moz-transition: -moz-transform 1.0s ease-out;</span><br><span class="line">  transition: transform 1.0s ease-out;</span><br><span class="line">&#125;</span><br><span class="line">.left-col #header .profilepic img:hover &#123;</span><br><span class="line">/* 鼠标经过360% */</span><br><span class="line">  -webkit-transform: rotateZ(360deg);</span><br><span class="line">  -moz-transform: rotateZ(360deg);</span><br><span class="line">  transform: rotateZ(360deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在themes\yilia\layout_partial\head.ejs文件中添加创建的css文件：<br>找到&lt;%- partial(‘css’) %&gt;，在它的下面添加代码，把刚才写的文件添加进去，注意！！是在”&lt;%- partial(‘css’) %&gt;”这行的下面添加，否则，你懂的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if (theme.avatarrotation)&#123; %&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;/./avatarrotation.css&quot;&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>最后在主题文件hexo\blog\themes\yilia\_config.yml中的结尾添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#头像是否旋转(如果不要旋转取false)</span><br><span class="line">avatarrotation: true</span><br></pre></td></tr></table></figure><p>头像就可以旋转了！</p><h2 id="2-5-增加文章目录"><a href="#2-5-增加文章目录" class="headerlink" title="2.5 增加文章目录"></a>2.5 增加文章目录</h2><p>直接在yilia目录下的_config.yml配置toc属性即可</p><blockquote><p>toc: 0    #不开启目录<br>toc: 1    #文章.md文件添加”toc:true”属性的才有目录<br>toc: 2    #所有文章开启目录</p></blockquote><p>注意！！！文章Markdown文件一定要从一级标题开始写，直接从二级标题无法生成目录！！！</p><h2 id="2-6-增加音乐播放器"><a href="#2-6-增加音乐播放器" class="headerlink" title="2.6 增加音乐播放器"></a>2.6 增加音乐播放器</h2><p>本想着直接使用网易云音乐外链的连接直接实无奈，网易云音乐由于版权限制，取消了该项功能，但是，只要思想不落后，办法总比困难多！这部分，主要参考了<a href="https://www.kingek.com/2018/05/15/Hexo_2/" target="_blank" rel="noopener">浅暮的加入音乐播放器</a>的内容，略作修改。。。。</p><h3 id="2-6-1-先去找网易云音乐的歌单的数据："><a href="#2-6-1-先去找网易云音乐的歌单的数据：" class="headerlink" title="2.6.1 先去找网易云音乐的歌单的数据："></a>2.6.1 先去找网易云音乐的歌单的数据：</h3><p>是的，现在，当我们打开<a href="https://music.163.com" target="_blank" rel="noopener">网易云音乐</a> 的时候，依然是能看到生成外链播放器超链接的，不过当我们点击时，对，可爱的“由于版权保护，无法生成外链。”的提示框就出现了。。。。<br><img src="https://i.loli.net/2019/09/06/yntA5fsEwZeX2Kg.jpg" alt="011.jpg"></p><p>但是，提示仍然不能阻挡我们破墙的脚步！<br>根据网上大家的说法，我尝试了以下两种办法，其实，第2种办法是看到第1种办法的结果才知道的。。。</p><p><strong>先说方法一：</strong><br>方法一主要是根据<a href="https://www.cnblogs.com/yuan2333/p/7244380.html" target="_blank" rel="noopener">信天翁之听雨的网易云音乐歌单生成外链播放器</a> 实现的，具体操作也差不多。<br>首先就是<strong>分享歌单</strong><br><img src="https://i.loli.net/2019/09/06/IEscKhkqtfUSvMj.jpg" alt="012.jpg"><br>然后打开分享界面的歌单链接<br><img src="https://i.loli.net/2019/09/06/CnztAdalFx47wsb.jpg" alt="021.jpg"><br>打开后就是下图的样子啦<br><img src="https://i.loli.net/2019/09/06/t7C9mdKBb5SPwVF.jpg" alt="041.jpg"><br>点击审查元素（检查）ctrl+shift+i；<br>接着找到生成外链播放器这段文字直接双击复制前面的/outchain/0/113822843/<br>对，歌单id就是这个113822843啦！<br>细心的你一定看到了我1，2，3，4标的顺序，实际操作是2，3，4，但是看到1的时候，我就觉得自己还真是能折腾。。。。<br>所以，<br><strong>方法二：</strong><br>直接打开  我的主页→动态→分享歌单→看看地址栏里的<a href="https://music.163.com/#/playlist?id=113822843" target="_blank" rel="noopener">地址</a>中playlist?id= 多少就好了。。。<br><img src="https://i.loli.net/2019/09/06/Sbp8E5RmsjoqwtV.jpg" alt="031.jpg"><br>不过也不白忙活，总有新发现不是么？哈哈</p><h3 id="2-6-2-再去实现播放器功能："><a href="#2-6-2-再去实现播放器功能：" class="headerlink" title="2.6.2 再去实现播放器功能："></a>2.6.2 再去实现播放器功能：</h3><p>再去找了<a href="https://aplayer.js.org/#/" target="_blank" rel="noopener">Aplayer</a>与<a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a>两个配合使用<br>具体使用点击<a href="https://aplayer.js.org/#/home" target="_blank" rel="noopener">Aplyer文档</a>，<a href="https://github.com/metowolf/MetingJS" target="_blank" rel="noopener">MetingJS</a>有详细的教程。<br>先将js资源加入到theme/yilia/layout/_partial/head.ejs的head标签中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/aplayer@1.10.1/dist/APlayer.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在theme/yilia/layout/_partial/layout.ejs的第8行下</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;%- partial(&apos;_partial/left-col&apos;, null, &#123;cache: !config.relative_link&#125;) %&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>加上：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;aplayer&quot;</span><br><span class="line">  data-id=&quot;网易云歌单ID&quot;</span><br><span class="line">  data-server=&quot;netease&quot;    //可以更改为其他</span><br><span class="line">  data-type=&quot;playlist&quot;     //可以切换单曲或歌单</span><br><span class="line">  data-list-max-height=&quot;199px&quot;  //如果为歌单，规定歌单最大长度</span><br><span class="line">  data-list-folded=&quot;true&quot;  //歌单折叠</span><br><span class="line">  data-preload=&quot;auto&quot;      //歌单预载</span><br><span class="line">  data-loop=&quot;all&quot;          //歌单循环</span><br><span class="line">  data-autoplay=“false”    //自动播放</span><br><span class="line">  style=&quot;top:23%;&quot;&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>如果想在移动端也加上播放列表，需要在theme/yilia/layout/_partial/mobile-nav.ejs第二行加上上面的代码。</p><p>以上参数解释如下：</p><blockquote><table><thead><tr><th>参数</th><th>是否必须</th><th>默认值</th><th>描述&amp;可选值</th></tr></thead><tbody><tr><td>data-id</td><td>是</td><td></td><td>单曲ID / 歌单ID / 专辑ID / 搜索关键词</td></tr><tr><td>data-server</td><td>是</td><td></td><td>音乐平台：<code>netease</code>,<code>tencent</code>,<code>kugou</code>,<code>xiami</code>,<code>baidu</code></td></tr><tr><td>data-type</td><td>是</td><td></td><td>音乐类型：<code>song</code>,<code>playlist</code>,<code>album</code>,<code>search</code>,<code>artist</code></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>data-autoplay</td><td>否</td><td><code>false</code></td><td>是否自动播放，移动端浏览器不支持该选项</td></tr><tr><td>data-mutex</td><td>否</td><td><code>true</code></td><td>播放时是否暂停其他<code>APlayer</code>对象</td></tr><tr><td>data-listmaxheight</td><td>否</td><td><code>340px</code></td><td>播放列表最高高度</td></tr><tr><td>data-preload</td><td>否</td><td><code>auto</code></td><td>音乐预加载模式：<code>none</code>, <code>metadata</code>, <code>auto</code></td></tr><tr><td>data-theme</td><td>否</td><td><code>#2980b9</code></td><td>主题色</td></tr><tr><td>data-mini</td><td>否</td><td><code>false</code></td><td>是否开启迷你模式</td></tr><tr><td>data-loop</td><td>否</td><td><code>all</code></td><td>循环方式：<code>all</code>, <code>one</code>, <code>none</code></td></tr><tr><td>data-order</td><td>否</td><td><code>list</code></td><td>播放顺序：<code>list</code>, <code>random</code></td></tr><tr><td>data-lrc</td><td>否</td><td><code>false</code></td><td></td></tr><tr><td>data-list-folded</td><td>否</td><td><code>false</code></td><td>歌单列表初始时是否折叠</td></tr><tr><td>data-volume</td><td>否</td><td><code>0.7</code></td><td>用户未自定义前的默认初始化音量</td></tr><tr><td><code>&gt;&gt;</code></td><td></td><td></td><td></td></tr></tbody></table></blockquote><p>配置参照这个官方表</p><table><thead><tr><th>Name</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>container</td><td>document.querySelector(‘.aplayer’)</td><td>player container</td></tr><tr><td>fixed</td><td>false</td><td>enable fixed mode, <a href="https://aplayer.js.org/#/home?id=fixed-mode" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>mini</td><td>false</td><td>enable mini mode, <a href="https://aplayer.js.org/#/home?id=mini-mode" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>autoplay</td><td>false</td><td>audio autoplay</td></tr><tr><td>theme</td><td>‘#b7daff’</td><td>main color</td></tr><tr><td>loop</td><td>‘all’</td><td>player loop play, values: ‘all’, ‘one’, ‘none’</td></tr><tr><td>order</td><td>‘list’</td><td>player play order, values: ‘list’, ‘random’</td></tr><tr><td>preload</td><td>‘auto’</td><td>values: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>volume</td><td>0.7</td><td>default volume, notice that player will remember user setting, default volume will not work after user set volume themselves</td></tr><tr><td>audio</td><td>-</td><td>audio info, should be an object or object array</td></tr><tr><td>audio.name</td><td>-</td><td>audio name</td></tr><tr><td>audio.artist</td><td>-</td><td>audio artist</td></tr><tr><td>audio.url</td><td>-</td><td>audio url</td></tr><tr><td>audio.cover</td><td>-</td><td>audio cover</td></tr><tr><td>audio.lrc</td><td>-</td><td><a href="https://aplayer.js.org/#/home?id=lrc" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>audio.theme</td><td>-</td><td>main color when switching to this audio, it has priority over the above theme</td></tr><tr><td>audio.type</td><td>‘auto’</td><td>values: ‘auto’, ‘hls’, ‘normal’ or other custom type, <a href="https://aplayer.js.org/#/home?id=mse-support" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>customAudioType</td><td>-</td><td><a href="https://aplayer.js.org/#/home?id=mse-support" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>mutex</td><td>true</td><td>prevent to play multiple player at the same time, pause other players when this player start play</td></tr><tr><td>lrcType</td><td>0</td><td><a href="https://aplayer.js.org/#/home?id=lrc" target="_blank" rel="noopener">see more details</a></td></tr><tr><td>listFolded</td><td>false</td><td>indicate whether list should folded at first</td></tr><tr><td>listMaxHeight</td><td>-</td><td>list max height</td></tr><tr><td>storageName</td><td>‘aplayer-setting’</td><td>localStorage key that store player setting</td></tr></tbody></table><h2 id="2-7-增加了一个分类页面"><a href="#2-7-增加了一个分类页面" class="headerlink" title="2.7 增加了一个分类页面"></a>2.7 增加了一个分类页面</h2><p>这部分全抄了<a href="https://tding.top/archives/9a232bbe.html" target="_blank" rel="noopener">小丁的个人博客的Hexo-Yilia 进阶笔记</a></p><h3 id="2-7-1-添加-categories-链接"><a href="#2-7-1-添加-categories-链接" class="headerlink" title="2.7.1 添加 categories 链接"></a>2.7.1 添加 categories 链接</h3><p>打开 <code>yilia/_config.yml</code> 文件，menu 处做出以下修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  主页: /</span><br><span class="line">  分类: /categories</span><br><span class="line">  归档: /archives</span><br></pre></td></tr></table></figure><h3 id="2-7-2-分类页面的构建"><a href="#2-7-2-分类页面的构建" class="headerlink" title="2.7.2 分类页面的构建"></a>2.7.2 分类页面的构建</h3><ul><li>新建 categories 页面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>该命令在 source 目录下生成一个 categories 目录，categories 目录下有一个 index.md 文件。</p><ul><li>修改 categories/index.md 为：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date: 2018-06-11 10:13:21</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false---</span><br></pre></td></tr></table></figure><ul><li>生成 html</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>访问 <code>http://localhost:4000/categories/</code> ，即可看到 categories 页面，只不过现在的页面只有标题。</p><h3 id="2-7-3-修改-yilia-主题"><a href="#2-7-3-修改-yilia-主题" class="headerlink" title="2.7.3 修改 yilia 主题"></a>2.7.3 修改 yilia 主题</h3><p>修改 <code>yilia\source\main.0cf68a.css</code>，将下面的内容添加进去：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">category-all-page &#123;</span><br><span class="line">    margin: <span class="number">30</span>px <span class="number">40</span>px <span class="number">30</span>px <span class="number">40</span>px;</span><br><span class="line">    position: relative;</span><br><span class="line">    min-height: <span class="number">70</span>vh;</span><br><span class="line">&#125;  .category-all-page h2 &#123;</span><br><span class="line">    margin: <span class="number">20</span>px <span class="number">0</span>;</span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-all-title &#123;</span><br><span class="line">    text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.category-all-page .category-all &#123;</span><br><span class="line">    margin-top: <span class="number">20</span>px;</span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list &#123;    </span><br><span class="line">margin: <span class="number">0</span>;</span><br><span class="line">    padding: <span class="number">0</span>;</span><br><span class="line">    list-style: none;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-item-list-item &#123;  </span><br><span class="line">margin: <span class="number">10</span>px <span class="number">15</span>px;</span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-item-list-count &#123;    </span><br><span class="line">color: $grey;  </span><br><span class="line">&#125;</span><br><span class="line">.category-all-page .category-list-item-list-count:before &#123;</span><br><span class="line">    display: inline;    </span><br><span class="line">content: <span class="string">" ("</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-item-list-count:after &#123;    </span><br><span class="line">display: inline;    </span><br><span class="line">content: <span class="string">") "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-item &#123;    </span><br><span class="line">margin: <span class="number">10</span>px <span class="number">10</span>px;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-count &#123;    </span><br><span class="line">color: $grey;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-count:before &#123;    </span><br><span class="line">display: inline;    content: <span class="string">" ("</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">.category-all-page .category-list-count:after &#123;    </span><br><span class="line">display: inline;    content: <span class="string">") "</span>;  </span><br><span class="line">&#125; </span><br><span class="line">.category-all-page .category-list-child &#123;    </span><br><span class="line">padding-left: <span class="number">10</span>px;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-7-4-多层分类"><a href="#2-7-4-多层分类" class="headerlink" title="2.7.4 多层分类"></a>2.7.4 多层分类</h3><p>新建 <code>yilia/layout/categories.ejs</code>，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;article class=&quot;article article-type-post show&quot;&gt;  </span><br><span class="line">  &lt;header class=&quot;article-header&quot; style=&quot;border-bottom: 1px solid #ccc&quot;&gt;  </span><br><span class="line">  &lt;h1 class=&quot;article-title&quot; itemprop=&quot;name&quot;&gt;   </span><br><span class="line">    &lt;%= page.title %&gt;  </span><br><span class="line">  &lt;/h1&gt;  </span><br><span class="line">  &lt;/header&gt;  </span><br><span class="line">  </span><br><span class="line">  &lt;% if (site.categories.length)&#123; %&gt;  </span><br><span class="line">  &lt;div class=&quot;category-all-page&quot;&gt;    </span><br><span class="line">    &lt;h2&gt;共计&amp;nbsp;&lt;%= site.categories.length %&gt;&amp;nbsp;个分类&lt;/h2&gt;    </span><br><span class="line">    &lt;%- list_categories(site.categories, &#123;      </span><br><span class="line">      show_count: true,      </span><br><span class="line">      class: &apos;category-list-item&apos;,      </span><br><span class="line">      style: &apos;list&apos;,      </span><br><span class="line">      depth: 2,      </span><br><span class="line">      separator: &apos;&apos;    </span><br><span class="line">    &#125;) %&gt;  </span><br><span class="line">  &lt;/div&gt;  </span><br><span class="line">  &lt;% &#125; %&gt;</span><br><span class="line">  &lt;/article&gt;</span><br></pre></td></tr></table></figure><h3 id="2-7-5-修改自己的文章"><a href="#2-7-5-修改自己的文章" class="headerlink" title="2.7.5 修改自己的文章"></a>2.7.5 修改自己的文章</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">title: HTML入门笔记</span><br><span class="line">copyright: true</span><br><span class="line">date: 2018-11-23 21:07:15</span><br><span class="line">toc: true</span><br><span class="line">tags: [HTML,前端]</span><br><span class="line">categories: [前端,HTML]</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="2-8-Yilia主题自定义左侧背景图片"><a href="#2-8-Yilia主题自定义左侧背景图片" class="headerlink" title="2.8 Yilia主题自定义左侧背景图片"></a>2.8 Yilia主题自定义左侧背景图片</h2><p>yilia模版左侧背景需要的话可以自己设置<br>首先打开themes\yilia\layout\layout.ejs<br>在最上面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% var left_default = &apos;#fff&apos;; %&gt;</span><br></pre></td></tr></table></figure><p>作为默认值，如果你不加图片，就会默认为白色<br>接着在layout.ejs文件中找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;left-col&quot; q-class=&quot;show:isShow&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>在其中为它添加内联样式,结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;left-col&quot; q-class=&quot;show:isShow&quot; style=&quot;background: &lt;%= theme.style &amp;&amp; theme.style.left_ground ? theme.style.left_ground : left_default %&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>其中theme.style.left_ground中的left_ground就是主题配置文件_config.yml中style下的你所要添加的名称。<br>最后在主题的themes\yilia_config.yml中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 头像上面的背景颜色</span><br><span class="line"> header: &apos;rgba(0,0,0,0)&apos; #设置背景透明，不然头像上方是默认色</span><br><span class="line">#左侧头像板块的背景颜色</span><br><span class="line"> left_ground: &apos;url(/img/background.png)no-repeat 100%;background-size:cover;&apos;</span><br></pre></td></tr></table></figure><p>图像大小建议宽度490像素，高度1080像素</p><p>当然，如果需要修改左侧自己的名字、主页等字体的颜色的话，可以在\blog\themes\yilia\source\main.xxxxxx.css中搜索：</p><blockquote><p>.left-col #header a{color:</p></blockquote><p>将后面的#号后面的数字改成自己期望的字体颜色即可。<br>main.xxxxxx.css中xxxxxx是你自己的main.css文件之间的数字！</p><h2 id="2-9-增加一言"><a href="#2-9-增加一言" class="headerlink" title="2.9 增加一言"></a>2.9 增加一言</h2><p>这里，主要参考了<a href="https://lijinhongpassion.github.io/codeant/53891.html" target="_blank" rel="noopener">Code Ant</a>,效果如下：<br><img src="https://i.loli.net/2019/09/07/1X5SgmFPpzoIx3c.jpg" alt="05.jpg"><br>具体操作上，就是这样啦：</p><blockquote><p>//找到themes\yilia\layout_partial\tools.ejs，打开编辑找到如下代码块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;%if(theme.aboutme)&#123;%&gt;</span><br><span class="line">&gt;     &lt;div class="aboutme-wrap" id="js-aboutme"&gt;</span><br><span class="line">&gt; &lt;%=theme.aboutme%&gt;</span><br><span class="line">&gt; &lt;/div&gt;</span><br><span class="line">&gt; &lt;%&#125;%&gt;</span><br><span class="line">&gt; </span><br><span class="line">&gt; //用下面的代码替换掉</span><br><span class="line">&gt; &lt;%if(theme.aboutme)&#123;%&gt;</span><br><span class="line">&gt;     &lt;div class="aboutme-wrap"&gt;</span><br><span class="line">&gt; &lt;div style="display:;"&gt;</span><br><span class="line">&gt; &lt;script type="text/javascript" src="https://api.lwl12.com/hitokoto/v1?encode=js&amp;charset=utf-8"&gt;&lt;/script&gt;</span><br><span class="line">&gt; &lt;p style="margin:0 20px 0 20px;"&gt;</span><br><span class="line">&gt; &lt;span id="lwlhitokoto"&gt;</span><br><span class="line">&gt; &lt;script&gt;</span><br><span class="line">&gt; lwlhitokoto();</span><br><span class="line">&gt; &lt;/script&gt;</span><br><span class="line">&gt; &lt;/span&gt;</span><br><span class="line">&gt; &lt;/p&gt;</span><br><span class="line">&gt; &lt;p id="js-aboutme" style="margin:0 20px 0 20px;"&gt;&lt;%=theme.aboutme%&gt;&lt;/P&gt;</span><br><span class="line">&gt; &lt;/div&gt;</span><br><span class="line">&gt; &lt;/div&gt;</span><br><span class="line">&gt;     &lt;%&#125;%&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><h2 id="2-10-增加Google和百度收录"><a href="#2-10-增加Google和百度收录" class="headerlink" title="2.10 增加Google和百度收录"></a>2.10 增加Google和百度收录</h2><h3 id="2-10-1-提交给Google站长"><a href="#2-10-1-提交给Google站长" class="headerlink" title="2.10.1 提交给Google站长"></a>2.10.1 提交给Google站长</h3><h4 id="2-10-1-1-添加网址"><a href="#2-10-1-1-添加网址" class="headerlink" title="2.10.1.1 添加网址"></a>2.10.1.1 添加网址</h4><p>安装sitemap站点地图自动生成插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure><p>在站点配置文件hexo\blog\themes\yilia_config.yml中添加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 自动生成sitemap</span></span><br><span class="line">sitemap: </span><br><span class="line">  path: sitemap.xml</span><br><span class="line">baidusitemap:</span><br><span class="line">  path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>注:上面的格式一定要正确，一定要有缩进。直接复制我的就行。<br>配置好后，执行hexo g 就能在hexo\blog\public中生成sitemap.xml和baidusitemap.xml了,其中第一个是要提交给google的，后面那个是提交给Baidu的。</p><h5 id="每次生成的-CNAME-都是-yoursite-com-怎么解决？"><a href="#每次生成的-CNAME-都是-yoursite-com-怎么解决？" class="headerlink" title="每次生成的 CNAME 都是 yoursite.com 怎么解决？"></a>每次生成的 CNAME 都是 yoursite.com 怎么解决？</h5><p>之前每一次hexo d -g 都会出现访问不了网站，需要手动在github page的setting里重新设置一下，下面就是解决方案。</p><p>修改 _config.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">url: http://abc123.github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br></pre></td></tr></table></figure><h3 id="2-10-2-提交给Google站长"><a href="#2-10-2-提交给Google站长" class="headerlink" title="2.10.2 提交给Google站长"></a>2.10.2 提交给Google站长</h3><p>进入Google Search Console，相信大家都有Google账号吧。没有的话注册个账号吧，然后登录进去即可。</p><p>Google会让你验证你对网站的所有权，所以在这里用的是网址前缀。</p><h2 id="2-11-增加-Gitalk-评论系统"><a href="#2-11-增加-Gitalk-评论系统" class="headerlink" title="2.11 增加[Gitalk]评论系统"></a>2.11 增加[Gitalk]评论系统</h2><p>这一部分，花了大概一晚上的时间实现，具体说，可以是3-4h，主要原因，是有坑，有坑，还是有坑！<br>主要参考以下文章实现：<br><a href="https://hexo-guide.readthedocs.io/zh_CN/latest/third-service/[Gitalk]%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F.html#error-not-found" target="_blank" rel="noopener">Hexo 指南</a></p><h3 id="2-11-1-Gitalk-评论系统"><a href="#2-11-1-Gitalk-评论系统" class="headerlink" title="2.11.1 [Gitalk]评论系统"></a>2.11.1 [Gitalk]评论系统</h3><p><a href="https://github.com/gitalk/gitalk/blob/master/readme-cn" target="_blank" rel="noopener">gitalk</a>是一个基于<code>github</code>开发的评论插件，它将文章评论以<code>issues</code>形式保存在<code>github</code>仓库中</p><h3 id="2-11-2-Gitalk-评论系统实现步骤"><a href="#2-11-2-Gitalk-评论系统实现步骤" class="headerlink" title="2.11.2 [Gitalk]评论系统实现步骤"></a>2.11.2 [Gitalk]评论系统实现步骤</h3><p>实现步骤如下：</p><h4 id="2-11-2-1-注册github应用"><a href="#2-11-2-1-注册github应用" class="headerlink" title="2.11.2.1 注册github应用"></a>2.11.2.1 注册<code>github</code>应用</h4><p>注册<code>github</code>应用</p><p>进入github注册页面：<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">Register a new OAuth application</a></p><p><img src="https://hexo-guide.readthedocs.io/zh_CN/latest/_images/register-github.png" alt="../_images/register-github.png"></p><ul><li>Application name：应用名</li><li>Homepage URL：网站地址</li><li>Application description：应用描述</li><li>Authorization callback URL：网站地址</li></ul><p>注册成功后会生成<code>Client ID</code>和<code>Client Secret</code></p><h4 id="2-11-2-2-yilia配置"><a href="#2-11-2-2-yilia配置" class="headerlink" title="2.11.2.2 yilia配置"></a>2.11.2.2 <code>yilia</code>配置</h4><ol><li>修改主题_config.yml，以我的博客为例子，也就是修改/themes/yilia/_config.yml文件。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Gitalk</span><br><span class="line"># Demo: https://gitalk.github.io</span><br><span class="line"># Reference: https://asdfv1929.github.io/2018/01/20/gitalk/, https://liujunzhou.top/2018/8/10/gitalk-error/</span><br><span class="line">gitalk:</span><br><span class="line">    enable: false</span><br><span class="line">    github_id: &apos;&apos;# Github repo owner</span><br><span class="line">    repo: &apos;&apos;# Repository name to store issues.</span><br><span class="line">    client_id: &apos;&apos;# Github Application Client ID</span><br><span class="line">    client_secret: &apos;&apos;# Github Application Client Secret</span><br><span class="line">    admin_user: &apos;&apos;# GitHub repo owner and collaborators, only these guys can initialize github issues</span><br><span class="line">    distraction_free_mode: true# Facebook-like distraction free mode</span><br></pre></td></tr></table></figure><ul><li>设置<code>enable</code>为<code>true</code></li><li><code>github_id</code>填入<code>github</code>帐号</li><li><code>repo</code>填入<code>github</code>仓库名，评论将会以<code>issues</code>形式保存在该仓库下</li><li><code>client_id</code>填入注册生成的值</li><li><code>client_secret</code>填入注册生成的值</li><li><code>admin_user</code>填入<code>github</code>帐号，用于初始化评论账户</li></ul><ol start="2"><li>在layout/_partial/post目录下新增gitalk.ejs文件（该部分，我主要参考了<a href="https://ziven.cc/2018/07/03/Hexo%E4%B8%BB%E9%A2%98yilia%E5%A2%9E%E5%8A%A0gitalk%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/" target="_blank" rel="noopener">Ziven的Hexo主题yilia增加gitalk评论插件</a>），而问题，也就出现在了这儿，需要着重指出以下。具体见本文的2.11.2.3。<br>先说正事儿，直接上代码：</li></ol><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;div id="gitalk-container" style="padding: 0px 30px 0px 30px;"&gt;&lt;/div&gt; </span><br><span class="line">&gt; </span><br><span class="line">&gt; &lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"&gt;</span><br><span class="line">&gt; &lt;script src="https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&gt; &lt;script type="text/javascript"&gt;</span><br><span class="line">&gt; </span><br><span class="line">&gt; if(&lt;%=theme.gitalk.enable%&gt;)&#123;</span><br><span class="line">&gt; var gitalk = new Gitalk(&#123;</span><br><span class="line">&gt;   clientID: '&lt;%=theme.gitalk.ClientID%&gt;',</span><br><span class="line">&gt;   clientSecret: '&lt;%=theme.gitalk.ClientSecret%&gt;',</span><br><span class="line">&gt;   repo: '&lt;%=theme.gitalk.repo%&gt;',</span><br><span class="line">&gt;   owner: '&lt;%=theme.gitalk.githubID%&gt;',</span><br><span class="line">&gt;   admin: ['&lt;%=theme.gitalk.adminUser%&gt;'],</span><br><span class="line">&gt;   id: '&lt;%= page.date %&gt;',</span><br><span class="line">&gt;   distractionFreeMode: '&lt;%=theme.gitalk.distractionFreeMode%&gt;'</span><br><span class="line">&gt; &#125;)</span><br><span class="line">&gt; gitalk.render('gitalk-container') </span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &lt;/script&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ol start="3"><li>修改source-src/css/目录下comment.scss文件</li></ol><blockquote><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-id">#disqus_thread</span>, <span class="selector-class">.duoshuo</span>, <span class="selector-class">.cloud-tie-wrapper</span>, <span class="selector-id">#SOHUCS</span>, <span class="selector-id">#gitment-ctn</span>, <span class="selector-id">#gitalk-container</span> &#123;</span><br><span class="line">&gt; <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">30px</span> <span class="meta">!important</span>;</span><br><span class="line">&gt; <span class="attribute">min-height</span>: <span class="number">20px</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; </span><br><span class="line">&gt; <span class="selector-id">#SOHUCS</span> &#123;</span><br><span class="line">&gt; <span class="selector-id">#SOHU_MAIN</span> <span class="selector-class">.module-cmt-list</span> <span class="selector-class">.block-cont-gw</span> &#123;</span><br><span class="line">&gt; <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#c8c8c8</span> <span class="meta">!important</span>;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt; &#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>事实上，这一步，是增加了“#gitalk-container”这个参数。</p><ol start="4"><li>在layout/_partial目录下的article.ejs文件内新增gitalk相关的配置代码：</li></ol><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; &lt;% if(theme.gitalk.enable)&#123; %&gt;</span><br><span class="line">&gt;   &lt;%- partial('post/gitalk', &#123;</span><br><span class="line">&gt;       key: post.slug,</span><br><span class="line">&gt;       title: post.title,</span><br><span class="line">&gt;       url: config.url+url_for(post.path)</span><br><span class="line">&gt;     &#125;) %&gt;</span><br><span class="line">&gt;   &lt;% &#125; %&gt;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>其实，以上步骤操作完成后，已经可以看到Gitalk的评论区了，但是，有个不忍的“Error: Not Found”标签，也就是说，我们的配置，仍然有问题。</p><h4 id="2-11-2-3-Trouble-Shotting"><a href="#2-11-2-3-Trouble-Shotting" class="headerlink" title="2.11.2.3 Trouble Shotting"></a>2.11.2.3 Trouble Shotting</h4><ol><li><code>Error: Not Found</code><br>根据<a href="https://hexo-guide.readthedocs.io/zh_CN/latest/third-service/[Gitalk]%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F.html#error-not-found" target="_blank" rel="noopener">Hexo 指南</a>的说法，直接引用如下：</li></ol><blockquote><p>问题描述：在文章底部评论框中出现错误信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; Error: Not Found</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>解决：和<code>repo</code>属性有关，换一个新的仓库，比如新建仓库<code>guestbook</code></p></blockquote><p>事实是，然并卵。<br>需要操作的，前面已经铺垫过了，也就是：<br>需要仔细查看gitalk.ejs文件、/themes/yilia/_config.yml这两个文件中，关于“github_id”、“client_id”、“client_secret”、“admin_user”和“clientID”、“clientSecret”、“owner”、“admin”对应的写法，两边对应一致了，这个“Error: Not Found”就没有啦！<br>下面是我的配置文件，大家可以做个参考：</p><p>我把gitalk部分的配置放在了/themes/yilia/_config.yml文件中关于 “#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment” 部分的下面，也就是：</p><blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; #5、Gitment</span><br><span class="line">&gt; gitment_owner: false      #你的 GitHub ID</span><br><span class="line">&gt; gitment_repo: &apos;&apos;          #存储评论的 repo</span><br><span class="line">&gt; gitment_oauth:</span><br><span class="line">&gt;   client_id: &apos;&apos;           #client ID</span><br><span class="line">&gt;   client_secret: &apos;&apos;       #client secret</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>的下面，具体如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#6、配置gitalk</span><br><span class="line">gitalk: </span><br><span class="line">  enable: true</span><br><span class="line">  #client_id: OAuth application注册成功获得</span><br><span class="line">  clientID: &apos;xxxxxxxxxx&apos;</span><br><span class="line">  clientSecret: &apos;xxxxxxxxx&apos; </span><br><span class="line">  #client_secret: OAuth application注册成功获得</span><br><span class="line">  #repo: 存储博客评论的仓库地址，可以是存储博客的仓库</span><br><span class="line">  repo: &apos;yangluom.github.io&apos;</span><br><span class="line">  #owner: github账户名</span><br><span class="line">  #admin: github账户名</span><br><span class="line">  owner: &apos;yangluom&apos;</span><br><span class="line">  admin: &apos;yangluom&apos;</span><br><span class="line">  distractionFreeMode: true</span><br><span class="line">  labels: [&apos;Gitalk&apos;]</span><br></pre></td></tr></table></figure><p>另外，在gitalk.ejs文件中的配置如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"gitalk-container"</span> style=<span class="string">"padding: 0px 30px 0px 30px;"</span>&gt;&lt;/div&gt; </span><br><span class="line"></span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(&lt;%=theme.gitalk.enable%&gt;)&#123;</span><br><span class="line">var gitalk = new Gitalk(&#123;</span><br><span class="line">  clientID: '&lt;%=theme.gitalk.clientID%&gt;',</span><br><span class="line">  clientSecret: '&lt;%=theme.gitalk.clientSecret%&gt;',</span><br><span class="line">  repo: '&lt;%=theme.gitalk.repo%&gt;',</span><br><span class="line">  owner: '&lt;%=theme.gitalk.owner%&gt;',</span><br><span class="line">  admin: ['&lt;%=theme.gitalk.admin%&gt;'],</span><br><span class="line">  id: '&lt;%= page.date %&gt;',</span><br><span class="line">  distractionFreeMode: '&lt;%=theme.gitalk.distractionFreeMode%&gt;'</span><br><span class="line">&#125;)</span><br><span class="line">gitalk.render('gitalk-container') </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>配置结束后，就可以</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>，在本地<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 查看效果了，没有问题的话，直接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure><p>部署在github上，访问即可。<br>需要提示的一点是，第一次使用的时候，需要登陆一下自己的github，完成授权，否则会出现“未找到相关的 Issues 进行评论，请联系xxx初始化创建”的提示。后面的，就不用多说了！<br>好吧，希望大家顺利过坑！</p><h2 id="2-12-增加文章置顶功能"><a href="#2-12-增加文章置顶功能" class="headerlink" title="2.12 增加文章置顶功能"></a>2.12 增加文章置顶功能</h2><h3 id="2-12-1-常规操作时间"><a href="#2-12-1-常规操作时间" class="headerlink" title="2.12.1 常规操作时间"></a>2.12.1 常规操作时间</h3><p>本部分主要参考<a href="https://zhuanlan.zhihu.com/p/33617563" target="_blank" rel="noopener">wangwlj大的Hexo博客优化之彻底解决博文置顶问题</a>进行，常规操作部分基本就是抄过来的啦。<br>直接用以下命令安装：</p><blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm uninstall hexo-generator-index --save</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> $ npm install hexo-generator-index-pin-top --save</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>然后在需要置顶的文章的<code>Front-matter</code>中加上<code>top: true</code>即可。比如下面这篇文章：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; ---</span><br><span class="line">&gt; title: hexo+GitHub博客搭建实战</span><br><span class="line">&gt; date: 2017-09-08 12:00:25</span><br><span class="line">&gt; categories: 博客搭建系列</span><br><span class="line">&gt; top: true</span><br><span class="line">&gt; ---</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>到目前为止，置顶功能已经可以实现了。</p><p>不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？</p><h2 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h2><p>打开：<code>/blog/themes/next/layout/_macro</code> 目录下的<code>post.swig</code>文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt;        &#123;% if post.top %&#125;</span><br><span class="line">&gt;             &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">&gt;             &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">&gt;             &lt;span class=&quot;post-meta-divider&quot;&gt;|&lt;/span&gt;</span><br><span class="line">&gt;           &#123;% endif %&#125;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p>剩下的，就看大家的运气了！</p><h3 id="2-12-2-我的附加题和Trouble-shotting"><a href="#2-12-2-我的附加题和Trouble-shotting" class="headerlink" title="2.12.2 我的附加题和Trouble shotting"></a>2.12.2 我的附加题和Trouble shotting</h3><p>是的，以上是正常操作部分，于我，总是有附加题，这次的附加题出在了这里：<br>第一条命令完美执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm uninstall hexo-generator-index --save</span></span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fse                                                 vents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@                                                 1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;                                                 )</span><br><span class="line"></span><br><span class="line">up to date in 6.036s</span><br></pre></td></tr></table></figure><p>第二条命令完美不执行。。。。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-index-pin-top --save</span></span><br><span class="line">npm ERR! code ENOTFOUND</span><br><span class="line">npm ERR! errno ENOTFOUND</span><br><span class="line">npm ERR! network request to https://registry.npmjs.org/hexo-generator-index-pin-                                                 top failed, reason: getaddrinfo ENOTFOUND registry.npmjs.org registry.npmjs.org:                                                 443</span><br><span class="line">npm ERR! network This is a problem related to network connectivity.</span><br><span class="line">npm ERR! network In most cases you are behind a proxy or have bad network settin                                                 gs.</span><br><span class="line">npm ERR! network</span><br><span class="line">npm ERR! network If you are behind a proxy, please make sure that the</span><br><span class="line">npm ERR! network 'proxy' config is set properly.  See: 'npm help config'</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     C:\Users\luyou\AppData\Roaming\npm-cache\_logs\2019-09-06T14_59_53_                                                 873Z-debug.log</span><br></pre></td></tr></table></figure><p>查了很多说法，有让改<a href="https://registry.npmjs.org/" target="_blank" rel="noopener">https://registry.npmjs.org/</a> 的，但我试了，在我这里并未奏效，然后继续努力，发现github上<a href="https://github.com/npm/npm/issues/16661" target="_blank" rel="noopener">legodude17对于getaddrinfo EAI_AGAIN registry.npmjs.org error while npm install</a>的回复：<br><strong>Do you have a stable internet connection? Do you have a proxy or VPN?</strong></p><p>额，赶紧翻去查了查自己的代理设置，问题果然解决！！！</p><h2 id="2-13-增加网站运行时间"><a href="#2-13-增加网站运行时间" class="headerlink" title="2.13 增加网站运行时间"></a>2.13 增加网站运行时间</h2><p>主要参考<a href="https://www.jianshu.com/p/adb7640c97c2" target="_blank" rel="noopener">Evan_Vivian的Hexo 基于yilia主题及其它插件优化</a>实现，依然不多说废话，直接上扣子，对，这里面有备案信息、PV &amp; UV统计、网站运行时间、网站框架及模板的内容，跟前面的卜算子有重复，请酌情食用：</p><blockquote><p>修改 yilia/layout/_partial/footer.ej 内容为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> &lt;footer id=<span class="string">"footer"</span>&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   &lt;div class=<span class="string">"outer"</span>&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &lt;div id=<span class="string">"footer-info"</span>&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;div class=<span class="string">"footer-left"</span>&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &amp;copy; &lt;%= date(new Date(), <span class="string">'YYYY'</span>) %&gt; &lt;%= config.author || config.title %&gt; - &lt;a href=<span class="string">"http://www.miitbeian.gov.cn/"</span> target=<span class="string">"_blank"</span>&gt;京ICP备16022690号&lt;/a&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;/div&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;div class=<span class="string">"footer-right"</span>&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             &lt;a href=<span class="string">"https://hexo.io/zh-cn/"</span> target=<span class="string">"_blank"</span>&gt;Evan&lt;/a&gt;  Always Love&lt;a href=<span class="string">"https://github.com/litten/hexo-theme-yilia"</span> target=<span class="string">"_blank"</span>&gt; Vivian&lt;/a&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;/div&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;/div&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &lt;span id=<span class="string">"timeDate"</span>&gt;载入天数...&lt;/span&gt;&lt;span id=<span class="string">"times"</span>&gt;载入时分秒...&lt;/span&gt; &amp;||&amp; &lt;span id=<span class="string">"busuanzi_container_site_uv"</span>&gt;你是本博第 &lt;span id=<span class="string">"busuanzi_value_site_uv"</span>&gt;&lt;/span&gt; 位访客&lt;/span&gt; || &lt;span id=<span class="string">"busuanzi_container_site_pv"</span>&gt;历经 &lt;span id=<span class="string">"busuanzi_value_site_pv"</span>&gt;&lt;/span&gt; 次回眸才与你相遇&lt;/span&gt; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &lt;script&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         var now = new Date(); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         <span class="keyword">function</span> <span class="function"><span class="title">createtime</span></span>() &#123; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             var grt= new Date(<span class="string">"02/19/2017 22:02:00"</span>);//此处修改你的建站时间或者网站上线时间 </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             now.setTime(now.getTime()+250); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             <span class="keyword">if</span>(String(hnum).length ==1 )&#123;hnum = <span class="string">"0"</span> + hnum;&#125; minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             mnum = Math.floor(minutes); <span class="keyword">if</span>(String(mnum).length ==1 )&#123;mnum = <span class="string">"0"</span> + mnum;&#125; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             snum = Math.round(seconds); <span class="keyword">if</span>(String(snum).length ==1 )&#123;snum = <span class="string">"0"</span> + snum;&#125; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             document.getElementById(<span class="string">"timeDate"</span>).innerHTML = <span class="string">"本站已安全运行 "</span>+dnum+<span class="string">" 天 "</span>; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">             document.getElementById(<span class="string">"times"</span>).innerHTML = hnum + <span class="string">" 小时 "</span> + mnum + <span class="string">" 分 "</span> + snum + <span class="string">" 秒"</span>; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">         &#125; </span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     setInterval(<span class="string">"createtime()"</span>,250);</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">     &lt;/script&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   &lt;/div&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> &lt;/footer&gt;</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><h2 id="2-14-增加版权声明"><a href="#2-14-增加版权声明" class="headerlink" title="2.14 增加版权声明"></a>2.14 增加版权声明</h2><h3 id="2-14-1-在yilia配置文件中添加版权控件"><a href="#2-14-1-在yilia配置文件中添加版权控件" class="headerlink" title="2.14.1 在yilia配置文件中添加版权控件"></a>2.14.1 在yilia配置文件中添加版权控件</h3><p>找到<code>yilia/_config.yml</code>，<br>添加如下代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">## 版权声明 后续步骤请看下边</span><br><span class="line">declare_type: 2</span><br><span class="line">licensee_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br><span class="line">licensee_name: &apos;知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议&apos;</span><br></pre></td></tr></table></figure><h3 id="2-14-2在文章模板上添加上版权内容"><a href="#2-14-2在文章模板上添加上版权内容" class="headerlink" title="2.14.2在文章模板上添加上版权内容"></a>2.14.2在文章模板上添加上版权内容</h3><p>找到<code>themes/yilia/layout/_partial/article.ejs</code>，在 <code>&lt;% if ((theme.reward_type === 2 || (theme.reward_type === 1 &amp;&amp; post.reward)) &amp;&amp; !index){ %&gt;</code> 上边插入如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">  <span class="keyword">var</span> sUrl = url.replace(<span class="regexp">/index\.html$/</span>, <span class="string">''</span>);</span><br><span class="line">  sUrl = <span class="regexp">/^(http:|https:)\/\//</span>.test(sUrl) ? sUrl : <span class="string">'https:'</span> + sUrl;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> ((theme.declare_type === <span class="number">2</span> || (theme.declare_type === <span class="number">1</span> &amp;&amp; post.declare)) &amp;&amp; !index)&#123; %&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"declare"</span>&gt;</span><br><span class="line">    &lt;strong&gt;本文作者：&lt;<span class="regexp">/strong&gt;</span></span><br><span class="line"><span class="regexp">    &lt;% if(config.author != undefined)&#123; %&gt;</span></span><br><span class="line"><span class="regexp">      &lt;%= config.author%&gt;</span></span><br><span class="line"><span class="regexp">    &lt;% &#125;else&#123;%&gt;</span></span><br><span class="line"><span class="regexp">      &lt;font color="red"&gt;请在博客根目录“_config.yml”中填入正确的“author”&lt;/</span>font&gt;</span><br><span class="line">    &lt;%&#125;%&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;strong&gt;本文链接：&lt;<span class="regexp">/strong&gt;</span></span><br><span class="line"><span class="regexp">    &lt;%= sUrl%&gt;</span></span><br><span class="line"><span class="regexp">    &lt;br&gt;</span></span><br><span class="line"><span class="regexp">    &lt;strong&gt;版权声明：&lt;/</span>strong&gt;</span><br><span class="line">    本作品采用</span><br><span class="line">    &lt;a rel=<span class="string">"license"</span> href=<span class="string">"&lt;%= theme.licensee_url%&gt;"</span>&gt;&lt;%= theme.licensee_name%&gt;&lt;/a&gt;</span><br><span class="line">    进行许可。转载请注明出处！</span><br><span class="line">    &lt;% <span class="keyword">if</span>(theme.licensee_img != <span class="literal">undefined</span>)&#123; %&gt;</span><br><span class="line">      &lt;br&gt;</span><br><span class="line">      &lt;a rel=<span class="string">"license"</span> href=<span class="string">"&lt;%= theme.licensee_url%&gt;"</span>&gt;&lt;img alt="知识共享许可协议" style="border-width:0" src="&lt;%=    theme.licensee_img%&gt;"/&gt;&lt;/a&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;% &#125; else &#123;%&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="declare" hidden="hidden"&gt;&lt;/</span>div&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="2-14-3版权添加样式"><a href="#2-14-3版权添加样式" class="headerlink" title="2.14.3版权添加样式"></a>2.14.3版权添加样式</h3><p><code>vim yilia/source/main.0cf68a.css</code> 添加如下代码：</p><p><code>.declare {background-color: #eaeaea;margin-top: 2em;border-left: 3px solid #ff1700;padding: .5em 1em; }</code></p><h2 id="2-15-纠正代码块行号显示错乱"><a href="#2-15-纠正代码块行号显示错乱" class="headerlink" title="2.15 纠正代码块行号显示错乱"></a>2.15 纠正代码块行号显示错乱</h2><p>这部分<a href="https://www.jianshu.com/p/adb7640c97c2" target="_blank" rel="noopener">Evan_Vivian的Hexo 基于yilia主题及其它插件优化</a>实现：<br>该问题是自动换行造成的，编辑 <code>yilia/source/main.0cf68a.css</code>：</p><blockquote><p>将 <code>white-space:pre-wrap;</code>删除，使用不自动换行的<code>white-space:pre;</code></p></blockquote><p>样式代码块部分会自动出现底部滚动条，行号错乱问题就没有了。</p><h1 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h1><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/a&gt;0. 前言&lt;/h1&gt;&lt;p&gt;  知道Github能做博客已经有相当长一段时间了，但是，由于能力、精力等多种因素的限制，博客一直处于下图的状态：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2019/08/09/rQ81lwcifpyDeTs.jpg&quot; alt=&quot;01.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;  说来，十分惭愧，这篇blog也已经从最初的8.09写到了08.12。&lt;br&gt;  作为“Hello， World！”之后的第一篇博客，主要是给自己使用GitPage搭建Blog做个记录，当然，如果能够帮助到后来的小伙伴们，那就更好啦！&lt;br&gt;  工欲善其事必先利其器，然额，贯于GitPage搭建blog的步骤，目前网上的各种教程较为分散，主要是以成功的在GitPage上成功实现Fork及访问为主，所以，也给很多小伙伴带来了神奇的困惑，自然而然冒出来的问题便是，然后嘞？然后我再咋搞呢？所以，本着如何较系统地从入门到实践的角度，记录下本次从搭建到第一篇博客发布的过程，也算是从本人的角度对使用Github Page搭建博客过程的一个Trouble Shotting的记录。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://yangluom.github.io/categories/Blog/"/>
    
      <category term="Github" scheme="https://yangluom.github.io/categories/Blog/Github/"/>
    
    
      <category term="Hexo" scheme="https://yangluom.github.io/tags/Hexo/"/>
    
      <category term="Yilia" scheme="https://yangluom.github.io/tags/Yilia/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yangluom.github.io/2019/07/25/hello-world/"/>
    <id>https://yangluom.github.io/2019/07/25/hello-world/</id>
    <published>2019-07-25T13:09:53.914Z</published>
    <updated>2019-08-19T16:03:45.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure> <a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
